{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Home","text":""},{"location":"#welcome","title":"Welcome","text":"<p>Welcome to the Xbox One Research wiki!</p> <p>This is a place where information about the Xbox One console can be shared. Things are currently slow but will be adding when we can.</p> <p>See FAQ for frequently asked questions.</p>"},{"location":"#getting-started","title":"Getting started","text":""},{"location":"#general","title":"General","text":"<ul> <li>Exploits</li> <li>Codenames</li> </ul>"},{"location":"#hardware","title":"Hardware","text":"<ul> <li>Console revisions</li> <li>CPU</li> <li>Southbridge</li> <li>eMMC / Flash</li> <li>Wifi</li> <li>Ethernet</li> <li>Optical Disc Drive</li> <li>RF unit</li> </ul>"},{"location":"#software","title":"Software","text":"<ul> <li>Bootanimation</li> <li>Bootloaders</li> <li>Certificates</li> <li>Flash (XBFS)</li> <li>Hard drive</li> <li>Security Processor</li> <li>Special NTFS USB files</li> <li>Telemetry</li> <li>Protocol URIs (Deep links)</li> <li>Xbox Device Portal</li> <li>Xbox Game Disc</li> <li>Xbox Operating System</li> <li>Xbox UI</li> <li>Xbox WinRT</li> <li>XCRDUtil</li> <li>DefaultApp</li> </ul>"},{"location":"#file-formats","title":"File formats","text":"<ul> <li>Xbox Virtual Drives (XVD)</li> <li>XVI</li> <li>XCT</li> <li>VBI</li> <li>Savegames</li> </ul>"},{"location":"#dev-mode","title":"Dev Mode","text":"<ul> <li>Devkit types</li> <li>Setting up your console</li> <li>Installing Compatible Software</li> <li>Creating your own Windows User</li> <li>XTF APIs</li> </ul>"},{"location":"#important","title":"Important","text":"<p>We do our best to ensure that we are respectful towards the research conducted on the Xbox One and Series. However, if there is any issues we are open for discussion and will work with Microsoft accordingly.</p>"},{"location":"Edge-Browser-File-System-Exposure/","title":"Xbox Edge Browser - File System Exposure","text":""},{"location":"Edge-Browser-File-System-Exposure/#metadata","title":"Metadata","text":"Release date unknown   Author TitleOS   Classification File Access   Patched unknown (presumed yes)   Patch date unknown   First patched system version unknown   Source https://titleos.dev/xploring-xbox/"},{"location":"Edge-Browser-File-System-Exposure/#info","title":"Info","text":"<p>Access local volumes using the Edge browser.</p> <ul> <li>Edge\u2019s address bar allowed access of local files on the device via the <code>File:\\\\</code> protocol.</li> <li>This functionality is used for viewing local PDFs, etc but as the Xbox file system isn\u2019t normally accessible, this allowed for the dumping of Xbox binaries.</li> <li>Any valid path would trigger a download prompt, copying the file to the user's download folder where it was accessible via the File Browser application.</li> </ul> <p>This has been mitigated by the fact that the File Explorer application was disabled due to \"Limited Usage\"</p>"},{"location":"Edge-Browser-File-System-Exposure/#instructions","title":"Instructions","text":"<ul> <li>Enter any valid path into the edge browser url bar and prepend <code>File:\\\\</code></li> </ul>"},{"location":"Edge-Browser-File-System-Exposure/#credits","title":"Credits:","text":"<p>https://titleos.dev/xploring-xbox/</p>"},{"location":"bootanimation/","title":"Bootanimation","text":"<p>Bootanimation is the Xbox loading animation showing at bootup of the console.</p> <p>The file is stored in XBFS as bootanim.dat.</p> <p>It uses a proprietary format, likely specific to the AMD GPU.</p>"},{"location":"bootanimation/#file-format","title":"File format","text":"<p>The file starts with a section header (BOOTANIM_SECTION_HEADER) and then followed by unknown data of size Header-&gt;SectionSize.</p> <p>If the following data starts with the header magic, an additional section follows.</p>"},{"location":"bootanimation/#bootanim_section_header","title":"BOOTANIM_SECTION_HEADER","text":"Offset Length Type Information     0x00 0x04 uint Magic (FSEG)   0x04 0x04 uint SectionIndex   0x08 0x04 uint SectionSize"},{"location":"bootanimation/#bootanim_date","title":"BOOTANIM_DATE","text":"Offset Length Type Information     0x00 0x?? ?? Unknown"},{"location":"bootloaders/","title":"Bootloaders","text":""},{"location":"bootloaders/#bootloaders","title":"Bootloaders","text":"<p>Bootloaders used on Xbox One.</p>"},{"location":"bootloaders/#spbl","title":"SPBL","text":"<p>Primary bootloader that is used for initialising the Security Processor, decrypting the future stages, verifying the console certificates, fuses and more. This sequence is split into 3 boot stages.</p> <ul> <li>0SP : Stored in SP ROM (factory)</li> <li>1SP : Patched into boot.bin</li> <li>2SP : Patched into boot.bin</li> </ul>"},{"location":"bootloaders/#smc","title":"SMC","text":""},{"location":"bootloaders/#2bl","title":"2BL","text":"<p>Started after the SP has completed its boot. Proceeds to intialise the rest of the console and then begins booting into the Host VBI.</p>"},{"location":"bootloaders/#scp","title":"SCP","text":"<p>(S)treaming (C)rypto (P)rocessor - internal crypto engine on the APU die. Data blob thats uploaded to the SCP, for initialization?! Initialization phase: Unknown, somewhere in between 2BL and VBI.</p>"},{"location":"bootloaders/#vbi","title":"VBI","text":"<p>Final boot stage which initialises the critical components of the operating system and essentially acts as a bootstrap.</p>"},{"location":"browser-access-while-offline/","title":"Browser access while offline","text":""},{"location":"browser-access-while-offline/#instructions","title":"Instructions","text":"<ul> <li>Set up a dns server and set it as default on your xbox one</li> <li>Redirect msftconnecttest.com to your HTTP server</li> <li>Place a blank text file at the root of your HTTP server named xboxncsi.txt (This tells the connection test that the file it tried to download was invalid. A valid one would have \"Xbox NCSI\" in the text file. )</li> <li>Profit?</li> </ul>"},{"location":"browser-access-while-offline/#source","title":"Source","text":"<p>User OsirisX on Gbatemp Video Proof</p>"},{"location":"certificates/","title":"Certificates","text":""},{"location":"certificates/#certificates","title":"Certificates","text":"<p>For verification of the console and as well as a method of securely determining the capabalities to enable.</p>"},{"location":"certificates/#console-certificate","title":"Console Certificate","text":"<p>Per-console certificate to verify and define the device. Stored in sp_s.cfg (offset: 0x5400) inside XBFS.</p> <p>Total Size: 0x400 bytes</p>    Offset Length Type Information     0x00 0x02 ushort Magic (CC)   0x02 0x02 ushort Size   0x04 0x02 ushort IssuerKeyId   0x06 0x02 ushort ProtocolVersion   0x08 0x04 uint32 IssueDate   0x0C 0x04 uint32 PspRevisionId   0x10 0x10 byte[] SocId   0x20 0x02 ushort GenerationId   0x22 0x01 byte ConsoleRegion   0x23 0x01 byte Reserved0   0x24 0x04 uint32 Reserved1   0x28 0x08 byte[] VendorId   0x30 0x100 byte[] AttestationPublicKey   0x130 0x100 byte[] ReservedPublicKey   0x230 0x0C byte[] ConsoleSerialNumber   0x23C 0x08 byte[] ConsoleSku   0x244 0x20 byte[] ConsoleSettingsDigest (SHA256)   0x264 0x0C byte[] ConsolePartNumber   0x270 0x10 byte[] HwSpecificData   0x280 0x180 byte[] RsaSignature"},{"location":"certificates/#boot-capability-certificate","title":"Boot Capability Certificate","text":"<p>Used to determine what type of developer features the console can use. Stored in certkeys.bin inside XBFS. Also check out Devkit types.</p>"},{"location":"certificates/#format","title":"Format","text":"<p>Total Size: 0x180 bytes</p>    Offset Length Type Information     0x00 0x02 ushort Magic (CP)   0x02 0x02 ushort Size   0x04 0x02 ushort ProtocolVersion   0x06 0x02 ushort IssuerKeyId   0x08 0x08 uint64 Issue Date   0x10 0x10 byte[] SoC ID   0x20 0x02 ushort GenerationId   0x22 0x01 byte AllowedStates   0x23 0x01 byte LastCapability   0x24 0x04 uint Flags   0x28 0x01 byte ExpireCentury   0x29 0x01 byte ExpireYear   0x2A 0x01 byte ExpireMonth   0x2B 0x01 byte ExpireDayOfMonth   0x2C 0x01 byte ExpireHour   0x2D 0x01 byte ExpireMinute   0x2E 0x01 byte ExpireSecond   0x2F 0x01 byte MinimumSpVersion   0x30 0x08 uint64 Minimum2blVersion   0x38 0x10 byte[] Nonce   0x48 0x38 byte[] Reserved   0x80 0x200 ushort[] Capabilities   0x280 0x180 byte[] RsaSignature"},{"location":"certificates/#capabilities","title":"Capabilities","text":"<p>Starting at offset 0x80, the capabilities are defined as 2 byte reversed entries. For example, 0x2001 - SRA_DEVKIT, which would be written as 01 20 in the certificate. An SRA Devkit's certificate would contain 0x2001 and 0x2002 respectively, while an MS Internal Devkit would contain 0x6001 and 0x6002 to enable host telnet.</p> <pre><code>enum CERTIFICATE_CAPABILITIES : ushort {\n    SRA_DEVKIT = 0x2001,\n    SRA_DEVKIT_DEBUG = 0x2002,\n    SRA_FILE_IO = 0x2003,\n    SRA_STREAM = 0x2004,\n    SRA_PUSH_DEPLOY = 0x2005,\n    SRA_PULL_DEPLOY = 0x2006,\n    SRA_PROFILING = 0x2007,\n    SRA_JS_PROFILING = 0x2008,\n    RECOVERY = 0x3001,\n    VS_CRASH_DUMP = 0x3002,\n    CRASH_DUMP = 0x3003,\n    REMOTE_MGMT = 0x3004,\n    VIEW_TRACING = 0x3005,\n    TCR_TOOL = 0x3006,\n    XSTUDIO = 0x3007,\n    GESTURE_BUILDER = 0x3008,\n    SPEECH_LAB = 0x3009,\n    SMARTGLASS_STUDIO = 0x300A,\n    NETWORK_FIDDLER = 0x300B,\n    ERA_DEVKIT = 0x4001,\n    HW_BERSINGSEA_DEBUG = 0x4002,\n    ERA_DEVKIT_DEBUG = 0x4003,\n    ERA_FILE_IO = 0x4004,\n    ERA_STREAM = 0x4005,\n    ERA_PUSH_DEPLOY = 0x4006,\n    ERA_PULL_DEPLOY = 0x4007,\n    ERA_EXTRA_MEM = 0x4008,\n    ERA_PROFILING = 0x4009,\n    MS_DEVKIT = 0x6001,\n    HW_CPU_DEBUG = 0x6002,\n    HW_FW_DEBUG = 0x6003,\n    HW_POWER_DEBUG = 0x6004,\n    MEMENC_DISABLED = 0x6005,\n    MEMENC_FIXED_KEY = 0x6006,\n    MEMENC_KEY_0 = 0x6007,\n    CERT_MTE_BOOST = 0x6008,\n    CERT_RIO_BOOST = 0x6009,\n    CERT_TEST_BOOST = 0x600A,\n    UPDATE_TESTER = 0x600B,\n    RED_CPU_CODE = 0x600C,\n    OS_PREVIEW = 0x600D,\n    RETAIL_DEBUGGER = 0x600E,\n    OFFLINE = 0x600F,\n    IGNORE_UPDATESEQUENCE = 0x6010,\n    CERT_QASLT = 0x6011,\n    GPU_FENCE_DEBUG = 0x6013,\n    HW_EN_MEM_SPEED_RETEST = 0x6014,\n    HW_EN_MEM_1GB_RETEST = 0x6015,\n    HW_EN_FUSE_READ = 0x6016,\n    HW_EN_POST_CODE_SECURE = 0x6017,\n    HW_EN_FUSE_OVR_RETEST = 0x6018,\n    HW_EN_MEM_UNLIM_RETEST = 0x6019,\n    ICT_TESTER = 0x601A,\n    LOADXVD_TESTER = 0x601B,\n    WIDE_THERMAL_THRESHOLDS = 0x601C,\n    MS_TESTLAB = 0x601D,\n    ALLOW_DISK_LICENSE = 0x601E,\n    ALLOW_SYSTEM_DOWNGRADE = 0x601F,\n    WIFI_TESTER = 0x6020,\n    GREEN_FIDDLER = 0x6021,\n    KIOSK_MODE = 0x6022,\n    FULL_MEDIA_AUTH = 0x6023,\n    HW_DEVTEST = 0x6024,\n    ALLOW_FUSE_FA = 0x6025,\n    ALLOW_SERIAL_CERT_UPLOAD = 0x6026,\n    ALLOW_INSTRUMENTATION = 0x6027,\n    WIFI_TESTER_DFS = 0x6028,\n    HOSTOS_HW_TEST = 0x6029,\n    HOSTOS_ODD_TEST = 0x602A,\n    REDUCE_MODE_TESTER = 0x7002,\n    SP_DEVKIT = 0x8001,\n    HW_SP_DEBUG = 0x8002,\n    SCP_DEBUG = 0x8003,\n    HW_SDF = 0x8004,\n    HW_ALL_DEBUG = 0x8005,\n    HW_AEB_DEBUG = 0x8006,\n    HW_BTG = 0x8007,\n    SP_TESTER = 0x8008,\n    SP_DEBUG_BUILD = 0x8009,\n    NO_FUSE_BLOW = 0x800A,\n    HW_DIS_N_CALIB_RETEST = 0x800B,\n    HW_DIS_CRIT_FUSE_CHK_RETEST = 0x800C,\n    GREEN_SRA_DEBUG = 0x800D,\n    GREEN_ERA_DEBUG = 0x800E,\n    HW_DIS_RNG_CHK_SECURE = 0x800F,\n    HW_EN_FUSE_OVRD_SECURE = 0x8010,\n    GREEN_HOST_DEBUG = 0x8011,\n    GREEN_ALLOW_DISK_LICENSES = 0x8012,\n    VIRT_CAP_DEVKIT_ANY_EQUIV = 0xF001,\n    VIRT_CAP_DEVKIT_INTERNAL_EQUIV = 0xF002,\n    VIRT_CAP_SP_DEVKIT_EQUIV = 0xF003\n};\n</code></pre> <p>Information about capabilities gathered from: <code>C:\\Windows\\DefaultApp\\XboxOneExtensions.dll</code></p>"},{"location":"codenames/","title":"Codenames","text":"<p>This page contains a list of known codenames for software, accesories, or other components of the Xbox one.</p>    Codename Product / App Name Type Description     Nui Kinect Hardware N/A   Zurich Xbox One Digital Tv Tuner Adapter Hardware N/A"},{"location":"compiling-for-xbox/","title":"Compiling for xbox","text":""},{"location":"compiling-for-xbox/#compiling-for-xbox","title":"Compiling for Xbox","text":"<p>Since the Xbox One's System operating system is based on OneCore we can use the libraries provided in Visual Studio and the Windows SDK. The primary library that will solve our needs is named: 'OneCore.lib' or 'OneCoreUAP.lib'. This is known as an umbrella library which links the common Win32 API's that are common among all Windows 10 devices. You can learn more here: https://docs.microsoft.com/en-us/windows/win32/apiindex/windows-umbrella-libraries</p>"},{"location":"compiling-for-xbox/#requirements","title":"Requirements","text":"<ul> <li>Recommended: CMake</li> <li>Visual Studio 2019/2017 w/ the following (depending on version):<ul> <li>MSVC v141 - VS 2017 C++ x64/x86 build tools (v14.16) &amp; MSVC v141<ul> <li>VS 2017 C++ x64/x86 Spectre-mitigated libs</li> </ul> </li> <li>MSVC v142 - VS 2019 C++ x64/x86 build tools (v14.22) &amp; MSVC v142<ul> <li>VS 2019 C++ x64/x86 Spectre-mitigated libs</li> </ul> </li> <li>Windows Universal CRT SDK</li> </ul> </li> <li>Windows 10 SDK (Latest)</li> </ul>"},{"location":"console-revisions/","title":"Console revisions","text":""},{"location":"console-revisions/#console-revisions","title":"Console revisions","text":""},{"location":"console-revisions/#revisions","title":"Revisions","text":"Revision Enum Information     DURANGO 0x10 First retail revision.   SILVERTON ZORRO 0x20 TBD   SILVERTON MANDA 0x21 TBD   CARMEL BASE 0x30 TBD   CARMEL 4K 0x31 TBD   EDMONTON 0x40 TBD   SCORPIO 0x50 TBD"},{"location":"console-revisions/#reading-revision-via-software","title":"Reading revision via software","text":"<p>C code</p> <pre><code>#define\u00a0CPUID_HW_REV\u00a00x4000000D\n\n#define\u00a0HW_REV_DURANGO\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a00x10\n#define\u00a0HW_REV_SILVERTON_ZORRO\u00a00x20\n#define\u00a0HW_REV_SILVERTON_MANDA\u00a00x21\n#define\u00a0HW_REV_CARMEL_BASE\u00a0\u00a0\u00a0\u00a0\u00a00x30\n#define\u00a0HW_REV_CARMEL_4K\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a00x31\n#define\u00a0HW_REV_EDMONTON\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a00x40\n#define\u00a0HW_REV_SCORPIO\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a00x50\n\nint\u00a0regs[4];\n__cpuid(regs,\u00a0CPUID_HW_REV);\nint\u00a0consoleRevId\u00a0=\u00a0regs[2]\u00a0&amp;\u00a00xFFFF;\n\nchar\u00a0*consoleRev\u00a0=\u00a0(char\u00a0*)calloc(1,\u00a00x100);\n\nswitch\u00a0(consoleRevId)\n{\ncase\u00a0HW_REV_DURANGO:\n\u00a0\u00a0\u00a0consoleRev\u00a0=\u00a0\"Durango\";\n\u00a0\u00a0\u00a0break;\ncase\u00a0HW_REV_SILVERTON_ZORRO:\n\u00a0\u00a0\u00a0consoleRev\u00a0=\u00a0\"Silverton\u00a0Zorro\";\n\u00a0\u00a0\u00a0break;\ncase\u00a0HW_REV_SILVERTON_MANDA:\n\u00a0\u00a0\u00a0consoleRev\u00a0=\u00a0\"Silverton\u00a0Manda\";\n\u00a0\u00a0\u00a0break;\ncase\u00a0HW_REV_CARMEL_BASE:\n\u00a0\u00a0\u00a0consoleRev\u00a0=\u00a0\"Carmel\u00a0Base\";\n\u00a0\u00a0\u00a0break;\ncase\u00a0HW_REV_CARMEL_4K:\n\u00a0\u00a0\u00a0consoleRev\u00a0=\u00a0\"Carmel\u00a04K\";\n\u00a0\u00a0\u00a0break;\ncase\u00a0HW_REV_EDMONTON:\n\u00a0\u00a0\u00a0consoleRev\u00a0=\u00a0\"Edmonton\";\n\u00a0\u00a0\u00a0break;\ncase\u00a0HW_REV_SCORPIO:\n\u00a0\u00a0\u00a0consoleRev\u00a0=\u00a0\"Scorpio\";\n\u00a0\u00a0\u00a0break;\ndefault:\n\u00a0\u00a0\u00a0consoleRev\u00a0=\u00a0\"Unknown\";\n}\nprintf(\"Console\u00a0Revision:\u00a0%s\u00a0(0x%04X)\\n\",\u00a0consoleRev,\u00a0consoleRevId);\n</code></pre>"},{"location":"console-revisions/#physical-identification","title":"Physical identification","text":"<p>Not known yet</p>"},{"location":"cpu/","title":"CPU","text":"<p>An AMD Jaguar APU is used on all Xbox One consoles. It features an embedded Radeon GPU.</p>"},{"location":"cpu/#models","title":"Models","text":"<ul> <li>AMD \"Jaguar\" 8-core APU X887732-001 DG3001FEG84HR (Xbox One)</li> <li>AMD \"Jaguar\" 8-Core APU (CPU clock: 1,75 GHz, GPU clock: 914 MHz) X949211-001 DG4001FYG87IA (Xbox One S)</li> <li>AMD \"Jaguar\" 8-Core APU (CPU clock: 2.3 GHz, GPU block: 1.17 GHz) X950118-002 DG5700GDA87IE (Xbox One X)</li> </ul>"},{"location":"cpu/#diagrams","title":"Diagrams","text":""},{"location":"cpu/#references","title":"References","text":"<ul> <li>Southbridge / SoC diagram by IEEE Computer Society</li> </ul>"},{"location":"creating-a-win-user/","title":"Creating a win user","text":""},{"location":"creating-a-win-user/#creating-a-windows-user","title":"Creating a Windows User","text":""},{"location":"creating-a-win-user/#prerequisites","title":"Prerequisites","text":"<p>This guide assumes you have already followed the Setup Dev Mode page found here on the Wiki. If you haven't, do so now. This guide can be skipped on ERA devkits by instead using xbrun or using an unattended script to start a system telnet session via WDP. </p>"},{"location":"creating-a-win-user/#copying-net1","title":"Copying Net1","text":"<p>Locate net1 on your local Windows installation at <code>C:\\Windows\\System32\\net1.exe.</code> Connect to SystemOS over sftp using the DevToolsUser creds explained above. If not already there, navigate to <code>D:\\DevelopmentFiles.</code> Copy net1.exe from your local PC to the SystemOS at this path. This is required as though SystemOS includes net/net1, they are restricted to certain certificate capabilities. This restriction doesn't appear to apply to copied versions of the exe, hence the instructions above. </p>"},{"location":"creating-a-win-user/#creating-your-user","title":"Creating your user","text":"<p>SSH into SystemOS using the DevToolsUser user. Navigate to <code>D:\\DevelopmentFiles</code> if not already there and run the following command to create a new Windows User. Replacing \"myexampleuser\" with the username of your choice, and \"supersecret\" with the password of your choice respectively. </p>"},{"location":"creating-a-win-user/#verifying-ssh","title":"Verifying SSH","text":"<p>After your user has been created, go ahead and exit out of the DevToolsUser ssh session. Then in a command prompt, run following command, replacing \"myexampleuser\" and the IP address with your devkit's IP address respectively. </p>  <p>Enter your password, and if everything went well, you should be dropped to a command prompt in your user folder.</p>"},{"location":"default-app/","title":"Default App","text":"<p>The coolest app Xbox family console offers: DefaultApp</p> <p>Aum Id: <code>DefaultApp_cw5n1h2txyewy!App</code></p>"},{"location":"default-app/#start-from-systemos-via-dev-mode","title":"Start from SystemOS via Dev Mode","text":"<p>Execute this: <code>SRAcmd.exe -LaunchApp DefaultApp_cw5n1h2txyewy!App</code></p>"},{"location":"default-app/#screenshots","title":"Screenshots","text":""},{"location":"development/","title":"Development","text":""},{"location":"development/#development","title":"Development","text":""},{"location":"development/#projects","title":"Projects","text":"<p>XRF XRF is a small utility written for the Xbox One System OS.</p> <p>xvdtool A command-line tool for manipulating Xbox One XVD &amp; XVC files.</p>"},{"location":"development/#resources","title":"Resources","text":"<p>Installing Compatible software</p>"},{"location":"device-portal/","title":"Device Portal","text":"<p>The Xbox one has a Device portal that enables developers to install apps and recieve other data</p>"},{"location":"device-portal/#managing-the-device-portal","title":"Managing the Device Portal","text":""},{"location":"device-portal/#stoping-the-device-portal","title":"Stoping the Device Portal","text":"<p><code>sc stop webmanagement</code></p>"},{"location":"device-portal/#starting-the-device-portal","title":"Starting the Device Portal","text":"<p><code>sc start webmanagement</code></p>"},{"location":"device-portal/#starting-the-device-portal-in-debug-mode","title":"Starting the Device Portal in debug mode","text":"<p><code>WebManagement.exe -debug -HttpPort 11443 -TraceLevel 5</code></p> <p>You will need to connect over HTTP rather than HTTPS on port 11443</p>"},{"location":"device-portal/#getting-additional-arguments-from-the-device-portal","title":"Getting additional arguments from the Device Portal","text":"<p><code>WebManagement.exe /?</code></p>"},{"location":"device-portal/#usage","title":"Usage","text":"<ul> <li>Setting up device portal</li> <li>Device portal pages</li> </ul>"},{"location":"device-portal/#api","title":"API","text":""},{"location":"device-portal/#api_1","title":"API","text":"<ul> <li>/api/os/machinename</li> <li>/api/app/packagemanager/package</li> <li>/api/app/packagemanager/register</li> <li>/api/app/packagemanager/upload</li> <li>/api/app/packagemanager/state</li> <li>/api/app/packagemanager/networkapp</li> <li>/api/appx/packagemanager/networkapp</li> <li>/api/appx/packagemanager/state</li> <li>/api/appx/packagemanager/package</li> </ul>"},{"location":"device-portal/#ext","title":"EXT","text":"<ul> <li>/ext/app/packagemanager/era/available</li> <li>/ext/app/packagemanager/era/check</li> <li>/ext/app/packagemanager/era/register</li> <li>/ext/app/packagemanager/era/registernetwork</li> <li>/ext/app/packagemanager/era/streaming</li> <li>/ext/app/packagemanager/era/upload</li> <li>/ext/app/deployinfo</li> <li>/ext/app/sshpins</li> <li>/ext/app/unregistered</li> <li>/ext/fiddler</li> <li>/ext/httpmonitor/sessions</li> <li>/ext/networkcredentials</li> <li>/ext/remoteinput</li> <li>/ext/remoteinput/controllers</li> <li>/ext/screenshot</li> <li>/ext/settings</li> <li>/ext/smb/developerfolder</li> <li>/ext/user</li> <li>/ext/xbox/info</li> <li>/ext/xboxlive/sandbox</li> </ul>"},{"location":"devkit-types/","title":"Devkit types","text":""},{"location":"devkit-types/#devkits","title":"Devkits","text":"<p>Most Xbox One devkits start out life as an off the shelf retail console (with the exception of special SP kits I will cover below). An Xbox One's devkit type and abilities or capabilities are defined by a file stored on the flash called \"certkeys.bin.\" - certkeys.bin is referred to as the Capability Certificate by the Platform Security Processor (PSP) and it will be referred to as such from here on out.</p> <p>It should be noted that capability certificates are locked to a particular console via the SOCID (Reported as Console ID in settings). The entire certificate is then signed to prevent tampering.</p> <p>A capability certificate defines what capabilities an Xbox One console is allowed to enable (This is regulated via the PSP and to a degree, HostOS.) The capabilities range from enabling Devmode and the respective developer services, ignoring requests to blowing e-fuses, HostOS telnet and Retail debugging, and much more.</p>"},{"location":"devkit-types/#devkit-types","title":"Devkit types","text":"<p>There are different types of devkits</p>    Name Identification Description     SRA Devkit 0x2001 SRA (Shared Resources Access) devkit, is a legacy kit used to develop WinRT (Windows 8) SRA App.   UWA Devkit 0x2001 This is the \"$20\" devkit, and allows for the development and debugging of UWP apps on SystemOS. This is the most common devkit certificate by far and expires every week.   ERA Devkit 0x4001 This is the devkit most people think of when they picture a Xbox One devkit. ERA devkits in addition to the UWA capabilites, also allows for the activation of the ERA VM partition in Devmode. This allows for  the development, debugging and profiling of XDK based games. This is also the lowest devkit that is able to connect to the PC XDK, due to the XTF services running on GameOS and SystemOS.   MS Devkit 0x6001 In addition to all the capabilities above, MS internal devkits enable a SYSTEM level telnet shell on all 3 operating systems (SystemOS, GameOS, and HostOS), however they are unable to run \"Green\" (Production) content like most games, and production builds of the Xbox OS. These certificates generally never expire.   SP Devkit 0x8001 SP devkits are the top-tier of the standard capability certificates. In addition to all the aforementioned abilities, they also allow for custom code to be ran on the PSP/Security Processor. This includes debug versions of the bootloaders like 2BL, and PSP firmware such as 1SP. Due to this ability, most SP devkits are not converted from standard retails and instead prepared from a virgin factory board (which has yet to have the PSP programmed.) These certificates also generally never expire.   Retail Devkit Unknown These devkits are Green versions of MS internal devkits. This allows them to debug retail games, run production versions of the Xbox OS, etc while all retaining the aforementioned mentioned capabilities.   Godbox Unknown Godboxes are the absolute top tier of devkit, capable of kernel-mode and user-mode debugging on all Green operating systems while connected to Production Xbox Live. There are two subtypes of Godboxes, Full Godboxes and Restricted Godboxes. Full Godboxes are retail or lower tier developer consoles converted into a permanent Godbox, in addition to having JTAG and serial headers soldered onto the motherboard. Restricted Godboxes are the exactly same as above, except for the fact that they require a constant connection to Microsoft's CORPNET to activate it's developer functions."},{"location":"devkit-types/#certificates","title":"Certificates","text":"<p>See Certificates</p>"},{"location":"devkit-types/#godbox-certificate","title":"Godbox Certificate","text":"<p>A magical capability certificate ($Diagnosis/debug.bin on a NTFS USB) that will temporaily activate a retail console as a limited Godbox for 24 hours. Kernel/User-Mode debugging is only possible on SystemOS and GameOS, not HostOS, and the temporary kit requires authentication against Live.</p>"},{"location":"devmode-priv-escalation-vsprofiling/","title":"SystemOS Elevation of privileges via VSProfiling account","text":""},{"location":"devmode-priv-escalation-vsprofiling/#metadata","title":"Metadata","text":"Release date N/A   Author Xbox One Research   Classification Elevation of privileges   Patched yes   Patch date N/A   First patched system version N/A   Source N/A   Download N/A"},{"location":"devmode-priv-escalation-vsprofiling/#info","title":"Info","text":"<p>Previously dev mode let us use the devtoolslauncher program to start a \"slightly elevated\" process. After this registry could be modified. This way it was possible to rewrite process execution path of the bootsh service to start a full-privileged process.</p> <p>This writeup explains how to start a \"slightly privileged\" on port 24 and a full-privileged telnet daemon on port 23.</p>"},{"location":"devmode-priv-escalation-vsprofiling/#prerequisites","title":"Prerequisites","text":"<ul> <li>Dev Mode</li> <li>Shell access</li> </ul>"},{"location":"devmode-priv-escalation-vsprofiling/#instructions","title":"Instructions","text":"<ol> <li>SSH to your console as DevToolsUser and  VS Pairing Pin as password.</li> <li>Execute the following command to start a telnet-daemon on port 24 as User \"VSProfilingAccount\".</li> </ol> <pre><code>devtoolslauncher LaunchForProfiling telnetd \"cmd.exe 24\"\n</code></pre> <ol> <li>Start a telnet connection to Port 24</li> <li>Execute the following commands on this telnet connection, this will start a telnet daemon on port 23 as local administrator:</li> </ol> <pre><code>REG ADD HKEY_LOCAL_MACHINE\\SYSTEM\\ControlSet001\\Services\\Bootsh\\Parameters\\Commands /v Xrun /t REG_SZ /d \"telnetd.exe cmd.exe 23\" /f\nsc start bootsh\n</code></pre> <ol> <li>Wait 10 seconds to make sure bootsh service started completely</li> <li>Now reset the registry-value to it's standard value by executing the following</li> </ol> <pre><code>REG ADD HKEY_LOCAL_MACHINE\\SYSTEM\\ControlSet001\\Services\\Bootsh\\Parameters\\Commands /v Xrun /t REG_SZ /d \"xrun.exe SystemBootTasks\" /f\n</code></pre> <ol> <li>Start a new telnet connection to Port 23 - That's our awaited SYSTEM-shell</li> </ol>"},{"location":"devmode-systemxvd-read-write/","title":"SystemOS Read/Write overlay for System.xvd","text":""},{"location":"devmode-systemxvd-read-write/#metadata","title":"Metadata","text":"Release date 31.07.2019   Author Xbox One Research   Classification Privileged write access   Patched no   Patch date N/A   First patched system version N/A   Source Discord   Download Download"},{"location":"devmode-systemxvd-read-write/#info","title":"Info","text":"<p>The \"System Boot Partition\" aka. C:* is mounted read-only. This hack allows temporary mounting of a self-created XVD as an overlay under mountpoint C:*. It enables write access to this partition.</p>"},{"location":"devmode-systemxvd-read-write/#prerequisites","title":"Prerequisites","text":"<ul> <li>Dev Mode</li> <li>Elevated privileges</li> </ul>"},{"location":"devmode-systemxvd-read-write/#instructions","title":"Instructions","text":"<p>Copy the extracted files to the console and execute them via cmdline.</p>"},{"location":"devmode-unattended-utilities/","title":"SystemOS - Elevation of privileges via UnattendedUtilities","text":""},{"location":"devmode-unattended-utilities/#metadata","title":"Metadata","text":"Release date 10.09.2019   Author Xbox One Research   Classification Elevation of privileges   Patched yes   Patch date 19/11/2019   First patched system version 10.0.18363.8119 (19h1_release_xbox_dev_1911.18363.8119.191119-1135)   Source https://github.com/xboxoneresearch/XboxUnattend   Download Download"},{"location":"devmode-unattended-utilities/#info","title":"Info","text":"<p>Normally you have limited user rights when connecting via SSH in development mode. Via WinRT/COM Interop you can access UnattendedUtilities assembly and use it's script execution framework.</p> <p>All commands executed by unattended scripts are done with local administrator rights.</p>"},{"location":"devmode-unattended-utilities/#prerequisites","title":"Prerequisites","text":"<ul> <li>Dev Mode</li> </ul>"},{"location":"devmode-unattended-utilities/#instructions","title":"Instructions","text":"<p>Copy the extracted files to the console and the desired script to execute to the console.</p> <p>For a script supplied via usb flash drive, execute:</p> <pre><code>xboxunattend.exe -usb\n</code></pre> <p>For a script in an arbitrary location</p> <pre><code>xboxunattend.exe -script D:\\DevelopmentFiles\\myscript.cmd\n</code></pre>"},{"location":"eMMC---Flash/","title":"eMMC / Flash","text":"<p>The flash chip is accessed via an eMMC controller.</p>"},{"location":"eMMC---Flash/#filesystem","title":"Filesystem","text":"<p>See XBFS.</p>"},{"location":"eMMC---Flash/#flash-chips","title":"Flash chips","text":"<ul> <li>SK Hynix H26M42003GMR 8GB eMMC NAND Flash (Xbox One)</li> <li>Toshiba THGBMFG6C1LBAIL 8 GB eMMC NAND Flash (Xbox One S)</li> </ul>"},{"location":"eMMC---Flash/#reading-emmc-via-hardware","title":"Reading eMMC via hardware","text":""},{"location":"eMMC---Flash/#durango","title":"Durango","text":"<p>Motherboard overview:</p>   <p>SD Card Connections:</p>  <p>Important:</p> <p>For the x2 GND wires use 12 AWG. For the other connections use 28 AWG.</p> <p>2 = CMD</p> <p>3 = GND</p> <p>5 = CLK</p> <p>6 = GND</p> <p>7 = DAT0</p> <p>Enable SMC_RESET (VERY IMPORTANT TO DO THIS FIRST!!) Place a 200-300 Ohm resistor between J4E1.1 and TP4E1</p>  <p>Disconnect the SMC clock from the Southbridge by removing R4D2. Save the resistor as it is needed for the Xbox One to function. If you do lose it then a solder bridge should work as the value is 0 Ohms.</p>  <p>NAND logic runs on the 1.8v rail and readers try to use 3.3v which is most of them don't work with the Xbox One NAND.</p> <p>Bridge a 700-800 Ohm resistor between Pin 1 of U3C3 and Ground. This should make an output 3v3 on the rail without damaging anything because the SMC is held in reset, so it won't try to power anything on.</p>  <p>Directly underneath the NAND on the underside of the mobo are access points that will let you easily solder the CMD,DAT0 and CLK lines.</p> <p>Everything works better when you hook everything up to the SD reader with everything turned off, then turn the Xbox One on and then plug in the SD reader to the PC.</p>   <p>Source: Team Xecuter / xpgamesaves</p>"},{"location":"eMMC---Flash/#references","title":"References","text":"<p>SK Hynix H26M42003GMR</p>"},{"location":"ethernet/","title":"Ethernet","text":"<p>All console revision utilize a gigabit ethernet connection.</p>"},{"location":"ethernet/#chipsets","title":"Chipsets","text":"<ul> <li>Realtek RTL 8151GNM Ethernet Controller (Xbox One)</li> <li>Realtek RTL8111HM (Xbox One S)</li> </ul>"},{"location":"exploits/","title":"Exploits","text":""},{"location":"exploits/#software","title":"Software","text":""},{"location":"exploits/#retail","title":"Retail","text":"<ul> <li>HostOS - External VBI loading (19.09.2019)</li> <li>SystemOS Symbolic Link Exploit - Access restricted/encrypted volumes using the Xbox File Explorer (02.06.2017)</li> <li>SystemOS Microsoft Edge - chakra.dll Info Leak (30.03.2017)</li> <li>SystemOS Microsoft Edge - File System Access (XX.XX.20XX)</li> <li>SystemOS Remote Code Execution - Xbox Live Messaging (XX.XX.2019)</li> <li>Browser access while offline</li> </ul>"},{"location":"exploits/#development-mode","title":"Development mode","text":"<ul> <li>SystemOS Read/Write overlay for System.xvd (31.07.2019)</li> <li>SystemOS Elevation of privileges via UnattendedUtilities (11.06.2019)</li> <li>SystemOS Elevation of privileges via VSProfiling account (09.09.2018)</li> <li>SystemOS shell access (09.09.2018)</li> </ul>"},{"location":"exploits/#hardware","title":"Hardware","text":"<ul> <li>None so far</li> </ul>"},{"location":"external-vbi-loading/","title":"External VBI Loading","text":""},{"location":"external-vbi-loading/#metadata","title":"Metadata","text":"Release date 19.09.2019   Author Xbox One Research   Classification Code Execution   Patched Yes   Patch date 01.07.2017   First patched system version N/A   Source N/A   Download N/A"},{"location":"external-vbi-loading/#info","title":"Info","text":"<p>Force the console to load an arbritary VBI on bootup. By placing a VBI file on the User Content partition of the hard drive and using either of the following names \"system.vbi\" or \"era.vbi\" will be used to boot their according virtual machines upon console boot. This is done by the XVMM driver in the Host operating system which checks the locations \"E:\\system.vbi\" and/or \"E:\\era.vbi\" for any valid binaries. If any of these exist then it will default to using them rather than using the VBI from the OS XVD user data section.</p>"},{"location":"external-vbi-loading/#prerequisites","title":"Prerequisites","text":"<ul> <li>Access to console hard drive</li> <li>Access to specific VBI</li> </ul>"},{"location":"external-vbi-loading/#instructions","title":"Instructions","text":"<ul> <li>Place the custom VBI on the User Content partition of the hard drive </li> <li>Plug hard drive back into the console</li> <li>Reboot the console </li> </ul>"},{"location":"faq/","title":"FAQ","text":""},{"location":"faq/#how-to-contribute-to-the-wiki","title":"How to contribute to the Wiki?","text":"<p>Simply send pull requests to https://github.com/XboxOneResearch/wiki</p>"},{"location":"faq/#whats-different-between-dev-mode-and-retail","title":"What's different between Dev Mode and Retail?","text":"<p>The bootslot is determined based on whether or not your console was started in Developer Mode or Retail which will set the target the bootslot for booting up. In practice there are two slots known as  Bootslot \"A\" and \"B\" - with a third slot, Bootslot \"C\" , being reserved for use on internal devkits and their potentially unique update process. Dev Mode is mostly seperated from Retail mode. The windows registry is built up dynamically into memory for each mode, SystemOS partition (system.xvd) is mounted ReadOnly from the flash and settings is seperated into settings.xvd and settings-devkit.xvd. It is important to note that developer mode and retail share very little to none in regards to its user or configurable files. It is configured at the lowest level by the hypervisor which determines what your console can and cannot do.</p>"},{"location":"faq/#os-sandboxes","title":"OS sandboxes","text":"<p>As the console is built with security in mind, the OS layers are seperated in sandboxes. The system used is known as ''Hydra'' and is supposed to be based on HyperV - with 80% of code written specifically for the use on the Xbox One gaming console. The base operating system is HostOS, which runs drivers to interact with the hardware and communicate with other OS layers to exchange data / commands. SystemOS or TitleOS/GameOS are preparing data to render and interact with the user.</p>"},{"location":"faq/#i-heard-the-console-has-three-or-more-operating-systems","title":"I heard the console has three (or more) operating systems","text":"<p>Correct. As briefly mentioned above, the Xbox One/Series platform makes use of multiple virtual machines and a Hyper-V fork. HostOS, the smallest of the operating systems, with around a 90MB footprint, runs the Xbox Virtual Machines and interfaces directly with the hardware and hypervisor. Next is SystemOS, which runs all applications, such as the dashboard and guide, but also UWP games like Minecraft through expanded resources. In the case of XDK/GameCore games, HostOS starts the ERA VM and SystemOS starts several proxy related programs to handle passing controller inputs and video/audio. For XDK games, the legacy TitleOS is then booted on the ERA VM, while GC games use GameOS. (Once called GameCoreOS) It should be noted that all Xbox operating systems outside of SysteemOS make use of the LNM Kernel fork. </p>"},{"location":"faq/#is-there-telemetry-being-sent","title":"Is there telemetry being sent?","text":"<p>YES! Basically every single thing is logged and transmitted to telemetry servers. In Dev Mode it appears to be possible to deactivate those services manually,  The telemetry data that they send in developer mode will be more intense than retail, due to the nature of capturing as much data in regards to the tool usage. However, being in a preview program will also increase the data being sent. The following script can be employed with an Administrator account in DevMode to disable and delete the telemetry services: https://github.com/xboxoneresearch/XboxDevModeBatchScripts/blob/main/removetelemetry.bat </p>"},{"location":"faq/#when-can-i-mod-games","title":"When can I mod games?","text":"<p>Not a target of this project! While this is not in our own priorities, this is will be subject to a future console exploit.</p>"},{"location":"faq/#how-does-the-guest-virtual-machines-communicate-with-the-host","title":"How does the guest virtual machines communicate with the Host?","text":"<p>Named pipes / special kernel broker drivers are used to push data between the OS layers. ... The Xbox One is known to currently use a driver common on all OS VMs known as \"XVIO\" which appear to use shared memory ring buffers to communicate between the host and guest virtual machines.</p>"},{"location":"faq/#can-we-draw-standard-win32-ui","title":"Can we draw standard Win32 UI?","text":"<p>The possibility of \"escaping\" the UWP sandbox thats originally targeted at homebrew developers is tempting and of course delivers a bigger potential for developers to port applications more easily. However, as the rendering is done in a non-Win32-conform way, it is also a challenge to achieve displaying such Win32 GUI application. See XboxUI for further info.  Traditional Win32 rendering is very unlikely to be possible on SystemOS. Like Windows IoT, the System VM makes use of the win32kmin.sys windowing driver rather than the full win32k.sys or win32kfull.sys employed by Client and Desktop, which doesn't support rendering more than one window at a time. Microsoft has tricks to supplement this (which can be seen in cases of the guide and dash being open, etc), however they are not known at this time. </p>"},{"location":"faq/#where-and-how-do-we-get-the-keys","title":"Where and how do we get the keys?","text":"<p>Getting the keys to the kingdom is a topic that requires much more information and skills. The Xbox One uses the AMD Platform Security Processor (aka PSP), which appears to be designed specifically for Xbox based security and other features, which initialises the boot chain and stores the key(s) in the fuses. However, it also appears that there might be certain content keys stored in the System Kernel Memory and also Host Kernel Memory but this is hard to determine without comprehensive tools. Keys are are stored in '\"keyslots\" and are loaded depending on the bootslot / bootmode - this means booting to developer mode just loads the developer keyslot - retails keys wont be loaded and are not accessible for decryption.</p> <p>There are at least two keyslots as far as we know. - Retail (Green) - Development (Red) Note: There are currently two sets of Red keys, one of which is no longer used. The result of this split was likely a number of sensitive leaks over the years. </p> <p>Different keys are used for the following purposes: - Bootloader encryption - Operating system container encryption (ODK / Offline distribution keys) - Games / apps (CIK / Content integrity keys)</p>"},{"location":"faq/#certificates","title":"Certificates","text":"<p>There are at least two major certificates utilized for generic usage: Console certificate and Boot capability certificate. Of course they are signed with an RSA key and therefore cannot be modified. For further info see Certificates.</p>"},{"location":"faq/#reset-glitch-hack","title":"Reset Glitch hack?","text":"<p>A power glitch hack that made hacking the Xbox 360 feasible for the public was an unforseen technique that led to breaking the secure boot chain of trust Info You could say that the designers of the console, that appeared in the end of 2005, were not aware of this possibility. Obviously technique and mitigations evolved since that time, so it is a lot harder to pull off such an attack on the modern Xbox One console. It is expected to have a lot of mitigations implemented (for example: timing checks, excessive data validity checks etc.) </p>"},{"location":"faq/#there-was-an-edge-exploit-why-did-nothing-come-out-of-it","title":"There was an Edge exploit - Why did nothing come out of it?","text":"<p>Edge, while being a privileged UWP process, still runs in the usual UWP sandbox. Additionally, it is only allowed to communicate with the internet or local network if a valid Xbox Live connection is detected. This means that the operated console has to be running the latest mandatory Systemupdate - exploitation cannot happen offline / undetected.</p>"},{"location":"file-explorer-symbolic-links/","title":"File Explorer - Symbolic links vulnerability","text":""},{"location":"file-explorer-symbolic-links/#metadata","title":"Metadata","text":"Release date 02.06.2017   Author xenomega   Classification File Access   Patched yes   Patch date 05.05.2017   First patched system version 10.0.15063.2022 (RS2_RELEASE_XBOX_1704.170501-1052)   Source https://github.com/Xenomega/xsymlink   Download Download"},{"location":"file-explorer-symbolic-links/#info","title":"Info","text":"<p>Access restricted/encrypted volumes using the Xbox File Explorer.</p> <ul> <li>Patched as of 5/5/2017: 10.0.15063.2022 (RS2_RELEASE_XBOX_1704.170501-1052).  Thus in accordance with responsible disclosure.</li> <li>The Xbox One File Explorer does not check if a path is a symbolic link elsewhere, allowing an attacker to browse/read/write to mounted volumes which are normally restricted.</li> <li>This includes any encrypted virtual harddisk partitions (XVD files) which the console mounts for content such as gamesaves, etc.</li> </ul>"},{"location":"file-explorer-symbolic-links/#prerequisites","title":"Prerequisites","text":"<ul> <li>Download Windows Server 2003 Resource Kit Tools, from which you'll need the \"linkd\" utility, as the program relies on it to create links, since mklink does not link to paths that do not exists, and the paths we intend to link to are likely non-existent on your computer.</li> </ul>"},{"location":"file-explorer-symbolic-links/#instructions","title":"Instructions","text":"<ul> <li>Change the drive letter to your USB drive letter in Program.cs  </li> <li>Run it  </li> <li>Plug it into Xbox, use File Browser to browse through the symlinks, which will link to other parts of the system.  </li> </ul>"},{"location":"harddrive/","title":"Harddrive","text":"<p>The console comes with an integrated harddrive and also supports external harddrives via USB 3.0. Using an external harddrive to store apps and games requires the drive to be USB 3.0 and storage to be 128GB or bigger.</p> <p>Both, either internal or external, drive use GUID/GPT partitioning scheme and NTFS as drive format.</p> <p>An external USB 3.0 drive, after being formatted on the console, is normally non-accessible on a PC due to a non-standard Boot Signature being written to the first sector of the drive. </p>"},{"location":"harddrive/#internal-harddrive","title":"Internal harddrive","text":"<p>The console supports 500GB, 1TB and 2TB harddrives (state: 09/2019). Internal harddrive uses specific partition GUIDs and partition labels.</p>"},{"location":"harddrive/#partitions","title":"Partitions","text":"<ol> <li>Temp Content</li> <li>User Content</li> <li>System Support</li> <li>System Update</li> <li>System Update 2</li> </ol>"},{"location":"harddrive/#partition-guids","title":"Partition GUIDs","text":"Name / Part Label Guid Size (bytes) Size (GB)     Temp Content B3727DA5-A3AC-4B3D-9FD6-2EA54441011B 44023414784 41   User Content variable variable variable   System Support C90D7A47-CCB9-4CBA-8C66-0459F6B85724 42949672960 40   System Update 9A056AD7-32ED-4141-AEB1-AFB9BD5565DC 12884901888 12   System Update 2 24B2197C-9D01-45F9-A8E1-DBBCFA161EB2 7516192768 7"},{"location":"harddrive/#user-partition-guids","title":"User partition GUIDs","text":"Harddrive size Guid Partition size (bytes) Partition size (GB)     500 GB A2344BDB-D6DE-4766-9EB5-4109A12228E5 391915765760 365   1 TB 25E8A1B2-0B2A-4474-93FA-35B847D97EE5 838592364544 781   2 TB 5B114955-4A1C-45C4-86DC-D95070008139 1784558911488 1662"},{"location":"harddrive/#external-harddrive","title":"External harddrive","text":"<p>When a USB 3.0 drive is formatted for apps/games usage by the console, it gets rendered unreadable by a PC by writing a special, non-standard boot signature.</p> <p>By overwriting the custom xbox signature with the regular, expected bytes makes the drive being recognized and mountable on a PC.</p>"},{"location":"harddrive/#boot-signature-marker","title":"Boot signature marker","text":"<p>The boot signature is located in the first sector of the drive at offset: 0x1FE</p>    Type Boot signature     Regular (MBR) 55 AA   Xbox One 99 CC    <p>Note: Even if 55 AA indicates MBR normally, for GPT it is just marking the \"Protective MBR\", to secure GUID partition against ovewriting by non-GPT aware applications.</p>"},{"location":"installing-compatible-software/","title":"Installing compatible software","text":""},{"location":"installing-compatible-software/#installing-compatible-software","title":"Installing compatible software","text":""},{"location":"installing-compatible-software/#python","title":"Python","text":"<ul> <li>Download     https://www.python.org/ftp/python/3.7.3/python-3.7.3-embed-amd64.zip</li> <li>Unzip</li> <li>Uncomment \"import site\" in file python37._pth</li> <li>Download get-pip.py (https://bootstrap.pypa.io/get-pip.py) and place     it inside extracted python folder</li> <li>Copy extracted folder to console</li> <li>Execute:</li> </ul> <pre><code>set\u00a0PYTHONPATH=\"D:\\DevelopmentFiles\\Python\"\nset\u00a0PATH=\"%PATH%;%PYTHONPATH%\"\n</code></pre> <ul> <li>Execute</li> </ul> <p><code>python.exe\u00a0get-pip.py</code></p> <ul> <li>Profit</li> </ul>"},{"location":"installing-compatible-software/#powershell","title":"PowerShell","text":"<ul> <li>Download:     https://github.com/PowerShell/PowerShell/releases/download/v6.2.0/PowerShell-6.2.0-win-x64.zip</li> <li>Unzip</li> <li>Copy over to console</li> <li>Execute pwsh.exe</li> <li>Profit</li> </ul>"},{"location":"installing-compatible-software/#net-core","title":".NET Core","text":"<ul> <li>Download the latest 64 bit dotnet core runtime from     https://dotnet.microsoft.com/download/dotnet-core.</li> <li>Unzip and copy the binaries to a flash drive or     D:\\DevelopmentFiles\\Dotnet.</li> <li>Optionally add the dotnet directory to your system PATH via <code>setx     path \"%path%;D:\\\\DotnetPath\"</code> using SSH.</li> <li>Execute your dotnet core software via \"dotnet program.exe\" using SSH     in the dotnet diectory (or anywhere if you updated your PATH).</li> <li>Profit</li> </ul>"},{"location":"installing-compatible-software/#troubleshooting","title":"Troubleshooting","text":"Error Solution     The system cannot find the file specified If running your dotnetcore software on an external drive, move it to an internal one such as D: or T:"},{"location":"installing-compatible-software/#net-5","title":".NET 5","text":"<ul> <li>Download the latest preview Windows 64 bit dotnet runtime from     https://dotnet.microsoft.com/download/dotnet/5.0.</li> <li>Unzip and copy the binaries to a flash drive or a location of your choice such as     D:\\DevelopmentFiles\\Dotnet.</li> <li>Optionally add the dotnet directory to your system PATH via <code>setx     path \"%path%;D:\\\\DotnetPath\"</code> using SSH.</li> <li>Execute your dotnet software via \"dotnet program.exe\" using SSH     in the dotnet diectory (or anywhere if you updated your PATH).</li> <li>Profit</li> </ul>"},{"location":"installing-compatible-software/#troubleshooting_1","title":"Troubleshooting","text":"Error Solution     The system cannot find the file specified If running your dotnetcore software on an external drive, move it to an internal one such as D: or T:    <p>## .NET 6</p> <ul> <li>Download the latest preview Windows 64 bit dotnet runtime from     https://dotnet.microsoft.com/download/dotnet/6.0.</li> <li>Unzip and copy the binaries to a flash drive or a location of your choice such as     D:\\DevelopmentFiles\\Dotnet.</li> <li>Optionally add the dotnet directory to your system PATH via <code>setx     path \"%path%;D:\\\\DotnetPath\"</code> using SSH.</li> <li>Execute your dotnet software via \"dotnet program.exe\" using SSH     in the dotnet diectory (or anywhere if you updated your PATH).</li> <li>Profit</li> </ul>"},{"location":"installing-compatible-software/#troubleshooting_2","title":"Troubleshooting","text":"Error Solution     The system cannot find the file specified If running your dotnetcore software on an external drive, move it to an internal one such as D: or T:"},{"location":"installing-compatible-software/#java-development-kit","title":"Java Development Kit","text":"<ul> <li>Download the latest JDK Windows 64 bit Compressed Archive from     https://www.oracle.com/java/technologies/downloads/.</li> <li>Unzip and copy the binaries to a flash drive or a location of your choice such as     D:\\DevelopmentFiles\\jdk.</li> <li>Optionally add the java directory to your system PATH via     <code>cmd     set JAVA_HOME=D:\\DevelopmentFiles\\Applications\\jdk-17.0.3.1     set PATH=%PATH%;%JAVA_HOME%\\bin</code>     using SSH.</li> <li>Execute your java software via \"java -jar program.jar\" using SSH     in the java diectory (or anywhere if you updated your PATH).</li> <li>Profit</li> </ul>"},{"location":"ms-edge-exploit-cve-2016-7200/","title":"Microsoft Edge - Chakra Exploit - CVE 2016-7200","text":""},{"location":"ms-edge-exploit-cve-2016-7200/#metadata","title":"Metadata","text":"Release date 28.03.2017   Author unknownv2   Classification Remote Code execution / Type confusion   Patched yes   Patch date unknown   First patched system version unknown   Source https://github.com/SeeMirra/ms-xb1-edge-exp   Download Download"},{"location":"ms-edge-exploit-cve-2016-7200/#info","title":"Info","text":"<p>For Xbox-SystemOS version: 10.0.14393.2152 (rs1_xbox_rel_1610 161208-1218) fre, 12/14/2016</p> <p>Other versions will most likely need modifications to the script.</p>"},{"location":"ms-edge-exploit-cve-2016-7200/#credits","title":"Credits:","text":"<p>https://github.com/theori-io/chakra-2016-11</p> <p>https://bugs.chromium.org/p/project-zero/issues/detail?id=952</p> <p>https://bugs.chromium.org/p/project-zero/issues/detail?id=945</p>"},{"location":"optical-disc-drive/","title":"Optical disc drive","text":""},{"location":"optical-disc-drive/#xbox-optical-disc-drive","title":"Xbox Optical disc drive","text":""},{"location":"optical-disc-drive/#game-discs","title":"Game discs","text":"<p>Xbox One game discs are called XGD4 (Xbox Game Disc Version 4).</p>"},{"location":"optical-disc-drive/#drive-models","title":"Drive models","text":"<p>Following optical disc drive models are known to date:</p>"},{"location":"optical-disc-drive/#xbox-one-phat","title":"Xbox One (PHAT)","text":"<ul> <li>Lite-On DG-6M1S-01B/02B (Codename: ELK)</li> <li>Lite-On DG-6M2S-01B (Codename: CORDOVA)</li> </ul>"},{"location":"optical-disc-drive/#xbox-one-s-x","title":"Xbox One S / X","text":"<ul> <li>Lite-On DG-6M5S-01B/02B (Codename: MONTEREY)</li> </ul>"},{"location":"optical-disc-drive/#lite-on-drives","title":"Lite-On drives","text":""},{"location":"optical-disc-drive/#general-info","title":"General info","text":"<ul> <li>Seems to use MTK chipset</li> <li>DG-6M1S is NOT detected when connected to a PC, all other models are</li> </ul>"},{"location":"optical-disc-drive/#known-firmware-versions","title":"Known firmware versions","text":"<ul> <li>3253 (July 2013, DG-6M1S-01B)</li> <li>011V (August 2015, DG-6M2S-01B)</li> <li>017V (April 2016, DG-6M5S-01B)</li> </ul>"},{"location":"optical-disc-drive/#known-flash-chips","title":"Known flash chips","text":"<ul> <li>Lite-On DG-6M2S -&gt; MXIC(MX25L8091E) (MenuId: 0xC2, DevId1: 0x20,     DevId2: 0x14)</li> </ul>"},{"location":"optical-disc-drive/#oddfwupd-log","title":"oddfwupd log","text":"<p>When a dashboard update performs a ODD firmware upgrade, a log file is created on HDD.</p> <p>Location: SystemSupport\\oddfwupd\\.log <p>: Variable number <p>Successful upgrade</p> <pre><code>ODDFW\u00a0update\u00a0sequence:\u00a09.\nFOUND\u00a0DeviceInstance\u00a0AHCI\\Port\\0\nGot\u00a0PDO:\u00a0\\Device\\00000016\nDrive\u00a0type\u00a0detected:\u00a0Elk.\nDrive\u00a0is\u00a0Locked!\nNvkey\u00a0is\u00a0Programmed!\nFound\u00a0firmware\u00a0FW_0001.bin.\nFirmware\u00a0version\u00a0match,\u00a0no\u00a0FW\u00a0update\u00a0is\u00a0needed\nUpdate\u00a0is\u00a0not\u00a0neccessary.\nDrive\u00a0is\u00a0Locked!\nNvkey\u00a0is\u00a0Programmed!\nODD\u00a0token\u00a0found\u00a0in\u00a0factory\u00a0settings,\u00a0consider\u00a0ODD\u00a0is\u00a0paired.\nPV+\u00a0console\u00a0already\u00a0locked,\u00a0skip\u00a0lock\u00a0down.\nGot\u00a0drive\u00a0auth\u00a0status\u00a0:\u00a02\nODDFW\u00a0update\u00a0finished,\u00a0hr\u00a0=\u00a000000000\n</code></pre> <p>Example of E100 error</p> <pre><code>ODDFW\u00a0update\u00a0sequence:\u00a07.\nFOUND\u00a0DeviceInstance\u00a0AHCI\\Port\\0\nGot\u00a0PDO:\u00a0\\Device\\00000017\nDrive\u00a0type\u00a0detected:\u00a0Monterey.\nDrive\u00a0is\u00a0Locked!\nNvkey\u00a0is\u00a0Programmed!\nExpected\u00a0firmare\u00a0version:014R\nRunning\u00a0firmware\u00a0version:014R\nAlready\u00a0running\u00a0expected\u00a0firmware,\u00a0skipping\u00a0ODD\u00a0update\nUpdate\u00a0is\u00a0not\u00a0neccessary.\nNot\u00a0Elk\u00a0drive,\u00a0no\u00a0lock\u00a0down\u00a0is\u00a0needed.\nAuth\u00a0IOCTL\u00a0000240C4\u00a0failed,\u00a0error\u00a0=\u00a0e0e80085\nIOddDriverApi::DriveAuthPowerOn\u00a0failed\nODDFW\u00a0update\u00a0failed,\u00a0hr\u00a0=\u00a080910008,\u00a0retry\u00a0again\u00a0in\u00a0two\u00a0seconds.\nExpected\u00a0firmare\u00a0version:014R\nRunning\u00a0firmware\u00a0version:014R\nAlready\u00a0running\u00a0expected\u00a0firmware,\u00a0skipping\u00a0ODD\u00a0update\nUpdate\u00a0is\u00a0not\u00a0neccessary.\nNot\u00a0Elk\u00a0drive,\u00a0no\u00a0lock\u00a0down\u00a0is\u00a0needed.\nAuth\u00a0IOCTL\u00a0000240C4\u00a0failed,\u00a0error\u00a0=\u00a0e0e80085\nIOddDriverApi::DriveAuthPowerOn\u00a0failed\nODDFW\u00a0update\u00a0failed,\u00a0hr\u00a0=\u00a080910008,\u00a0retry\u00a0again\u00a0in\u00a0two\u00a0seconds.\nExpected\u00a0firmare\u00a0version:014R\nRunning\u00a0firmware\u00a0version:014R\nAlready\u00a0running\u00a0expected\u00a0firmware,\u00a0skipping\u00a0ODD\u00a0update\nUpdate\u00a0is\u00a0not\u00a0neccessary.\nNot\u00a0Elk\u00a0drive,\u00a0no\u00a0lock\u00a0down\u00a0is\u00a0needed.\nAuth\u00a0IOCTL\u00a0000240C4\u00a0failed,\u00a0error\u00a0=\u00a0e0e80085\nIOddDriverApi::DriveAuthPowerOn\u00a0failed\nODDFW\u00a0update\u00a0failed,\u00a0hr\u00a0=\u00a080910008,\u00a0retry\u00a0again\u00a0in\u00a0two\u00a0seconds.\nODDFW\u00a0update\u00a0finished,\u00a0hr\u00a0=\u00a080910008\u200b\n</code></pre> <p>Unmatching drive</p> <pre><code>ODDFW\u00a0update\u00a0sequence:\u00a01.\nFOUND\u00a0DeviceInstance\u00a0AHCI\\Port\\0\nGot\u00a0PDO:\u00a0\\Device\\00000017\nDrive\u00a0type\u00a0detected:\u00a0Elk.\nDrive\u00a0is\u00a0Unlocked!\nNvkey\u00a0is\u00a0Not\u00a0programmed!\nFound\u00a0firmware\u00a0FW_0001.bin.\nFirmware\u00a0version\u00a0match,\u00a0no\u00a0FW\u00a0update\u00a0is\u00a0needed\nUpdate\u00a0is\u00a0not\u00a0neccessary.\nDrive\u00a0is\u00a0Unlocked!\nNvkey\u00a0is\u00a0Not\u00a0programmed!\nOddSerialNumber\u00a0from\u00a0factory\u00a0settings:\n00\u00a001\u00a002\u00a003\u00a004\u00a005\u00a006\u00a007\u00a008\u00a009\u00a00A\u00a00B\u00a00C\u00a00D\u00a00E\u00a00F\n-----------------------------------------------\n0000\u00a0-\u00a044\u00a039\u00a030\u00a031\u00a042\u00a042\u00a033\u00a035\u00a030\u00a038\u00a030\u00a035\u00a030\u00a030\u00a031\u00a04D\u00a0D901BB350805001M\n0010\u00a0-\u00a036\u00a020\u00a020\u00a020\u00a06\u00a0\n\nOddSerialNumber\u00a0from\u00a0drive:\n00\u00a001\u00a002\u00a003\u00a004\u00a005\u00a006\u00a007\u00a008\u00a009\u00a00A\u00a00B\u00a00C\u00a00D\u00a00E\u00a00F\n-----------------------------------------------\n0000\u00a0-\u00a044\u00a039\u00a030\u00a033\u00a042\u00a042\u00a034\u00a034\u00a036\u00a038\u00a030\u00a033\u00a030\u00a030\u00a046\u00a036\u00a0D903BB44680300F6\n0010\u00a0-\u00a030\u00a000\u00a000\u00a000\u00a00...\n\nPV-\u00a0console\u00a0not\u00a0locked,\u00a0we\u00a0are\u00a0done!\nAuth\u00a0IOCTL\u00a0000240C4\u00a0failed,\u00a0error\u00a0=\u00a0e0e80085\nIOddDriverApi::DriveAuthPowerOn\u00a0failed\nODDFW\u00a0update\u00a0failed,\u00a0hr\u00a0=\u00a080910008,\u00a0retry\u00a0again\u00a0in\u00a0two\u00a0seconds.\n\n...\u00a0Lines\u00a0above\u00a0are\u00a0repeated\u00a0several\u00a0times\u00a0...\n\nODDFW\u00a0update\u00a0finished,\u00a0hr\u00a0=\u00a080910008\n</code></pre> <p>Again, E100</p> <pre><code>ODDFW\u00a0update\u00a0sequence:\u00a079\nFOUND\u00a0DeviceInstance\u00a0AHCI\\Port\\0\nGot\u00a0PDO:\u00a0\\Device\\00000017\nDrive\u00a0type\u00a0detected:\u00a0Cordova.\nDrive\u00a0is\u00a0Locked!\nNvkey\u00a0is\u00a0Programmed!\nExpected\u00a0firmare\u00a0version:045R\nRunning\u00a0firmware\u00a0version:040R\nNot\u00a0running\u00a0expected\u00a0firmware,\u00a0update\u00a0required\nExclusiveState\u00a0:\u00a0None\nCallerName:\u00a0\nMenuId:\u00a00xC2,\u00a0DevId1:\u00a00x20,\u00a0DevId2:\u00a00x14\nFlash\u00a0type\u00a0detected:\u00a0MXIC(MX25L8091E).\nOddSerialNumber\u00a0from\u00a0factory\u00a0settings:\n00\u00a001\u00a002\u00a003\u00a004\u00a005\u00a006\u00a007\u00a008\u00a009\u00a00A\u00a00B\u00a00C\u00a00D\u00a00E\u00a00F\n-----------------------------------------------\n0000\u00a0-\u00a044\u00a039\u00a030\u00a033\u00a042\u00a042\u00a034\u00a034\u00a031\u00a038\u00a030\u00a033\u00a030\u00a030\u00a030\u00a050\u00a0D903BB441803000P\n0010\u00a0-\u00a04B\u00a020\u00a020\u00a020\u00a0K\u00a0\n\nOddSerialNumber\u00a0from\u00a0drive:\n00\u00a001\u00a002\u00a003\u00a004\u00a005\u00a006\u00a007\u00a008\u00a009\u00a00A\u00a00B\u00a00C\u00a00D\u00a00E\u00a00F\n-----------------------------------------------\n0000\u00a0-\u00a044\u00a041\u00a030\u00a031\u00a042\u00a042\u00a035\u00a034\u00a033\u00a038\u00a031\u00a032\u00a030\u00a030\u00a038\u00a058\u00a0DA01BB543812008X\n0010\u00a0-\u00a031\u00a000\u00a000\u00a000\u00a01...\n\nCannot\u00a0get\u00a0pair\u00a0status\u00a0or\u00a0drive\u00a0is\u00a0not\u00a0paired!\nOddFirmwareUpdate\u00a0error\u00a080910018\nProgramming\u00a0firmware\u00a0failed\nExclusiveState\u00a0:\u00a0Exclusive\nCallerName:\u00a0COddDriverApi\n\n...\u00a0Lines\u00a0above\u00a0are\u00a0repeated\u00a0several\u00a0times\u00a0...\n\nFW\u00a0update\u00a0failed!!!\nODDFW\u00a0update\u00a0failed,\u00a0hr\u00a0=\u00a080910018,\u00a0retry\u00a0again\u00a0in\u00a0two\u00a0seconds.\nODDFW\u00a0update\u00a0finished,\u00a0hr\u00a0=\u00a080910018\n</code></pre>"},{"location":"optical-disc-drive/#philips-lite-on-plds-dg-6m1s","title":"Philips / Lite-On PLDS DG-6M1S","text":"<p>   </p>"},{"location":"optical-disc-drive/#philips-lite-on-plds-dg-6m2s","title":"Philips / Lite-On PLDS DG-6M2S","text":"<p>   </p>"},{"location":"protcol-URIs/","title":"Protocol URIs (deep links)","text":"<p>Protocol URI are used to provide a means for apps to start other apps. An example of protocol URIs being used can be found in the url (<code>ms-windows-store://</code>) used to activate the store on the page for a certain app. Protocol URIs are also know as deep links or launch URIs. Info on how to implement them into your uwp app can be found here.</p>"},{"location":"protcol-URIs/#system-apps","title":"System apps:","text":"<p>The following list shows a complete list of deep links as of <code>10.0.19041.6630 (xb_flt_2103vb.210210-0000)</code>. These were dumped by pulling all of the appx manifests accessible to a custom admin account in dev mode and then parsing all of them to get the protocol URIs.</p>    Package Family Name URI     Xbox.Guide guide://   Microsoft.XboxEvents xbox-events://   Xbox.Dashboard xbox-gamehub://   Microsoft.MicrosoftEdge http://   Xbox.Dashboard achievements://   Xbox.Dashboard ms-xbox-achievements://   Microsoft.Xbox.Settings kinecttuner://   Xbox.Dashboard ms-xbox-gamedvr2://   Microsoft.MicrosoftEdge https://   Microsoft.Xbox.LiveTV ms-xbl-162615ad://   Microsoft.MicrosoftEdge ms-xbl-3d8b930f://   XdashLauncher ms-xdash://   Xbox.Dashboard social://   Microsoft.WindowsStore zune://   Xbox.SingleUserProxy xsingleuserproxy://   Xbox.Dashboard gamedvr2://   Microsoft.MicrosoftEdge read://   Microsoft.XboxDevices xboxaccessories://   XdashLauncher ms-subscription://   Xbox.NetworkTroubleshooter networktroubleshooter://   Microsoft.Xbox.Settings ms-settings://   Microsoft.Xbox.DevHome ms-xbl-1c835833://   Microsoft.XboxCare ms-oobe://   Xbox.SignIn signin://   Microsoft.StorePurchaseApp ms-xbet-survey://   Microsoft.CloudExperienceHost ms-device-enrollment://   Microsoft.WindowsStore ms-windows-store2://   Xbox.BroadcastSetup xpositioningtcui://   Xbox.StorageManagement storagemanagement://   Microsoft.Microsoft.Xbox.AdsLauncher ms-ad-hwa://   Xbox.Dashboard ms-xbox-dashboard://   Microsoft.MicrosoftEdge microsoft-edge-holographic://   Microsoft.XboxDevices ms-xbl-2d34608b://   Microsoft.Xbox.Settings ms-xbl-6d83c5c3://   Xbox.Dashboard ms-xbl-achievements://   Xbox.EditorialHost editorialhost://   Microsoft.XboxCare xhelp://   Microsoft.Xbox.Settings settings://   Microsoft.MicrosoftEdge microsoft-edge://   Xbox.Dashboard ms-xbl-gamedvr2://   Microsoft.Xbox.LiveTV ms-xbox-livetv://   Microsoft.WindowsStore xboxmusic://   Xbox.Dashboard screenshots://   Microsoft.QuickBuy ms-xbox-quickbuy://   Xbox.VideoPlayer xpreviewkiosk://   Xbox.Dashboard xbox-club://   Microsoft.NTSCaptivePortal ntscaptiveportal://   XdashLauncher ms-survey://   Microsoft.Xbox.TvSettings ms-xbox-tvsettings://   Xbox.HDRGameCalibration hdrgamecalibration://   Xbox.Dashboard gameclips://   Xbox.IdleScreen idlescreen://   Microsoft.CloudExperienceHost ms-cxh://   Xbox.Dashboard ms-xbl-281d1c2f://   Xbox.TrialOverlay trialoverlay://   Xbox.SU systemupdatenew://   Microsoft.Xbox.OOBE oobe://   Xbox.VideoPlayer xpreview://   Microsoft.XboxCare ms-xcare://   Microsoft.WindowsStore microsoftmusic://   Microsoft.WindowsStore ms-windows-store://   Xbox.Dashboard library://   Microsoft.storify ms-windows-store://   Microsoft.WindowsStore microsoftvideo://   XdashLauncher ms-content-picker://   Microsoft.BlurayPlayer ms-xbl-6cded184://   Microsoft.BlurayPlayer blurayplayer://   Microsoft.BlurayPlayer dvdplayer://"},{"location":"rf-unit/","title":"RF Unit","text":""},{"location":"rf-unit/#info","title":"Info","text":""},{"location":"rf-unit/#xbox-one-phat","title":"Xbox One (PHAT)","text":"<p>Part Number: X867281-005</p> <p>Components: - Infrared Receiver (U1) - Soundchip - ISD9160F (U4) - Connector to sound speaker (J1) - Wifi Antenna connector (J2) - FPC connector (J3) - Motherboard connector (J8)</p>"},{"location":"rf-unit/#flashing-the-soundchip","title":"Flashing the soundchip","text":"<ul> <li>Trumpet project on github</li> <li>Piccolo project on github</li> </ul>"},{"location":"rf-unit/#xbox-one-s","title":"Xbox One S","text":""},{"location":"rf-unit/#xbox-one-x","title":"Xbox One X","text":""},{"location":"rf-unit/#pictures","title":"Pictures","text":"<p>Xbox One (PHAT)</p>  <p>Xbox One S</p>  <p>Xbox One X (SCORPIO)</p>"},{"location":"rf-unit/#credits","title":"Credits","text":"<ul> <li>Pictures from ifixit.com</li> </ul>"},{"location":"savegames/","title":"Savegames","text":""},{"location":"savegames/#file-format","title":"File format","text":""},{"location":"savegames/#blob_type","title":"BLOB_TYPE","text":"Enum Value     Binary 0x1   Json 0x2   Config 0x3"},{"location":"savegames/#savegame_type","title":"SAVEGAME_TYPE","text":"Enum Value     User 0x1   Machine 0x5"},{"location":"savegames/#container_index_file","title":"CONTAINER_INDEX_FILE","text":"<p>Structure of containers.index file.</p>    Offset Length Type Information     0x00 0x04 uint32 Type   0x08 0x04 uint32 FileCount   0x0C 0x04 uint32 NameLength   0x10 var WCHAR[NameLength] Name   var 0x04 uint32 AumIdLength   var var WCHAR[AumIdLength] AumId   var 0x08 FILETIME Timestamp   var 0x04 uint32 Unknown (seen 0, 1, 3 so far)   var 0x04 uint32 IdLength   var var WCHAR[IdLength] Id   var 0x04 uint32 AumIdLength   var var CONTAINER_INDEX_FILE[FileCount] Files"},{"location":"savegames/#container_index_entry","title":"CONTAINER_INDEX_ENTRY","text":"Offset Length Type Information     0x00 0x04 uint32 FilenameLength   0x04 var WCHAR[FilenameLength] Filename   var 0x04 uint32 FilenameAltLength   var var WCHAR[FilenameAltLength] FilenameAlt   var 0x04 uint32 TextLength   var var WCHAR[TextLength] Text   var 0x01 byte BlobNumber   var 0x04 uint32 SaveType   var 0x10 byte[] FolderGuid   var 0x08 FILETIME Timestamp   var 0x08 uint64 Unknown   var 0x04 uint32 FileSize   var 0x04 uint32 Unknown"},{"location":"savegames/#container_blob","title":"CONTAINER_BLOB","text":"Offset Length Type Information     0x00 0x04 uint32 Unknown   0x04 0x04 uint32 Unknown   0x08 0x08 WCHAR[] Magic (Blob)   0x10 0x88 byte[] Data   0x98 0x10 byte[] GUID"},{"location":"security-processor/","title":"Security processor","text":""},{"location":"security-processor/#platform-security-processor-amd-psp","title":"Platform Security processor (AMD PSP)","text":"<p>The AMD Platform Security Processor (PSP) is a self-contained core located on the Xbox CPU die. From official AMD documentation its described as an ARM core, however instead of running TrustZone per AMD's spec it appears to be running MS customized code.</p> <p>It seems that the PSP handles crypto for certain things, and also may use keyslots in a way similar to the Xbox 360's keyvault, except instead of the actual console OS having access to these keys only code running on the PSP can use them.</p> <p>The Xbox One HostOS contacts the PSP through the psp.sys driver. For decrypting XVDs it appears to send the header of the XVD to the PSP, which then (assumably) decrypts the CIK field in the header and sends it back, with the OS performing the rest of the decryption.</p> <p>psp.sys also has commands which seem to read memory from the PSP instead of sending commands to it, the contents of this memory are unknown, but it's possible (albeit unlikely) that the ODK may be in this area of memory.</p>"},{"location":"security-processor/#credits","title":"Credits","text":"<p>Info from emoose's xvdtool</p>"},{"location":"setup-dev-mode/","title":"Setup dev mode","text":""},{"location":"setup-dev-mode/#setup-dev-mode","title":"Setup dev mode","text":""},{"location":"setup-dev-mode/#prerequisites","title":"Prerequisites","text":"<ul> <li>App Developer Account</li> <li>Dev Mode Activation App</li> <li>Visual Studio 2019</li> <li>Windows 10 (Preferred)</li> <li>PuTTy</li> </ul>"},{"location":"setup-dev-mode/#activation","title":"Activation","text":"<p>Before you get started you will need to convert your console into Developer Mode. Microsoft have an existing page that will show you how to get started: https://docs.microsoft.com/en-us/windows/uwp/xbox-apps/devkit-activation</p> <p>It may be worth navigating through their documentation and getting a grasp on the basis of the environment: https://docs.microsoft.com/en-us/windows/uwp/xbox-apps/</p>"},{"location":"setup-dev-mode/#visual-studio-setup","title":"Visual Studio Setup","text":"<p>In order for you to build Win32 applications and libraries you will need to install certain libraries available through the Visual Studio Installer:</p>"},{"location":"setup-dev-mode/#using-ssh","title":"Using SSH","text":"<p>After your console is activated you will be able to connect over via PuTTy (or another SSH client of your choice).</p> <ul> <li>Enter the console IP address and Connect</li> <li>Use the following to login:<ul> <li>Username: DevToolsUser</li> <li>For the password you are able to use either<ul> <li>pin that is displayed on the \"Show Visual Studio Pin\" in Dev Home.</li> </ul> </li> <li>or<ul> <li>password used for smb access</li> </ul> </li> </ul> </li> <li>Success!</li> </ul>"},{"location":"setup-dev-mode/#accessing-console-file-system","title":"Accessing Console File System","text":"<p>Open up the File Explorer on your Windows machine and enter the following into your path bar:</p> <pre><code>\\\\&lt;Xbox One IP or Hostname&gt;\n</code></pre> <p>It will prompt you for login details. We can use the Xbox Device Portal for this:</p> <ul> <li>Open up your web browser and enter:     <code>https://&lt;Xbox One IP or Hostname&gt;:11443</code></li> <li>Go to File explorer</li> <li>On the right hand side; you will see \"Browse\"</li> <li>Select it and use the login details provided</li> </ul>"},{"location":"southbridge/","title":"Southbridge","text":"<p>The custom southbridge is only slightly changed between the console revision, judging from its part number.</p>"},{"location":"southbridge/#models","title":"Models","text":"<ul> <li>X861949-005 T6WD5XBG-0003 (Xbox One/Xbox One S)</li> <li>X861949-007 T6WD5XBG-0003 (Xbox One X)</li> </ul>"},{"location":"southbridge/#diagrams","title":"Diagrams","text":""},{"location":"southbridge/#references","title":"References","text":"<ul> <li>Southbridge / SoC diagram by IEEE Computer Society</li> </ul>"},{"location":"special-ntfs-usb-files/","title":"Special ntfs usb files","text":""},{"location":"special-ntfs-usb-files/#special-ntfs-usb-files","title":"Special NTFS USB files","text":""},{"location":"special-ntfs-usb-files/#what-is-this-about","title":"What is this about ?","text":"<p>Following special folders / files that can be created on a NTFS USB flash drive to trigger commands on console boot.</p>"},{"location":"special-ntfs-usb-files/#list-of-files-folders","title":"List of files / folders","text":"Path Type Information     $Diagnosis Folder The command $DumpSystemOS will write SystemOS-full.dmpx here.   $NoSurface Folder Mount drive in HostOS instead of SystemOS.   $DumpSystemOS Folder SystemOS Memory Dump. The console will ding when the dump is finished. (Host will delete $DumpSystemOS and dump SystemOS's memory into the $Diagnosis.)   $DumpHostOS Folder HostOS Memory Dump   $Diagnosis\\debug.bin File Godbox certificate used for temporary godbox boosting of a Retail.   $SystemUpdate\\consoles.txt File Put an empty file consoles.txt on the flashdrive. Console will write its current systemupdate build version to the file on boot.   $SystemUpdate\\hwinit.cfg File Enables an overclocked mode controlled by a byte at 0x8 and can have a value between 0x01 - 0x58. File Magic: 0x1-0x58 - 4E,49,57,48,02.Unknown FF range   $ConsoleRegion0 File Only available on Chinese Xbox One. Put an empty file $ConsoleRegion0 on the flashdrive to Disable region lock. This has now been blocked by an update, see below.   $ConsoleRegion1 File Only available on Chinese Xbox One. Put an empty file $ConsoleRegion1 on the flashdrive to Enable region lock. This has now been blocked by an update, see below.   $ConsoleGen8 File Only available on Chinese Xbox One. Put an empty file $ConsoleGen8 on the flashdrive to disable region lock.   $ConsoleGen9 File Only available on Chinese Xbox Series X/S. Put an empty file $ConsoleGen9 on the flashdrive to disable region lock.   MSXB_Kiosk File Put a special Kiosk XVD on the flashdrive, after booting the console will be locked in Kiosk mode. To exit, power off console and remove the flash drive.    <p>Note:</p> <ul> <li> <p>$Diagnosis, $NoSurface, $DumpSystemOS, $DumpHostOS references were found in xvdd.sys</p> </li> <li> <p>The SystemOS-full.dmpx file is encrypted and requires a retail key to decrypt.</p> </li> <li> <p>Using $ConsoleRegion0 , $ConsoleRegion1, $ConsoleGen8 or $ConsoleGen9 will affect the ability to read Xbox China game discs, but won't affect already installed digital games.</p> </li> <li> <p>Non-Chinese Xbox One units cannot be region locked and read Xbox China discs / access China region Xbox Live by $ConsoleRegion1.</p> </li> <li> <p>$ConsoleRegion0 and $ConsoleRegion1 has been deprecated since OS 10.0.19041.2493 (rs_xbox_release_2005.200512-1756). Devices' region lock status will be remained as the same before it's update to this version. Those two special files will still work on devices with OS version equal to or under 10.0.19041.1927 (rs_xbox_release_2004.200415-0000). Users who still need to disable region lock should consider using $ConsoleGen8 and $ConsoleGen9 instead.</p> </li> <li> <p>Usage of $ConsoleGen8 and $ConsoleGen9 require OS version equal to or newer than XB_FLT_2106VB\\19041.8033.210514-0000 (insider preview) and active Internet connection to Xbox Live.</p> </li> <li> <p>$ConsoleGen8 will not work on Xbox Series X/S and $ConsoleGen9 will not work on Xbox One (S/X).</p> </li> </ul> <p>Credits: TitleOS for discovering $SystemUpdate\\hwinit.cfg</p>"},{"location":"telemetry/","title":"Telemetry","text":"<p>Just like on regular Windows 10, the Xbox One collects telemetry data too.</p> <p>Most telemetry is collected when you activate \"Extended usage data\", for example when subscribed to the Insider program.</p>"},{"location":"telemetry/#deactive-telemetry-in-dev-mode","title":"Deactive telemetry in Dev Mode","text":"<p>The following commands should disable most telemetry service. Unfortunately it needs to be executed on every bootup.</p> <pre><code>sc stop xbblackbox\nsc stop etwuploaderservice\nsc stop xbdiagservice\nsc stop diagtrack\n</code></pre>"},{"location":"telemetry/#telemetry-endpoints","title":"Telemetry Endpoints","text":"<p>The following urls are known telemetry endpoints, blocking them on a DNS level (Such as with PiHole) is sufficient to prevent most telemetry. </p>  <p>https://v10.events.data.microsoft.com/OneCollector/1.0/ - running processes, services and imported libraries, device info, UI frame Dumps, Controller Status, WinRT Calls, Telemetry Metric and Health Check, GPU Failures.</p> <p>https://v20.events.data.microsoft.com/OneCollector/1.0/ - \"TailoredExperiences Feedback\"</p> <p>https://settings-win.data.microsoft.com/settings/v3.0/xbox/XboxOneTelemetry - https://titleos.dev/manipulating-xbox-live-flighting/</p> <p>https://watson.telemetry.microsoft.com/Telemetry.Request - Unknown returns HTTP 408.</p>"},{"location":"update-cfg/","title":"Update.cfg","text":""},{"location":"update-cfg/#file-format","title":"File format","text":""},{"location":"update-cfg/#container_index_file","title":"CONTAINER_INDEX_FILE","text":"<p>Structure of container.index file.</p>    Offset Length Type Information     0x00 0x04 uint32 Type   0x08 0x04 uint32 FileCount   0x0C 0x04 uint32 NameLength   0x10 var WCHAR[NameLength] Name   var 0x04 uint32 AumIdLength   var var WCHAR[AumIdLength] AumId   var 0x08 FILETIME Timestamp   var 0x04 uint32 Unknown (seen 0, 1, 3 so far)   var 0x04 uint32 IdLength   var var WCHAR[IdLength] Id   var 0x04 uint32 AumIdLength"},{"location":"update-cfg/#container_index_entry","title":"CONTAINER_INDEX_ENTRY","text":"Offset Length Type Information     0x00 0x04 uint32 FilenameLength   0x04 var WCHAR[FilenameLength] Filename   var 0x04 uint32 FilenameAltLength   var var WCHAR[FilenameAltLength] FilenameAlt   var 0x04 uint32 AumIdLength   var var WCHAR[AumIdLength] AumId   var 0x08 FILETIME Timestamp   var 0x04 uint32 Unknown (seen 0, 1, 3 so far)   var 0x04 uint32 IdLength   var var WCHAR[IdLength] Id   var 0x04 uint32 AumIdLength"},{"location":"vbi/","title":"VBI - Virtual Boot Image","text":"<p>There are VBI files for each OS layer: HostOS, SystemOS, EraOS.</p> <p>Virtual boot images act as a kind of preloader to the respective XVD.</p>"},{"location":"vbi/#file-format","title":"File format","text":"<p>Total Size: variable</p>    Offset Length Type Information     0x00 0x02 ushort Magic (1IBV)   0x02 N/A N/A N/A"},{"location":"vulnerability-template-page/","title":"Name / description of vulnerability","text":""},{"location":"vulnerability-template-page/#metadata","title":"Metadata","text":"Release date 30.12.2020   Author Author name   Classification Type of access   Patched yes/no   Patch date 12.11.2020   First patched system version 10.0.15063.2022 (RS2_RELEASE_XBOX_1704.170501-1052)   Source https://github.com/link/to/source   Download <code>[Download](files/exploit_binary.zip)</code>"},{"location":"vulnerability-template-page/#info","title":"Info","text":"<p>Describe the exploit</p>"},{"location":"vulnerability-template-page/#prerequisites","title":"Prerequisites","text":"<p>Describe which software / state is needed to use this exploit</p>"},{"location":"vulnerability-template-page/#instructions","title":"Instructions","text":"<p>How to execute the exploit?</p>"},{"location":"wifi/","title":"Wifi","text":""},{"location":"wifi/#chipsets","title":"Chipsets","text":""},{"location":"wifi/#xbox-one","title":"Xbox One","text":"<p>First revision of the Xbox One has both chipsets on the same PCB, a 8-pin connection goes from the PCB to the motherboard. - Marvell Avastar 88W8897 - Marvell Avastar 88W8782U</p>"},{"location":"wifi/#xbox-one-s","title":"Xbox One S","text":"<ul> <li>MediaTek MT7612UN</li> </ul>"},{"location":"wifi/#xbox-one-x","title":"Xbox One X","text":"<p>Unknown</p>"},{"location":"wifi/#pictures","title":"Pictures","text":"<p>Xbox One (PHAT)     </p> <p>Xbox One S  </p> <p>Xbox One X (SCORPIO)</p>"},{"location":"wifi/#security-considerations","title":"Security considerations","text":"<p>On the conference ZeroNights 2018 several vulnerabilities in the Marvell Avastar Wifi chip family (88W8787, 88W8797, 88W8801, 88W8897, and 88W8997) were presented. Click here for more info: Link</p>"},{"location":"wifi/#credits","title":"Credits","text":"<ul> <li>Pictures from ifixit.com</li> </ul>"},{"location":"winmd/","title":"Winmd","text":""},{"location":"winmd/#xbox-one-windows-runtime","title":"Xbox One Windows Runtime","text":"<p>An overview and guide to the WinRT used on the Xbox One and how to use these in your  universal windows applications.</p> <p>The Windows Runtime is an API based on COM that allows interfacing from multiple programming languages and can be instanced from other services that register class objects. These are usually stored in the '.winmd' format that defines the information for each object within. The Xbox One makes great use of both WinRT and COM but it primarily uses the WinRT for the inbox applications (e.g. Dashboard) while store apps are not able to use them officially.</p>"},{"location":"winmd/#using-the-xbox-windows-runtime","title":"Using the Xbox Windows Runtime","text":"<p>We can utilise the runtime for the Xbox One by directly referencing the Windows.Xbox.winmd that is located on the system boot drive  (C:\\Windows\\System32\\WinMetadata) in our Windows Runtime Library (C++). This will allow you to wrap around functionality natively and expose it to your application if it is written in another language such as C#. </p> <p>You can also extract more explicit information for manual use in a command line project with the utilities in the Windows SDK.</p>"},{"location":"winmd/#extracting-header-and-idl-files","title":"Extracting header and idl files","text":"<ol> <li>Open the Developer Command Prompt and navigate to the dumped directory of the consoles \"C:\\Windows\\System32\\WinMetadata\" location.</li> <li>Run: winmdidl /nologo /outdir:\"[Full path to extraction folder]\" [Full path to target file].winmd</li> <li>Run: midlrt \"[Path of extracted IDL file]\" /metadata_dir \"[Path to Xbox WinMetadata folder]\"</li> <li>Done!</li> </ol> <p>Once they are extracted, you could then include the generated files but the preferred approach is to redefine the interfaces in your project and do manual activation - you can see this done in XboxUnattend.</p>"},{"location":"winmd/#resources","title":"Resources","text":"<p>https://docs.microsoft.com/en-us/uwp/winrt-cref/winmd-files https://docs.microsoft.com/en-us/cpp/cppcx/wrl/use-winmdidl-and-midlrt-to-create-h-files-from-windows-metadata?view=vs-2019</p>"},{"location":"xbox-boot-file-system/","title":"Xbox boot file system","text":""},{"location":"xbox-boot-file-system/#xbox-boot-file-system","title":"Xbox Boot file system","text":"<p>Xbox Boot File System, or XBFS for short, refers to the console flash filesystem.</p>"},{"location":"xbox-boot-file-system/#filesystem-sizes","title":"Filesystem sizes","text":"<p>Durango (pre-series-S/X):</p> <ul> <li>RAW: 0x1_3C00_0000 (5056 MB)</li> <li>Logical: 0x1_3B00_0000 (5040 MB)</li> </ul> <p>Series S/X:</p> <ul> <li>Logical: 0x4000_0000 (1024 MB / 1 GB)</li> </ul>"},{"location":"xbox-boot-file-system/#xbfs-header-offsets","title":"XBFS Header offsets","text":"<p>The Flash can contain 3 different revisions of filetables, differentiated via its sequence number. Highest sequence number is the active one.</p> <p>Checking if a filetable exists is done by checking for XBFS_HEADER-&gt;Magic.</p> <p>Absolute offsets (pre-series-S/X consoles):</p> <ul> <li>0x1_0000</li> <li>0x81_0000</li> <li>0x82_0000</li> </ul> <p>Absolute offsets (Series S/X)</p> <ul> <li>0x1800_8000</li> <li>?</li> </ul>"},{"location":"xbox-boot-file-system/#series-sx","title":"Series S/X","text":"<p>The Xbox Series S/X consoles have a big internal NVME drive, which has a dedicated section to hold XBFS. For some yet unknown reasons, when calculating the start offset of a file in XBFS, <code>0x6000</code> needs to be substracted to receive the correct start offset.</p>"},{"location":"xbox-boot-file-system/#checking-for-file-existance","title":"Checking for file existance","text":"<p>Iterate through the array of XBFS_FILE_ENTRY and check if XBFS_FILE_ENTRY.Size &gt; 0.</p>"},{"location":"xbox-boot-file-system/#xbfs-structures","title":"XBFS Structures","text":"<p>Byteorder: Little endian</p> <p>FILE_COUNT: variable</p> <p>PAGE_SIZE: 0x1000</p>"},{"location":"xbox-boot-file-system/#xbfs_header","title":"XBFS_HEADER","text":"<p>Size: 0x400</p>    Offset Length Type Information     0x00 0x04 uint Magic (SFBX)   0x04 0x01 byte Format Version   0x05 0x01 byte Sequence Version*   0x06 0x02 ushort Layout Version   0x08 0x08 uint64 Unknown   0x10 0x08 uint64 Unknown   0x18 0x08 uint64 Unknown   0x20 FILE_COUNT * sizeof(XBFS_FILE_ENTRY) struct XBFS_FILE_ENTRY File Entries   0x3D0 0x10 byte[] UUID   0x3E0 0x20 byte[] SHA256 Hash    <ul> <li>Sequence number: Wraps around, aka 0xFF -&gt; 0x00. 0x00 would be     latest.</li> </ul>"},{"location":"xbox-boot-file-system/#xbfs_file_entry","title":"XBFS_FILE_ENTRY","text":"<p>Size: 0x10</p>    Offset Length Type Information     0x00 0x04 uint32 Offset (page count)   0x04 0x04 uint32 Size (page count)   0x08 0x08 uint64 Unknown"},{"location":"xbox-boot-file-system/#file-entries","title":"File Entries","text":"Index Name Format Plaintext Information Per console     01 1smcbl_a.bin binary no SMC bootloader, slot A no   02 header.bin binary yes XBFS header no   03 devkit.ini binary no devkit ini unknown   04 mtedata.cfg binary no MTE data unknown   05 certkeys.bin binary yes Keyblobs &amp; console certificate yes   06 smcerr.log binary no SMC error log no   07 system.xvd xvd yes SystemOS VM partition no   08 $sosrst.xvd xvd yes SystemOS restore no   09 download.xvd xvd yes Download     ??? no   10 smc_s.cfg binary no SMC config - static unknown   11 sp_s.cfg binary partially SP config - static yes   12 os_s.cfg binary no OS config - static unknown   13 smc_d.cfg binary no SMC config - dynamic unknown   14 sp_d.cfg binary no SP config - dynamic unknown   15 os_d.cfg binary no OS config - dynamic unknown   16 smcfw.bin binary no SMC firmware unknown   17 boot.bin binary no Bootloaders unknown   18 host.xvd xvd yes HostOS partition no   19 settings.xvd xvd yes Settings no   20 1smcbl_b.bin binary no SMC bootloader, slot B no   21 bootanim.dat binary yes Bootanimation no   22 sostmpl.xvd xvd yes SystemOS template no   23 update.cfg binary yes Update config / log? unknown   24 sosinit.xvd xvd yes SystemOS init no   25 hwinit.cfg binary no Hardware init config unknown    <p>Note: Only XVD header is plaintext, data portion is encrypted as usual. Per Console: Is file encrypted via console specific keys or locked to console by SocId.</p>"},{"location":"xbox-boot-file-system/#access-via-srasystemos","title":"Access via SRA/SystemOS","text":"<p>Access to the Flash from SystemOS is possible via the provided pipes:</p> <p><code>\\\\.\\Xvuc\\FlashFs\\</code> - Connects to the Flash's NTFS filter driver on host, providing a NTFS like environment compatible with most Win32 file APIs. Reading specific files is possible by simply appending them to the pipe path. Ex: <code>\\\\.\\Xvuc\\FlashFs\\sp_s.cfg</code> would give you a file handle to sp_s.cfg. </p> <p><code>\\\\.\\Xvuc\\Flash\\</code> - Unlike the filtered pipe above, this pipe provides direct access to the flash, without any kind of file system filter. Refer above for more information. </p>"},{"location":"xbox-game-disc/","title":"Xbox One Game Disc","text":""},{"location":"xbox-game-disc/#history","title":"History","text":"<p>The term *XGD exists since the classic Xbox.</p> <ul> <li>XGD1 - Original classic Xbox</li> <li>XGD2/XGD3 - Xbox 360</li> <li>XGD4 - Xbox One</li> </ul>"},{"location":"xbox-game-disc/#file-structure","title":"File structure","text":"<pre><code>XGD4_DISC\n\u251c\u2500\u2500 Licenses\n\u2502\u00a0\u00a0 \u2514\u2500\u2500 License0.xml\n\u2514\u2500\u2500 MSXC\n    \u251c\u2500\u2500 Metadata\n    \u2502\u00a0\u00a0 \u251c\u2500\u2500 Package0.xvc\n    \u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 100x100_1.png\n    \u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 208x208_1.png\n    \u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2514\u2500\u2500 480x480_1.png\n    \u2502\u00a0\u00a0 \u251c\u2500\u2500 catalog.js\n    \u2502\u00a0\u00a0 \u2514\u2500\u2500 catalog.sig\n    \u2514\u2500\u2500 PackageName_1.0.0.0_x64__PublisherId\n</code></pre>"},{"location":"xbox-game-disc/#license0xml","title":"License0.xml","text":"<pre><code>&lt;?xml version=\"1.0\"?&gt;\n&lt;LicenseRequestResponse xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" ErrorCode=\"0\" ErrorText=\"OK\" xmlns=\"http://schemas.microsoft.com/xboxlive/security/clas/LicResp/v1\"&gt;\n  &lt;License LicenseProtocolVersion=\"4\"&gt;\n    &lt;SignedLicense&gt;PD94bWwgdmVyc2lvbj0iMS4wIj8+DQo8U2lnbmVkTGljZW5zZSB4bWxuczp4c2Q9Imh0dHA6Ly93d3cudzMub3JnLzIwMDEvWE1MU2NoZW1hIiB4bWxuczp4c2k9Imh0dHA6Ly93d3cudzMub3JnLzIwMDEvWE1MU2NoZW1hLWluc3RhbmNlIiBMaWNlbnNlUHJvdG9jb2xWZXJzaW9uPSI0IiB4bWxucz0iaHR0cDovL3NjaGVtYXMubWljcm9zb2Z0LmNvbS94Ym94bGl2ZS9zZWN1cml0eS9jbGFzL0xpY1Jlc3AvdjEiPg0KICA8U1ZMaWNlbnNlIExpY2Vuc2VJZD0iZWQwNjU0OWItNTcyNy00MDQ3LTg2NTctMDM5OTRkYWYyNWJiIiBMaWNlbnNlVHlwZT0iR2FtZUNvbnRlbnQiIFBlcnNpc3Q9ImZhbHNlIiBMaWNlbnNlVXNhZ2U9IkRpc2NPZmZsaW5lIj4NCiAgICA8RGlzY0lEPjViZDQ3MzU1LWQ2YTEtZmM4My1hMzVkLTFmZjdjMjM4Yzk1NDwvRGlzY0lEPg0KICAgIDxCb290TW9kZT5SZXRhaWw8L0Jvb3RNb2RlPg0KICAgIDxLZXlJZD4xNzkyZTIxMy0zMTdmLTRhNTktODFiNi01MjFlZjk0MmU3Nzg8L0tleUlkPg0KICAgIDxVcGxpbmtLZXlJZD4wMDAwMDAwNC0wMDAwLTAwMDAtMDAwMC0wMDAwMDAwMDAwMDA8L1VwbGlua0tleUlkPg0KICAgIDxBYnNvbHV0ZUlzc3VlRGF0ZT4yMDE2LTA1LTExVDIwOjIyOjMyLjc3MDU0MThaPC9BYnNvbHV0ZUlzc3VlRGF0ZT4NCiAgPC9TVkxpY2Vuc2U+DQogIDxTUExpY2Vuc2VCbG9jaz5vNVNzYllaRkprZXlSWWRISTQzbDJJSTZrVUVOMmlFcG5nWnl6SUpJYmh1Yk1zZHB6N1Z0R1hLeTNCd2VWOVZzWTFnZFNZR01jU3RiQm1sRXpWdzhsaFozL2NZWVAzWmlBOCtHdXJ4bHJiUjFVRzJYSmZYcG5IamFxUXFEODdMcmtSNE9Oa3REUG5ldzdQUXB0by9sY2FUNThrY0lFVHcyUGo5blRhalMrMzFldHBSMUVDNmxOTnV2RkZudnpmQjRNVDVjengvUU5TUmZwc05pR1hnZzQvaytWTVRnRUN3RkQ2NTk0bmR1SmdhdG9Felg4RzF0a1RLRFBFQ0RlUmUzU3Jpbnlydm9Yd0UxeEhLWkhCQksrckZibXVhQXMySFVxazdLQ1FsaENOeUYweTU1dkdwcTVSSndDekw1WTVUdEJOcWFsN0JhSzZoalRPZjNqTGIrY0tBQ09rTGlqNlBDdnkvT0dZM2JJZlJoYWduQmQ4ZVYybUp5T3VXVzlnUEJvdlc0Z0FyMHVuNXZqSS9zWU02YkdZZDRQcWxmVXdHTjkyZWF1OW5NUHFHY3k2R28zakJWSGtZWm50MUJxZkZQZFV5d0I5bHJOOWtUYjJRSzNtejliVThPTFk5WWY1MlhFaFpHZlY0Zis1V0NMTWk2YmczOTFibDlRd0lwbklua0NZTzIxTW5WV2lMZTl5Vk5qZ283ZERDci9UVzFsYlVWcEdSZm9sS3JKdFZwOGUwazFIZmdSWEZ1L1lYeGJ6bVQzZGtNejlBekJvMWI3L0lhTWN0MnJpaUU1RWp0SmVKR1liVWtnNksvbkExWTMyb3hXSWNicHBJN3hTQkNnNVBickFYVWgxcEZTVDhrTjBSKzBYNWs4c09ZZVViYlZnaHhVSkhIaElJellDaz08L1NQTGljZW5zZUJsb2NrPg0KPC9TaWduZWRMaWNlbnNlPg==&lt;/SignedLicense&gt;\n    &lt;Signature DigestAlgorithm=\"SHA256\" SignaturePadding=\"PKCS1\"&gt;\n      &lt;SigningKeyHash&gt;zvU0Hg2vUPFIoE8slLWWS8Zg1S6lTYePmMtmIR9sZx8=&lt;/SigningKeyHash&gt;\n      &lt;SignatureValue&gt;wiAHWvMYA5FViDqkW1GlgNJijEYaaqK7ZZjezYHsrkvSUNGxfpUqTYlLeuzLOVv/uSHlgf4QIJrKm0T131OW0J5DODsNkCGGjgGmcbnE0pguhP1jkcJ0HkMxAARDToX3JcMw52Yv5eq+Cddmgg49hDjN2eavQL5E4JDC0We5NWDapO5HTYZ3mwazXgE+4oCMUHHtP8pgQ02FT0Zn0Gh3ftR0kF1S0WpL/bF9upsL5Q/o4qc4nwNjxiTfV6/TZ4ymEGKUEOwOy8rgPMjRJnsfWCYYaW0UeOLzEsS9DFkRM7bzt6+QQbPEMxOUb0HJglaxRvpud5RNcNGSRqa7CTgLOQ==&lt;/SignatureValue&gt;\n    &lt;/Signature&gt;\n  &lt;/License&gt;\n&lt;/LicenseRequestResponse&gt;\n</code></pre> <p>Note: All keys have been replaced by bogus data</p>"},{"location":"xbox-game-disc/#catalogjs","title":"catalog.js","text":"<pre><code>{  \n  \"version\":\"2.0\",\n  \"launchPackage\":{  \n    \"contentId\":\"043f2c37-d43b-4675-9005-89e5bddcb83f\"\n  },\n  \"packages\":[  \n    {  \n      \"packageName\":\"Package0.xvc\",\n      \"productId\":\"11070feb-205e-41de-aef2-3475e433c3fe\",\n      \"contentId\":\"043f2c37-d43b-4675-9005-89e5bddcb83f\",\n      \"titleId\":\"1D09BE4D\",\n      \"titles\":[  \n        {  \n          \"locale\":\"default\",\n          \"title\":\"Prison Architect: Xbox One Edition\"\n        }\n      ],\n      \"vui\":[  \n        {  \n          \"locale\":\"default\",\n          \"title\":\"Prison Architect: Xbox One Edition\"\n        }\n      ],\n      \"images\":[  \n        {  \n          \"size\":\"100x100\",\n          \"image\":\"100x100_1.png\"\n        },\n        {  \n          \"size\":\"208x208\",\n          \"image\":\"208x208_1.png\"\n        },\n        {  \n          \"size\":\"480x480\",\n          \"image\":\"480x480_1.png\"\n        }\n      ],\n      \"ratings\":[  \n        {  \n          \"system\":\"CERO\",\n          \"value\":\"Unrated\"\n        },\n        {  \n          \"system\":\"CSRR\",\n          \"value\":\"PG15\"\n        },\n        {  \n          \"system\":\"GRB\",\n          \"value\":\"Unrated\"\n        },\n        {  \n          \"system\":\"PEGI\",\n          \"value\":\"16\"\n        },\n        {  \n          \"system\":\"DJCTQ\",\n          \"value\":\"16\"\n        },\n        {  \n          \"system\":\"PEGIPortugal\",\n          \"value\":\"16\"\n        },\n        {  \n          \"system\":\"USK\",\n          \"value\":\"12\"\n        },\n        {  \n          \"system\":\"China\",\n          \"value\":\"3+\"\n        },\n        {  \n          \"system\":\"OFLC\",\n          \"value\":\"M\"\n        },\n        {  \n          \"system\":\"COB\",\n          \"value\":\"M\"\n        },\n        {  \n          \"system\":\"PCBP\",\n          \"value\":\"16+\"\n        },\n        {  \n          \"system\":\"ESRB\",\n          \"value\":\"M\"\n        }\n      ],\n      \"size\":364699648,\n      \"type\":\"Game\"\n    }\n  ]\n}\n</code></pre>"},{"location":"xbox-game-disc/#license","title":"License","text":"<p>The data of SignedLicense in License0.xml decodes to something like this:</p> <pre><code>&lt;?xml version=\"1.0\"?&gt;\n&lt;SignedLicense xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" LicenseProtocolVersion=\"4\" xmlns=\"http://schemas.microsoft.com/xboxlive/security/clas/LicResp/v1\"&gt;\n  &lt;SVLicense LicenseId=\"ed06549b-5727-4047-8657-03994daf25bb\" LicenseType=\"GameContent\" Persist=\"false\" LicenseUsage=\"DiscOffline\"&gt;\n    &lt;DiscID&gt;5bd47355-d6a1-fc83-a35d-1ff7c238c954&lt;/DiscID&gt;\n    &lt;BootMode&gt;Retail&lt;/BootMode&gt;\n    &lt;KeyId&gt;1792e213-317f-4a59-81b6-521ef942e778&lt;/KeyId&gt;\n    &lt;UplinkKeyId&gt;00000004-0000-0000-0000-000000000000&lt;/UplinkKeyId&gt;\n    &lt;AbsoluteIssueDate&gt;2016-05-11T20:22:32.7705418Z&lt;/AbsoluteIssueDate&gt;\n  &lt;/SVLicense&gt;\n  &lt;SPLicenseBlock&gt;o5SsbYZFJkeyRYdHI43l2II6kUEN2iEpngZyzIJIbhubMsdpz7VtGXKy3BweV9VsY1gdSYGMcStbBmlEzVw8lhZ3/cYYP3ZiA8+GurxlrbR1UG2XJfXpnHjaqQqD87LrkR4ONktDPnew7PQpto/lcaT58kcIETw2Pj9nTajS+31etpR1EC6lNNuvFFnvzfB4MT5czx/QNSRfpsNiGXgg4/k+VMTgECwFD6594nduJgatoEzX8G1tkTKDPECDeRe3SrinyrvoXwE1xHKZHBBK+rFbmuaAs2HUqk7KCQlhCNyF0y55vGpq5RJwCzL5Y5TtBNqal7BaK6hjTOf3jLb+cKACOkLij6PCvy/OGY3bIfRhagnBd8eV2mJyOuWW9gPBovW4gAr0un5vjI/sYM6bGYd4PqlfUwGN92eau9nMPqGcy6Go3jBVHkYZnt1BqfFPdUywB9lrN9kTb2QK3mz9bU8OLY9Yf52XEhZGfV4f+5WCLMi6bg391bl9QwIpnInkCYO21MnVWiLe9yVNjgo7dDCr/TW1lbUVpGRfolKrJtVp8e0k1HfgRXFu/YXxbzmT3dkMz9AzBo1b7/IaMct2riiE5EjtJeJGYbUkg6K/nA1Y32oxWIcbppI7xSBCg5PbrAXUh1pFST8kN0R+0X5k8sOYeUbbVghxUJHHhIIzYCk=&lt;/SPLicenseBlock&gt;\n&lt;/SignedLicense&gt;\n</code></pre> <p>Note: All keys have been replaced by bogus data</p>"},{"location":"xbox-game-disc/#references","title":"References","text":"<p>Xbox Game Disc on xboxdevwiki</p>"},{"location":"xbox-operating-system/","title":"Xbox operating system","text":""},{"location":"xbox-operating-system/#xbox-operating-system","title":"Xbox Operating System","text":""},{"location":"xbox-operating-system/#host","title":"Host","text":"<p>The primary operating system known as the Host OS is responsible for managing the virtual machines, providing drivers for hardware components and more. It was based on a variation of Windows 8 LNM, a stripped down operating system for bare minimum requirements, with many customisations that implement Microsoft's Xbox Virtual Machine stack.</p>"},{"location":"xbox-operating-system/#host-volumesdrives","title":"Host Volumes/Drives","text":"Partition Mount Point Notes     Internal Flash F:\\ The flash does not contain a normal file system, it is using the Xbox boot filesystem and is exposed as a normal NTFS partition via a special driver.   host.xvd C:\\ Host's Windows Installation.   User Content E:\\ Direct access to the HDD User Content partition. XVCs are stored here.   System Update R:\\ Direct access to the HDD System Update partition. Boot slots and SystemOS XVDs.   System Support G:\\(?) Direct access to the HDD System Support partition. Containing SystemOS's settings, temp, etc."},{"location":"xbox-operating-system/#system","title":"System","text":"<p>The System OS is built to provide the main visual and interactive layer of the console. This operating system is currently based on Windows 'OneCoreUAP' with a custom shell, services and other components.</p>"},{"location":"xbox-operating-system/#sra-virtual-drives","title":"SRA Virtual Drives","text":"File Name Mount Point Dev-Only Read-Only Desc     system.xvd C:\\ false true System Boot.   systemaux.xvd X:\\ false true Inbox apps.   systemauxf.xvd Y:\\ false true Inbox apps.   $sosrst.xvd T:\\ false true Temporary storage.   systemtools.xvd J:\\ true true Developer utilities.   settings-saved.xvd S:\\ false false Console settings data. (Licenses, prefetch, registry and more)   systemmisc.xvd M:\\ false true Miscellaneous system boot files.   user.xvd U:\\ false false User and application data.   user-devkit.xvd U:\\ true false User and application data."},{"location":"xbox-operating-system/#gameera","title":"Game/Era","text":"<p>The Game operating system is used exclusively for games that target the XDK due to the higher allocation of console resources. It is built upon the same variant of Windows 8 LNM as the Host OS but is essentially smaller and more efficient.</p>"},{"location":"xbox-operating-system/#era-virtual-drives","title":"ERA Virtual Drives","text":"File Name Mount Point Notes     ERA.xvd C:\\ GameOS's Windows installation. Packaged with games via the XVC's user data. Attempts to read from this partition will result in the hypervisor terminating the ERA VM.   Game.XVC G:\\ Running game's binaries/data. The XVC mounted and decrypted.   ERATools.xvd J:\\ (MS Internal (and ERA Test?) Devkits with XDK recoveries only). Contains tools like ipconfig, telnetd, debug support dlls and dlls needed to connect to the XDK via the XB CLI tools."},{"location":"xbox-operating-system/#gamecore","title":"GameCore","text":"<p>A new operating system that currently appears to be the new foundation for games developed on Windows 10 devices. Based on a 'headless' Windows Core OS (WCOS).</p>"},{"location":"xbox-ui/","title":"Xbox ui","text":""},{"location":"xbox-ui/#xboxui","title":"XboxUI","text":""},{"location":"xbox-ui/#general","title":"General","text":"<p>XboxUI is the rendering engine / framework that is used to display windows in SystemOS. The framework is located in system.xvd =&gt; C:\\Windows\\XboxUI.</p>"},{"location":"xbox-ui/#components","title":"Components","text":""},{"location":"xbox-ui/#win32-process-rendering","title":"Win32 process rendering","text":"<p>Generally incompatible due to lack of win32kfull.sys. SystemOS instead uses win32kmin.sys like Windows IoT. Win32kmin lacks windowing support. </p>"},{"location":"xbox-virtual-drive/","title":"Xbox virtual drive","text":""},{"location":"xbox-virtual-drive/#xbox-virtual-drive","title":"Xbox Virtual Drive","text":""},{"location":"xbox-virtual-drive/#what-are-xvds","title":"What are XVDs?","text":"<p>XVD packages are a secured file format used by the Xbox One to store data, similar to the Xbox 360's STFS packages. XVD files are usually used to store system images/data while XVCs (a slightly modified version of XVDs) are used to store game data.</p> <p>An XVD file consists of a header containing the hash of the top level hash table, certain metadata about the file (such as content ID, content type, the sandbox ID the package was created for, the product ID that the package belongs to, etc) and also a signature of the header itself which is stored at the beginning of the XVD file, from 0h to 200h.</p> <p>After the header there's space for an optional embedded XVD (which is usually the GameOS partition that the game inside the XVC is coded against). This embedded XVD is just a copy-paste of the XVD being embedded with no changes made to it.</p> <p>After the embedded XVD comes an (optional) area for the hash tree, the tree is a multilevel array of hashes, with the topmost levels containing the hashes of the blocks in the levels underneath it. At the lowest level of the tree hashes of the data blocks (the blocks following the hash tree) are made. The hashes in the hash tree are computed using SHA-256, with the result usually being resized to 18h bytes (but for data block hashes can be slightly modified depending on flags in the XVD header and the XVC region that the data being hashed is located). The full 256-bit hash of the top-most level is stored in the XVD header.</p> <p>Following the hash tree is another optional area reserved for user data (also known as Persistent Local Storage). This area is for games to store local-only data, although some system XVD packages seem to store data here too.</p> <p>Finally after the user data comes the actual XVD data. If the XVD file is an XVC the first 3 blocks are reserved for an XVC descriptor (which is never encrypted). This specifies the content ID, any encryption keys used, the chunks used to update packages (if the XVC is using chunk-based updates) and offsets/lengths/keyIDs of the different XVC regions in the file, along with other metadata. XVC regions can be encrypted with any of the keys specified in the XVC descriptor. The region-based encryption also includes the XVC region ID as part of the AES-XTS IV/counter (known as data unit number for AES-XTS).</p> <p>Then comes the actual filesystem data. This data is encrypted with the CIK (can either be the decrypted value of the encrypted CIK in the XVD header if it's an XVD, or the key corresponding to the XVC key GUID)</p> <p>The filesystem data is just a normal NTFS filesystem containing the files inside the package, other filesystems may be possible but NTFS is the only one observed so far.</p>"},{"location":"xbox-virtual-drive/#security-overview","title":"Security Overview","text":"<p>From a security standpoint XVDs seem very secure:</p> <ul> <li>Each block of data is hashed, with the hash stored in the bottom-most hash tree level</li> <li>Each block in that hash tree level is then hashed with the hash result stored in the level above it</li> <li>This continues, until eventually the number of hashes in the level can fit into one hash block</li> <li>That hash block is then hashed with the result stored in the XVD header</li> <li>The XVD header is then hashed, and the hash signed with Microsoft's private key, the signature is then stored at the beginning of the file.</li> </ul> <p>To make sure the package is authenticated by Microsoft and not tampered with the console just needs to verify the signature of the header-hash, verify the top-most hash tree hash and then verify that each hash in the hash tree matches up with the actual hash. This is similar to the way STFS packages were secured on the Xbox 360, however instead of having the hash tables scattered around the file (as with STFS) they're instead stored before the data actually begins.</p> <p>The data blocks inside XVD files are also secured with AES-XTS encryption (the encrypted data is then used for the hashes), with XVC packages the Xbox One either retrieves the encryption key over Xbox Live or retrieves it from the game disc, however it seems that the keys from these methods don't work as CIK keys. It's assumed that these keys are obfuscated/encrypted in some way (possibly with the retail ODK in the same way that the encrypted CIK in non-XVC files is encrypted?)</p> <p>Non-XVC files use an ODK which appears to be static for all XVDs (but differs between retail/devkits ?), this key is used to decrypt the encrypted CIK in the XVD header, the decrypted CIK is then used to decrypt the XVD data.</p>"},{"location":"xbox-virtual-drive/#acronyms","title":"Acronyms","text":"<ul> <li> <p>CIK: Content Instance Key, used to encrypt the XVD data, is either stored encrypted in the header or stored outside the package in a license file</p> </li> <li> <p>ODK: Offline Distribution Key, used to decrypt the header's encrypted CIK, and likely any CIK stored outside the package</p> </li> </ul>"},{"location":"xbox-virtual-drive/#tools","title":"Tools","text":"<p>xvdtool by emoose</p>"},{"location":"xbox-virtual-drive/#references","title":"References","text":"<ul> <li>XVD info by emoose on github</li> <li>AES-XTS on wikipedia</li> </ul>"},{"location":"xcrdutil/","title":"XCRDutil","text":"<p>Manage mounting of XVD/XVC files in HostOS, from SystemOS.</p> <p>Xcrdutil can be used to get info about XVD files (and other formats) as well as mount and create XVD files with some limitations. Via the UWP sandbox, two different XVD files can be mounted, \"Updater.xvd\" and \"SystemTools.xvd\".</p> <p>The tool is located at <code>C:\\Windows\\System32\\xcrdutil.exe</code></p>"},{"location":"xcrdutil/#accepted-paths","title":"Accepted paths","text":"<p>XCRDutil allows specifying remote paths, in HostOS, via two notations: - XCRD paths (see below, e.g. <code>[XUC:]\\package.xvd</code> for User Content partition in HostOS). These paths are an abstraction to the HostOS filesystem, allowing to refer to .xvd's without knowing their exact location, and possibly also allowing for security / permission checks. - Global paths (e.g. <code>\\??\\F:\\</code> for F: / XBFS drive in HostOS). These refer to a physical volume (like a disk partition, the flash, etc) in HostOS.</p> <p>Not all the options/arguments for XCRDUtil expect the same format for the paths. Some options are able to work with paths pointing to the SystemOS's filesystem, while others may only work with remote paths to HostOS, in either one of the two types just specified previously: *  XCRD paths. * \"global\" paths pointing to a HostOS volume, which start with the non-standard \"\\??\\\" prefix</p> <p>Following is a table describing what options XCRDUtil has, and kind of path each option expects. Examples are provided at the end of the page: | Option | Option description  | Arg1 Path type | Arg2 Path type  |-------------|----------|-------------|------------- | write_blob  | Writes the contents of an .xvd (from a SystemOS path) to an .xvd in the HostOS's filesystem, represented by a XCRD path  | XCRD | SystemOS | read_blob   | reads one .xvd (from a HostOS XCRD path) and writes it to SystemOS's filesystem.  | XCRD | SystemOS | QueryInfo   | Gives information about an XVD (either mounted or unmounted) accesible to HostOS | Global HostOS path / XCRD | N/A</p> <p>To be completed.</p>"},{"location":"xcrdutil/#xcrd-paths","title":"XCRD paths","text":"XCRD Id XCRD Path Description     0 [XTE:] HDD Temp   1 [XUC:] HDD User Content   2 [XSS:] HDD System Support   3 [XSU:] HDD System Image   4 N/A N/A   5 [XFG:] HDD Future Growth   6 N/A N/A   7 [XTF:] XTF Remote storage   8 [XBL:] Xbox Live storage   9 [XOD:] XODD (System VM)   10 [XVE:] Used for so-called \"paths to embedded XVDs\"   11 [XT0:] USB Transfer Storage   12 [XT1:] USB Transfer Storage   13 [XT2:] USB Transfer Storage   14 [XT3:] USB Transfer Storage   15 [XT4:] USB Transfer Storage   16 [XT5:] USB Transfer Storage   17 [XT6:] USB Transfer Storage   18 [XT7:] USB Transfer Storage   19 [XE0:] USB External Storage   20 [XE1:] USB External Storage   21 [XE2:] USB External Storage   22 [XE3:] USB External Storage   23 [XE4:] USB External Storage   24 [XE5:] USB External Storage   25 [XE6:] USB External Storage   26 [XE7:] USB External Storage   27 [XBX:] XBOX (Copy-Over-LAN)   28 [XSR:] SRA (local or SMB)   29 [XFA:] Unknown   30 [XAS:] N/A   31 [XRT:] N/A   32 [XRU:] N/A   33 [XRS:] N/A   34 [XRI:] N/A"},{"location":"xcrdutil/#examples","title":"Examples","text":"<p>Create new XCRD Path in the HDD Temp partition</p> <pre><code>xcrdutil -bxp 0 mytestpath\n</code></pre> <p>Outputs something like:</p> <pre><code>Successfully built XCRD Path: [XTE:]\\mytestpath\nCommand completed successfully.\n</code></pre> <p>So called \"paths to embedded XVDs\" can also be created</p> <pre><code>xcrdutil -bxp 0 mytestembeddedpath -exvd_path\n</code></pre> <p>Outputs something like:</p> <pre><code>Successfully built XCRD Path: [XVE:]\\[XTE:]\\mytestembeddedpath\nCommand completed successfully.\n</code></pre> <p>Mount package</p> <pre><code>xcrdutil -m [XUC:]\\targetPackage.xvd\n</code></pre> <p>Outputs something like:</p> <pre><code>Successfully mounted [XUC:]\\targetPackage.xvd\nDevice Path : \\\\?\\GLOBALROOT\\Device\\Harddisk21\\Partition1\nCommand completed successfully.\n</code></pre> <p>Mounted XVD's can be accessed with junctions:</p> <pre><code>mklink /j D:\\Folder \\\\?\\GLOBALROOT\\Device\\Harddisk17\\Partition1\\\n</code></pre> <p>Query Info for given XVD:</p> <pre><code>xcrdutil -QueryInfo \\??\\F:\\host.xvd 5\n</code></pre> <p>Write file to Host layer</p> <pre><code>xcrdutil -write_blob [XUC:]\\targetPackage.xvd D:\\DevelopmentFiles\\localPackage.xvd\n</code></pre> <p>Read file from Host layer</p> <pre><code>xcrdutil -read_blob [XUC:]\\targetPackage.xvd D:\\DevelopmentFiles\\localPackage.xvd\n</code></pre> <p>Delete file on Host layer</p> <pre><code>xcrdutil -delete_blob [XUC:]\\targetPackage.xvd\n</code></pre>"},{"location":"xcrdutil/#error-codes","title":"Error Codes","text":"Error Number Meaning Description How to obtain it     0x80070002 File/path not found This error appears whenever an invalid path to a file is used (either XCRD, native \\??\\ path, or SystemOS path). <code>xcrdutil -m [XUC:]\\idontexist.xvd</code>   0x80070570 Possible permission error This error appears when an operation is denied due to insufficient permissions. Examples include trying to mount host.xvd. <code>xcrdutil -m \\??\\F:\\host.xvd</code> or <code>xcrdutil -QueryInfo \\??\\F:\\host.xvd 3</code>   0x8007048F Path not found This error appears when trying to create/access a file in a XCRD path that does not exist. <code>xcrdutil -c [XE0:]\\someinvalidpath</code>   0x80070032 Unknown Possibly meaning the passed XVD does not have region information <code>xcrdutil -Specifiers [XUC:]\\someXvdYouveMounted</code>"},{"location":"xct/","title":"XCT","text":"<p>Unknown usecase, related to XVD files.</p>"},{"location":"xct/#file-format","title":"File format","text":"Offset Length Type Information     0x00 0x10 byte[] ContentId   0x10 0x04 byte[] Unknown   0x14 0x02 ushort Unknown   0x16 0x02 ushort Unknown   0x18 0x04 uint32 Unknown   0x1C 0x04 uint32 Unknown   0x20 0x04 uint32 Unknown   0x24 0x04 uint32 Unknown   0x28 0x04 byte[] Unknown   0x2C 0x02 ushort Unknown   0x2E 0x02 ushort Unknown   0x30 0x08 uint64 Unknown   0x38 0x40 byte[] Unknown   0x78 0x08 uint64 Unknown"},{"location":"xtf-apis/","title":"Xtf apis","text":""},{"location":"xtf-apis/#xtf-apis","title":"XTF APIs","text":""},{"location":"xtf-apis/#what-are-xtf-apis","title":"What are XTF APIs?","text":"<p>XTF (Also known as Xbox Toolkit Framework) is a set of APIs used in conjunction by the console and XDK or GDK running on a PC. These APIs are generally only active console side on an ERA kit or above, however patched methods have allowed UWA kits to use them in the past. They expose a number of functions from console information gathering and application management to controller input simulation, execution, file management and debugging. Note: Headers, libraries and debugging symbols for XTF can be found at <code>C:\\Program Files (x86)\\Microsoft GDK\\toolKit</code> in the case of a local GDK installation.</p>"},{"location":"xtf-apis/#xtfapplication","title":"XtfApplication","text":"<p>This XTF API is used to automate application management.</p>"},{"location":"xtf-apis/#xtfconsolecontrol","title":"XtfConsoleControl","text":"<p>This XTF API is used to get information about and manage a development console.</p>"},{"location":"xtf-apis/#xtfconsolemanager","title":"XtfConsoleManager","text":"<p>This XTF API is used to get the default development console or to manage a collection of development consoles.</p>"},{"location":"xtf-apis/#xtfdebugmonitor","title":"XtfDebugMonitor","text":"<p>This XTF API is used to receive debug output from an app or game running on a development console.</p>"},{"location":"xtf-apis/#xtffileio","title":"XtfFileIO","text":"<p>This XTF API is used to manage files on a development console.</p>"},{"location":"xtf-apis/#xtfinput","title":"XtfInput","text":"<p>This XTF API is used to simulate controller input on a development console.</p>"},{"location":"xtf-apis/#xtfremoterun","title":"XtfRemoteRun","text":"<p>This XTF API is used to run utility executables on a development console.</p>"},{"location":"xtf-apis/#xtfuser","title":"XtfUser","text":"<p>This XTF API is used to manage users on a development console.</p>"},{"location":"xtf-apis/#additional-xtf-apis","title":"Additional Xtf APIs","text":"<p>These XTF APIs are used for checking available space for apps and retrieving user friendly error messages.</p>"},{"location":"xtf-apis/#disclaimer","title":"Disclaimer:","text":"<p>This information was gathered from a publicly accessible Game Development Kit and files dumped from a UWA devkit.</p>"},{"location":"xvi/","title":"Xvi files","text":"<p>Some sort of metadata file related to XVD files, stored next to downloaded xvd files on the hard drive.</p>"},{"location":"xvi/#file-format","title":"File format","text":"<p>Total size: 0x1000</p>    Offset Length Type Information     0x00 0x08 uint64 Magic (crdi-xvc)   0x08 0x238 \u00a0byte[] Unknown   0x240 0x10 \u00a0byte[] ContentId   0x250 0x10 byte[] Other Id   0x260 0xDA0 byte[] Unknown"},{"location":"dev-portal-api/device-portal-pages/","title":"Device Portal pages","text":"<p>The Xbox Device Portal provides a set of standard pages similar to what's available on the Windows Device Portal, as well as several pages that are unique. For detailed descriptions of the former, see Windows Device Portal overview. The following sections describe the pages that are unique to the Xbox Device Portal.</p>"},{"location":"dev-portal-api/device-portal-pages/#home","title":"Home","text":"<p>Similar to the Windows Device Portal's Apps manager page, the Xbox Device Portal's Home page displays a list of installed games and apps under My games &amp; apps. You can click on the name of a game or app to see more details about it, such as the Package family name. In the Actions drop down, you can take action on the game or app, such as Launch it.</p> <p>Under Xbox Live test accounts, you can manage the accounts associated with your Xbox. You can add users and guest accounts, create new users, sign users in and out, and remove accounts.</p>"},{"location":"dev-portal-api/device-portal-pages/#xbox-live-game-saves","title":"Xbox Live (Game saves)","text":"<p>Both the Windows Device Portal and the Xbox Device Portal have an Xbox Live page. However, the Xbox Device Portal has a unique section, Xbox Live game saves, where you can save data for games installed on your Xbox. Enter the Service Configuration ID (SCID) (see Xbox Live service configuration for more information), Membername (MSA), and Package Family Name (PFN) associated with the title and game save, browse for the Input File (.json or .xml), and then select one of the buttons (Reset, Import, Export, and Delete) to manipulate the save data.</p> <p>In the Generate section, you can generate dummy data and save to the specified input file. Simply enter the Containers (default 2), Blobs (default 3), and Blob Size (default 1024), and select Generate.</p>"},{"location":"dev-portal-api/device-portal-pages/#http-monitor","title":"HTTP monitor","text":"<p>The HTTP Monitor allows you to view decrypted HTTP and HTTPS traffic from your app or game when it's running on your Xbox One.</p>  <p>To enable it, open Dev Home on your Xbox One, go to the Settings tab, and in the HTTP Monitor Settings box, check Enable HTTP Monitor.</p>  <p>Once enabled, in the Xbox Device Portal, you can Stop, Clear, and Save to file HTTP and HTTPS traffic by selecting the respective buttons.</p>"},{"location":"dev-portal-api/device-portal-pages/#network-fiddler-tracing","title":"Network (Fiddler tracing)","text":"<p>The Network page in the Xbox Device Portal is almost identical to the Networking page in the Windows Device Portal, with the exception of Fiddler tracing, which is unique to the Xbox Device Portal. This allows you to run Fiddler on your PC to log and inspect HTTP and HTTPS traffic between your Xbox One and the internet. See How to use Fiddler with Xbox One when developing for UWP for more information.</p>"},{"location":"dev-portal-api/device-portal-pages/#media-capture","title":"Media capture","text":"<p>On the Media capture page, you can select Capture Screenshot to take a screenshot of your Xbox One. Once you do, your browser will prompt you to download the file. You can check Prefer HDR if you want to take the screenshot in HDR (if the console supports it).</p>"},{"location":"dev-portal-api/device-portal-pages/#settings","title":"Settings","text":"<p>On the Settings page, you can view and edit several settings for your Xbox One. At the top, you can select Import to import settings from a file and Export to export the current settings to a .txt file. Importing settings can make bulk editing easier, especially when configuring multiple consoles. To create a settings file to import, change the settings to how you want them to be, and then export the settings. Then you can use this file to import settings quickly and easily for other consoles.</p> <p>There are several sections with different settings to view and/or edit, which are explained below.</p>"},{"location":"dev-portal-api/device-portal-pages/#device-information","title":"Device Information","text":"<ul> <li> <p>Device name: The name of the device. To edit, change the name in the box and select Save.</p> </li> <li> <p>OS version: Read-only. The version number of the operating system.</p> </li> <li> <p>OS edition: Read-only. The name of the major release of the operating system.</p> </li> <li> <p>Xbox Live device ID: Read-only.</p> </li> <li> <p>Console ID: Read-only.</p> </li> <li> <p>Serial number: Read-only.</p> </li> <li> <p>Console Type: Read-only. The type of Xbox One device (Xbox One, Xbox One S, or Xbox One X).</p> </li> <li> <p>Dev Mode: Read-only. The developer mode that the device is in.</p> </li> </ul>"},{"location":"dev-portal-api/device-portal-pages/#audio-settings","title":"Audio Settings","text":"<ul> <li> <p>Audio bitstream format: The format of the audio data.</p> </li> <li> <p>HDMI audio: The type of audio through the HDMI port.</p> </li> <li> <p>Headset format: The format of the audio that comes through headphones.</p> </li> <li> <p>Optical audio: The type of audio through the optical port.</p> </li> <li> <p>Use HDMI or optical audio headset: Check this box if you are using a headset connected via HDMI or optical.</p> </li> </ul>"},{"location":"dev-portal-api/device-portal-pages/#display-settings","title":"Display Settings","text":"<ul> <li> <p>Color depth: The number of bits used for each color component of a single pixel.</p> </li> <li> <p>Color space: The color gamut available to the display.</p> </li> <li> <p>Display resolution: The resolution of the display.</p> </li> <li> <p>Display connection: The type of connection to the display.</p> </li> <li> <p>Allow high dynamic range (HDR): Enables HDR on the display. Only available to compatible displays.</p> </li> <li> <p>Allow 4K: Enables 4K resolution on the display. Only available to compatible displays.</p> </li> <li> <p>Allow Variable Refresh Rate (VRR): Enable VRR on the display. Only available to compatible displays.</p> </li> </ul>"},{"location":"dev-portal-api/device-portal-pages/#kinect-settings","title":"Kinect Settings","text":"<p>A Kinect sensor must be connected to the console in order to change these settings.</p> <ul> <li> <p>Enable Kinect: Enable the attached Kinect sensor.</p> </li> <li> <p>Force Kinect reload on app change: Reload the attached Kinect sensor whenever a different app or game is run.</p> </li> </ul>"},{"location":"dev-portal-api/device-portal-pages/#localization-settings","title":"Localization Settings","text":"<ul> <li> <p>Geographic region: The geographic region that the device is set to. Must be the specific 2-character country code (for example, US for United States).</p> </li> <li> <p>Preferred language(s): The language that the device is set to.</p> </li> <li> <p>Time zone: The time zone that the device is set to.</p> </li> </ul>"},{"location":"dev-portal-api/device-portal-pages/#network-settings","title":"Network Settings","text":"<ul> <li>Wireless radio settings: The wireless settings of the device (whether certain aspects such as wireless LAN are on or off).</li> </ul>"},{"location":"dev-portal-api/device-portal-pages/#power-settings","title":"Power Settings","text":"<ul> <li> <p>When idle, dim screen after (minutes): The screen will dim after the device has been idle for this amount of time. Set to 0 to never dim the screen.</p> </li> <li> <p>When idle, turn off after: The device will shut down after it has been idle for this amount of time.</p> </li> <li> <p>Power mode: The power mode of the device. See About energy-saving and instant-on power modes for more information.</p> </li> <li> <p>Automatically boot console when connected to power: The device will automatically turn on when it is connected to a power source.</p> </li> </ul>"},{"location":"dev-portal-api/device-portal-pages/#preference-settings","title":"Preference Settings","text":"<ul> <li> <p>Default home experience: Sets which home screen appears when the device is turned on.</p> </li> <li> <p>Allow connections from the Xbox app: The Xbox app on another device (such as a Windows 10 PC) can connect to this console.</p> </li> <li> <p>Treat UWP apps as games by default: Games and apps get different resources allocated to them on Xbox. If you check this box, all UWP packages will be identified as games and thus will get more resources.</p> </li> </ul>"},{"location":"dev-portal-api/device-portal-pages/#user-settings","title":"User Settings","text":"<ul> <li> <p>Auto sign in user: Automatically signs in the selected user when the device is turned on.</p> </li> <li> <p>Auto sign in user controller: Automatically associates a particular controller type with a particular user.</p> </li> </ul>"},{"location":"dev-portal-api/device-portal-pages/#xbox-live-sandbox","title":"Xbox Live Sandbox","text":"<p>Here you can change the Xbox Live sandbox that the device is in. Enter the name of the sandbox in the box, and select Change.</p>"},{"location":"dev-portal-api/device-portal-pages/#scratch","title":"Scratch","text":"<p>This is a blank workspace, which you can customize to your liking. You can use the menu (click the menu button at the top left) to add tools (select Add tools to workspace, then the tools that you want to add, then Add). Note that you can use this menu to add tools to any workspace, as well as manage the workspaces themselves.</p>"},{"location":"dev-portal-api/device-portal-pages/#game-event-data","title":"Game event data","text":"<p>On the Game event data page, you can view a realtime graph that streams in the number of Event Tracing for Windows (ETW) game events currently recorded on your Xbox One. If there are game events recorded on the system, you can also view details (event name, event occurrence, and the game title) describing each event in a data table below the data graph. The table is only available if there are events recorded.</p>"},{"location":"dev-portal-api/set-up-device-portal/","title":"Set up Device Portal on Xbox","text":"<p>The following steps show how to enable the Xbox Device Portal, which gives you remote access to your development Xbox.</p> <ol> <li> <p>Open Dev Home. This should open by default when you boot up your development Xbox, but you can also open it from the home screen.</p>  </li> <li> <p>Within Dev Home, on the Home tab, under Remote Access, select Remote Access Settings.</p>  </li> <li> <p>Check the Enable Xbox Device Portal setting.</p> </li> <li> <p>Under Authentication, select Set username and password. Enter a User name and Password to use to authenticate access to your dev kit from a browser, and Save them.</p> </li> <li> <p>Close the Remote Access page and note the URL listed under Remote Access on the Home tab.</p> </li> <li> <p>Enter the URL in your browser, and then sign in with the credentials you configured.</p> </li> <li> <p>You will receive a warning about the certificate that was provided, similar to that pictured below. In Edge, click on Details and then Go on to the webpage to access the Xbox Device Portal. In the dialog that pops up, enter the username and password that you entered previously on your Xbox.</p>  </li> </ol>"},{"location":"dev-portal-api/api/app-packagemanager-networkapp/","title":"App packagemanager networkapp","text":""},{"location":"dev-portal-api/api/app-packagemanager-networkapp/#register-an-app-in-a-loose-folder","title":"Register an app in a loose folder","text":"<p>Request</p> <p>You can register an app in a loose folder by using the following request format.</p>    Method Request URI     POST /api/app/packagemanager/networkapp    <p>URI parameters</p> <ul> <li>None</li> </ul> <p>Request headers</p> <ul> <li>None</li> </ul> <p>Request body</p> <pre><code>{\n    \"mainpackage\" :\n    {\n        \"networkshare\" : \"\\\\some\\share\\path\",\n        \"username\" : \"optional_username\",\n        \"password\" : \"optional_password\"\n    }\n}\n</code></pre> <p>Response</p> <p>Status code</p> <p>This API has the following expected status codes.</p>    HTTP status code Description     200 Deploy request accepted and being processed   4XX Error codes   5XX Error codes    <p>Available device families</p> <ul> <li>Windows Desktop</li> <li>Xbox</li> <li>HoloLens</li> <li>IoT</li> </ul>"},{"location":"dev-portal-api/api/app-packagemanager-networkapp/#register-a-related-set-in-loose-file-folders","title":"Register a related set in loose file folders","text":"<p>Request</p> <p>You can register a related set in loose folders by using the following request format.</p>    Method Request URI     POST /api/app/packagemanager/networkapp    <p>URI parameters</p> <ul> <li>None</li> </ul> <p>Request headers</p> <ul> <li>None</li> </ul> <p>Request body</p> <pre><code>{\n    \"mainpackage\" :\n    {\n        \"networkshare\" : \"\\\\some\\share\\path\",\n        \"username\" : \"optional_username\",\n        \"password\" : \"optional_password\"\n    },\n    \"optionalpackages\" :\n    [\n        {\n            \"networkshare\" : \"\\\\some\\share\\path2\",\n            \"username\" : \"optional_username2\",\n            \"password\" : \"optional_password2\"\n        },\n        ...\n    ]\n}\n</code></pre> <p>Response</p> <p>Status code</p> <p>This API has the following expected status codes.</p>    HTTP status code Description     200 Deploy request accepted and being processed   4XX Error codes   5XX Error codes    <p>Available device families</p> <ul> <li>Windows Desktop</li> <li>Xbox</li> <li>HoloLens</li> <li>IoT Credits Microsoft</li> </ul>"},{"location":"dev-portal-api/api/app-packagemanager-package/","title":"App packagemanager package","text":""},{"location":"dev-portal-api/api/app-packagemanager-package/#install-an-app","title":"Install an app","text":"<p>Request</p> <p>You can install an app by using the following request format.</p>    Method Request URI     POST /api/app/packagemanager/package    <p>URI parameters</p> <p>You can specify the following additional parameters on the request URI:</p>    URI parameter Description     package (required) The file name of the package to be installed.    <p>Request headers</p> <ul> <li>None</li> </ul> <p>Request body</p> <ul> <li>The .appx or .appxbundle file, as well as any dependencies the app requires. </li> <li>The certificate used to sign the app, if the device is IoT or Windows Desktop. Other platforms do not require the certificate. </li> </ul> <p>Response</p> <p>Status code</p> <p>This API has the following expected status codes.</p>    HTTP status code Description     200 Deploy request accepted and being processed   4XX Error codes   5XX Error codes    <p>Available device families</p> <ul> <li>Windows Mobile</li> <li>Windows Desktop</li> <li>Xbox</li> <li>HoloLens</li> <li>IoT</li> </ul>"},{"location":"dev-portal-api/api/app-packagemanager-package/#install-a-related-set","title":"Install a related set","text":"<p>Request</p> <p>You can install a related set by using the following request format.</p>    Method Request URI     POST /api/app/packagemanager/package    <p>URI parameters</p> <p>You can specify the following additional parameters on the request URI:</p>    URI parameter Description     package (required) The file names of the packages to be installed.    <p>Request headers</p> <ul> <li>None</li> </ul> <p>Request body  - Add \".opt\" to the optional package file names when specifying them as a parameter, like so: \"foo.appx.opt\" or \"bar.appxbundle.opt\".  - The .appx or .appxbundle file, as well as any dependencies the app requires.  - The certificate used to sign the app, if the device is IoT or Windows Desktop. Other platforms do not require the certificate. </p> <p>Response</p> <p>Status code</p> <p>This API has the following expected status codes.</p>    HTTP status code Description     200 Deploy request accepted and being processed   4XX Error codes   5XX Error codes    <p>Available device families</p> <ul> <li>Windows Mobile</li> <li>Windows Desktop</li> <li>Xbox</li> <li>HoloLens</li> <li>IoT</li> </ul>"},{"location":"dev-portal-api/api/app-packagemanager-package/#uninstall-an-app","title":"Uninstall an app","text":"<p>Request</p> <p>You can uninstall an app by using the following request format.</p>    Method Request URI     DELETE /api/app/packagemanager/package    <p>URI parameters</p>    URI parameter Description     package (required) The PackageFullName (from GET /api/app/packagemanager/packages) of the target app    <p>Request headers</p> <ul> <li>None</li> </ul> <p>Request body</p> <ul> <li>None</li> </ul> <p>Response</p> <p>Status code</p> <p>This API has the following expected status codes.</p>    HTTP status code Description     200 OK   4XX Error codes   5XX Error codes    <p>Available device families</p> <ul> <li>Windows Mobile</li> <li>Windows Desktop</li> <li>Xbox</li> <li>HoloLens</li> <li>IoT</li> </ul> <p>Credits Microsoft</p>"},{"location":"dev-portal-api/api/app-packagemanager-packages/","title":"App packagemanager packages","text":""},{"location":"dev-portal-api/api/app-packagemanager-packages/#uninstall-an-app","title":"Uninstall an app","text":"<p>Request</p> <p>You can uninstall an app by using the following request format.</p>    Method Request URI     DELETE /api/app/packagemanager/package    <p>URI parameters</p>    URI parameter Description     package (required) The PackageFullName (from GET /api/app/packagemanager/packages) of the target app    <p>Request headers</p> <ul> <li>None</li> </ul> <p>Request body</p> <ul> <li>None</li> </ul> <p>Response</p> <p>Status code</p> <p>This API has the following expected status codes.</p>    HTTP status code Description     200 OK   4XX Error codes   5XX Error codes    <p>Available device families</p> <ul> <li>Windows Mobile</li> <li>Windows Desktop</li> <li>Xbox</li> <li>HoloLens</li> <li>IoT</li> </ul>"},{"location":"dev-portal-api/api/app-packagemanager-packages/#get-installed-apps","title":"Get installed apps","text":"<p>Request</p> <p>You can get a list of apps installed on the system by using the following request format.</p>    Method Request URI     GET /api/app/packagemanager/packages    <p>URI parameters</p> <ul> <li>None</li> </ul> <p>Request headers</p> <ul> <li>None</li> </ul> <p>Request body</p> <ul> <li>None</li> </ul> <p>Response</p> <p>The response includes a list of installed packages with associated details. The template for this response is as follows.</p> <pre><code>{\"InstalledPackages\": [\n    {\n        \"Name\": string,\n        \"PackageFamilyName\": string,\n        \"PackageFullName\": string,\n        \"PackageOrigin\": int, (https://msdn.microsoft.com/library/windows/desktop/dn313167(v=vs.85).aspx)\n        \"PackageRelativeId\": string,\n        \"Publisher\": string,\n        \"Version\": {\n            \"Build\": int,\n            \"Major\": int,\n            \"Minor\": int,\n            \"Revision\": int\n     },\n     \"RegisteredUsers\": [\n     {\n        \"UserDisplayName\": string,\n        \"UserSID\": string\n     },...\n     ]\n    },...\n]}\n</code></pre> <p>Status code</p> <p>This API has the following expected status codes.</p>    HTTP status code Description     200 OK   4XX Error codes   5XX Error codes    <p>Available device families</p> <ul> <li>Windows Mobile</li> <li>Windows Desktop</li> <li>Xbox</li> <li>HoloLens</li> <li>IoT</li> </ul> <p>Credits Microsoft</p>"},{"location":"dev-portal-api/api/app-packagemanager-register/","title":"Register an app in a loose folder","text":"<p>Request</p> <p>You can register an app in a loose folder by using the following request format.</p>    Method Request URI     POST /api/app/packagemanager/register    <p>URI parameters</p> <p>You can specify the following additional parameters on the request URI:</p>    URI Parameter Description     folder (required) The destination folder name of the package to be registered. This folder must exist under d:\\developmentfiles\\LooseApps on the console. This folder name should be base64 encoded as it may contain path separators if the folder is in a subfolder under LooseApps.    <p>Request headers</p> <ul> <li>None</li> </ul> <p>Request body</p> <ul> <li>None</li> </ul> <p>Response</p> <p>Status code</p> <p>This API has the following expected status codes.</p>    HTTP status code Description     200 Deploy request accepted and being processed   4XX Error codes   5XX Error codes    <p>Available device families</p> <ul> <li>Windows Xbox</li> </ul> <p>Notes</p> <p>There are at least three different ways to get the loose app on the console in the desired folder. The easiest is to simply copy the files via SMB to \\\\DevelopmentFiles\\LooseApps. This will require a username and password on UWA kits which can be obtained via /ext/smb/developerfolder.  <p>The second way is by copying over individual files to the correct location by doing a POST to /api/filesystem/apps/file where knownfolderid is DevelopmentFiles, packagefullname is empty, and filename and path are properly supplied (path should begin with LooseApps).</p> <p>The third way is to copy an entire folder at a time via /api/app/packagemanager/upload where destinationFolder is the name of the folder to be placed under d:\\developmentfiles\\looseapps and the payload is a multi-part conforming http body of the directory contents.</p> <p>Credits Microsoft</p>"},{"location":"dev-portal-api/api/app-packagemanager-state/","title":"App packagemanager state","text":""},{"location":"dev-portal-api/api/app-packagemanager-state/#get-app-installation-status","title":"Get app installation status","text":"<p>Request</p> <p>You can get the status of an app installation that is currently in progress by using the following request format.</p>    Method Request URI     GET /api/app/packagemanager/state    <p>URI parameters</p> <ul> <li>None</li> </ul> <p>Request headers</p> <ul> <li>None</li> </ul> <p>Request body</p> <ul> <li>None</li> </ul> <p>Response</p> <p>Status code</p> <p>This API has the following expected status codes.</p>    HTTP status code Description     200 The result of the last deployment   204 The installation is running   404 No installation action was found    <p>Available device families</p> <ul> <li>Windows Mobile</li> <li>Windows Desktop</li> <li>Xbox</li> <li>HoloLens</li> <li>IoT Credits Microsoft</li> </ul>"},{"location":"dev-portal-api/api/app-packagemanager-upload/","title":"Upload a folder to the development directory","text":"<p>Request</p> <p>You can upload an entire folder at once to the Known Folder Id for the DevelopmentFiles (or to a subfolder within that folder).</p>    Method Request URI     POST /api/app/packagemanager/upload    <p>URI parameters</p> <p>You can specify the following additional parameters on the request URI:</p>    URI Parameter Description     destinationFolder  (required) The destination folder name of the folder to be uploaded. This folder will be placed under d:\\developmentfiles\\LooseApps on the console. This folder name should be base64 encoded as it may contain path separators if the folder is a subfolder under LooseApps.    <p>Request headers</p> <ul> <li>None</li> </ul> <p>Request body</p> <ul> <li>multi-part conforming http body of the directory contents.</li> </ul> <p>Response</p> <p>Status code</p> <p>This API has the following expected status codes.</p>    HTTP status code Description     200 Success   4XX Error codes   5XX Error codes    <p>Available device families</p> <ul> <li>Windows Xbox</li> </ul> <p>Credits Microsoft Credits Microsoft</p>"},{"location":"dev-portal-api/api/appx-packagemanager-networkapp/","title":"Appx packagemanager networkapp","text":""},{"location":"dev-portal-api/api/appx-packagemanager-networkapp/#register-an-app-in-a-loose-folder","title":"Register an app in a loose folder","text":"<p>Request</p> <p>You can register an app in a loose folder by using the following request format.</p>    Method Request URI     POST /api/appx/packagemanager/networkapp    <p>URI parameters</p> <ul> <li>None</li> </ul> <p>Request headers</p> <ul> <li>None</li> </ul> <p>Request body</p> <pre><code>{\n    \"mainpackage\" :\n    {\n        \"networkshare\" : \"\\\\some\\share\\path\",\n        \"username\" : \"optional_username\",\n        \"password\" : \"optional_password\"\n    }\n}\n</code></pre> <p>Response</p> <p>Status code</p> <p>This API has the following expected status codes.</p>    HTTP status code Description     200 Deploy request accepted and being processed   4XX Error codes   5XX Error codes    <p>Available device families</p> <ul> <li>Windows Desktop</li> <li>Xbox</li> <li>HoloLens</li> <li>IoT</li> </ul>"},{"location":"dev-portal-api/api/appx-packagemanager-networkapp/#register-a-related-set-in-loose-file-folders","title":"Register a related set in loose file folders","text":"<p>Request</p> <p>You can register a related set in loose folders by using the following request format.</p>    Method Request URI     POST /api/appx/packagemanager/networkapp    <p>URI parameters</p> <ul> <li>None</li> </ul> <p>Request headers</p> <ul> <li>None</li> </ul> <p>Request body</p> <pre><code>{\n    \"mainpackage\" :\n    {\n        \"networkshare\" : \"\\\\some\\share\\path\",\n        \"username\" : \"optional_username\",\n        \"password\" : \"optional_password\"\n    },\n    \"optionalpackages\" :\n    [\n        {\n            \"networkshare\" : \"\\\\some\\share\\path2\",\n            \"username\" : \"optional_username2\",\n            \"password\" : \"optional_password2\"\n        },\n        ...\n    ]\n}\n</code></pre> <p>Response</p> <p>Status code</p> <p>This API has the following expected status codes.</p>    HTTP status code Description     200 Deploy request accepted and being processed   4XX Error codes   5XX Error codes    <p>Available device families</p> <ul> <li>Windows Desktop</li> <li>Xbox</li> <li>HoloLens</li> <li>IoT</li> </ul> <p>Note Appears to be a duplicate of <code>/api/app/packagemanager/networkapp</code> Credits Microsoft</p>"},{"location":"dev-portal-api/api/appx-packagemanager-package/","title":"Appx packagemanager package","text":""},{"location":"dev-portal-api/api/appx-packagemanager-package/#install-an-app","title":"Install an app","text":"<p>Request</p> <p>You can install an app by using the following request format.</p>    Method Request URI     POST /api/appx/packagemanager/package    <p>URI parameters</p> <p>You can specify the following additional parameters on the request URI:</p>    URI parameter Description     package (required) The file name of the package to be installed.    <p>Request headers</p> <ul> <li>None</li> </ul> <p>Request body</p> <ul> <li>The .appx or .appxbundle file, as well as any dependencies the app requires. </li> <li>The certificate used to sign the app, if the device is IoT or Windows Desktop. Other platforms do not require the certificate. </li> </ul> <p>Response</p> <p>Status code</p> <p>This API has the following expected status codes.</p>    HTTP status code Description     200 Deploy request accepted and being processed   4XX Error codes   5XX Error codes    <p>Available device families</p> <ul> <li>Windows Mobile</li> <li>Windows Desktop</li> <li>Xbox</li> <li>HoloLens</li> <li>IoT</li> </ul>"},{"location":"dev-portal-api/api/appx-packagemanager-package/#install-a-related-set","title":"Install a related set","text":"<p>Request</p> <p>You can install a related set by using the following request format.</p>    Method Request URI     POST /api/appx/packagemanager/package    <p>URI parameters</p> <p>You can specify the following additional parameters on the request URI:</p>    URI parameter Description     package (required) The file names of the packages to be installed.    <p>Request headers</p> <ul> <li>None</li> </ul> <p>Request body  - Add \".opt\" to the optional package file names when specifying them as a parameter, like so: \"foo.appx.opt\" or \"bar.appxbundle.opt\".  - The .appx or .appxbundle file, as well as any dependencies the app requires.  - The certificate used to sign the app, if the device is IoT or Windows Desktop. Other platforms do not require the certificate. </p> <p>Response</p> <p>Status code</p> <p>This API has the following expected status codes.</p>    HTTP status code Description     200 Deploy request accepted and being processed   4XX Error codes   5XX Error codes    <p>Available device families</p> <ul> <li>Windows Mobile</li> <li>Windows Desktop</li> <li>Xbox</li> <li>HoloLens</li> <li>IoT</li> </ul>"},{"location":"dev-portal-api/api/appx-packagemanager-package/#uninstall-an-app","title":"Uninstall an app","text":"<p>Request</p> <p>You can uninstall an app by using the following request format.</p>    Method Request URI     DELETE /api/appx/packagemanager/package    <p>URI parameters</p>    URI parameter Description     package (required) The PackageFullName (from GET /api/app/packagemanager/packages) of the target app    <p>Request headers</p> <ul> <li>None</li> </ul> <p>Request body</p> <ul> <li>None</li> </ul> <p>Response</p> <p>Status code</p> <p>This API has the following expected status codes.</p>    HTTP status code Description     200 OK   4XX Error codes   5XX Error codes    <p>Available device families</p> <ul> <li>Windows Mobile</li> <li>Windows Desktop</li> <li>Xbox</li> <li>HoloLens</li> <li>IoT</li> </ul> <p>Notes</p> <p>This is appears to be a duplicate of <code>/api/app/packagemanager/package</code></p> <p>Credits Microsoft</p>"},{"location":"dev-portal-api/api/appx-packagemanager-packages/","title":"Appx packagemanager packages","text":""},{"location":"dev-portal-api/api/appx-packagemanager-packages/#get-installed-apps","title":"Get installed apps","text":"<p>Request</p> <p>You can get a list of apps installed on the system by using the following request format.</p>    Method Request URI     GET /api/appx/packagemanager/packages    <p>URI parameters</p> <ul> <li>None</li> </ul> <p>Request headers</p> <ul> <li>None</li> </ul> <p>Request body</p> <ul> <li>None</li> </ul> <p>Response</p> <p>The response includes a list of installed packages with associated details. The template for this response is as follows.</p> <pre><code>{\"InstalledPackages\": [\n    {\n        \"Name\": string,\n        \"PackageFamilyName\": string,\n        \"PackageFullName\": string,\n        \"PackageOrigin\": int, (https://msdn.microsoft.com/library/windows/desktop/dn313167(v=vs.85).aspx)\n        \"PackageRelativeId\": string,\n        \"Publisher\": string,\n        \"Version\": {\n            \"Build\": int,\n            \"Major\": int,\n            \"Minor\": int,\n            \"Revision\": int\n     },\n     \"RegisteredUsers\": [\n     {\n        \"UserDisplayName\": string,\n        \"UserSID\": string\n     },...\n     ]\n    },...\n]}\n</code></pre> <p>Status code</p> <p>This API has the following expected status codes.</p>    HTTP status code Description     200 OK   4XX Error codes   5XX Error codes    <p>Available device families</p> <ul> <li>Windows Mobile</li> <li>Windows Desktop</li> <li>Xbox</li> <li>HoloLens</li> <li>IoT</li> </ul> <p>Notes This appears to be a duplicate of <code>/api/app/packagemanager/package</code></p> <p>Credits Microsoft</p>"},{"location":"dev-portal-api/api/appx-packagemanager-state/","title":"Appx packagemanager state","text":""},{"location":"dev-portal-api/api/appx-packagemanager-state/#get-app-installation-status","title":"Get app installation status","text":"<p>Request</p> <p>You can get the status of an app installation that is currently in progress by using the following request format.</p>    Method Request URI     GET /api/appx/packagemanager/state    <p>URI parameters</p> <ul> <li>None</li> </ul> <p>Request headers</p> <ul> <li>None</li> </ul> <p>Request body</p> <ul> <li>None</li> </ul> <p>Response</p> <p>Status code</p> <p>This API has the following expected status codes.</p>    HTTP status code Description     200 The result of the last deployment   204 The installation is running   404 No installation action was found    <p>Available device families</p> <ul> <li>Windows Mobile</li> <li>Windows Desktop</li> <li>Xbox</li> <li>HoloLens</li> <li>IoT</li> </ul> <p>Notes A duplicate of <code>/api/appx/packagemanager/state</code> Credits Microsoft</p>"},{"location":"dev-portal-api/api/os-machinename/","title":"Os machinename","text":""},{"location":"dev-portal-api/api/os-machinename/#get-the-machine-name","title":"Get the machine name","text":"<p>Request</p> <p>You can get the name of a machine by using the following request format.</p>    Method Request URI     GET /api/os/machinename    <p>URI parameters</p> <ul> <li>None</li> </ul> <p>Request headers</p> <ul> <li>None</li> </ul> <p>Request body</p> <ul> <li>None</li> </ul> <p>Response</p> <p>The response includes the computer name in the following format. </p> <pre><code>{\"ComputerName\": string}\n</code></pre> <p>Status code</p> <p>This API has the following expected status codes.</p>    HTTP status code Description     200 OK   4XX Error codes   5XX Error codes    <p>Available device families</p> <ul> <li>Windows Mobile</li> <li>Windows Desktop</li> <li>Xbox</li> <li>HoloLens</li> <li>IoT</li> </ul> <p>Credits Microsoft</p>"},{"location":"dev-portal-api/ext/app-deployinfo/","title":"Requests deployment information for one or more installed packages.","text":"<p>Request</p>    Method Request URI     POST /ext/app/deployinfo        <p>URI parameters</p> <ul> <li>None</li> </ul> <p>Request headers</p> <ul> <li>None</li> </ul> <p>Request body</p> <p>A JSON array in the following format:</p> <ul> <li>DeployInfo</li> <li>PackageFullName - Name of the package that we are requesting information about.</li> <li>OverlayFolder - Optional path to an overlay folder path if using this feature.</li> </ul>"},{"location":"dev-portal-api/ext/app-deployinfo/#response","title":"Response","text":"<p>Response body</p> <p>A JSON array in the following format (some fields are optional):</p> <ul> <li>DeployInfo</li> <li>PackageFullName - Name of the package that we are receiving information about.</li> <li>DeployType - The type of deployment.</li> <li>DeployPathOrSpecifiers - A deploy path for loose deployments or installed specifiers for packaged deployments.</li> <li>DeployDrive - The drive the package is deployed to for applicable deployment types.</li> <li>DeploySizeInBytes - The size in bytes of the package for applicable deployment types.</li> <li>OverlayFolder - The overlay folder for deployments which support this feature.</li> </ul> <p>Status code</p> <p>This API has the following expected status codes.</p>    HTTP status code Description     200 Success   4XX Error codes   5XX Error codes    <p>Available device families</p> <ul> <li>Windows Xbox</li> </ul> <p>Credits Microsoft</p>"},{"location":"dev-portal-api/ext/app-move/","title":"Moves an application from one drive to another or manages installation of an application on the target Xbox One development console.","text":""},{"location":"dev-portal-api/ext/app-move/#cancels-the-move-or-install-on-the-target-xbox-one-development-console","title":"Cancels the move or install on the target Xbox One development console.","text":"<p>Request</p>    Method Request URI     Delete /ext/app/move    <p>URI parameters</p>    Parameter Format Description      installid base64-encoded string    <p>Request headers</p> <ul> <li>None</li> </ul> <p>Request body </p> <ul> <li>None</li> </ul> <p>Response </p> <ul> <li>None</li> </ul> <p>Status code</p> <p>This API has the following expected status codes.</p>    HTTP status code Description     200 Success   4XX Error codes   5XX Error codes"},{"location":"dev-portal-api/ext/app-move/#gets-the-move-or-install-status-from-an-installid","title":"Gets the move or install status from an installid.","text":"<p>Request</p>    Method Request URI     Get /ext/app/move    <p>URI parameters</p>    Parameter Format Description      installid base64-encoded string    <p>Request headers</p> <ul> <li>None</li> </ul> <p>Request body</p> <ul> <li>None</li> </ul> <p>Response </p> <ul> <li>If the call is successful, the service will return a JSON object with the following members.</li> </ul>    Member Description     installProgress Number. This value is a percent between 0 and 100 for the move or installs current progress.   isRunning Boolean. If this value is true, the specified move or install is still running. If it is no longer running this value will be false or the method will return an HTTP 404 indicating the install was not found.    <p>Status code</p> <p>This API has the following expected status codes.</p>    HTTP status code Description     204 The request to enable Fiddler was accepted. Fiddler will be enabled the next time the device reboots.   4XX Error codes   5XX Error codes"},{"location":"dev-portal-api/ext/app-move/#moves-a-given-application-from-one-drive-to-another-drive","title":"Moves a given application from one drive to another drive.","text":"<p>Request</p>    Method Request URI     Post /ext/app/move    <p>URI parameters</p>    Member Format Description      packagefullname base64-encoded string    destinationDrive string    <p>Request headers</p> <ul> <li>None</li> </ul> <p>Request body </p> <ul> <li>None</li> </ul> <p>Response </p> <ul> <li>If the call is successful, the service will return a JSON object with the following members.</li> </ul>    Parameter Format Description      installid string    <p>Status code</p> <p>This API has the following expected status codes.</p>    HTTP status code Description     204 The request to disable Fiddler tracing was successful. Tracing will be disabled on the next reboot of the device.   4XX Error codes   5XX Error codes    <p>Available device families</p> <ul> <li>Windows Xbox</li> </ul> <p>Credits Microsoft</p>"},{"location":"dev-portal-api/ext/app-packagemanager-era-available/","title":"Determines whether there are any apps ready to be registered on the Title Scratch drive or in the DeveloperFiles LooseApps folder.","text":"<p>Gets a Boolean value that indicates whether there are any apps ready to be registered on the Title Scratch drive or in the DeveloperFiles LooseApps folder.</p> <p>Request Method      | Request URI :------     | :----- GET | /ext/app/packagemanager/era/available</p> <p>URI parameters</p> <ul> <li>None</li> </ul> <p>Request headers</p> <ul> <li>None</li> </ul> <p>Request body</p> <ul> <li>None</li> </ul> <p>Response </p> <p>If the call is successful, the service will return a JSON array containing information about the unregistered packages on the console. Each entry in the array will contain the following members.</p>    Member Description     Folder Relative path to the app   PackageFullName Name of the app.   isEra Boolean. If this value is true, the app is an ERA title. If this value is false, the app is a UWP app.    <p>Status code</p> <p>This API has the following expected status codes.</p>    HTTP status code Description     200 The request to access the credentials for the file share was granted.   4XX Error codes   5XX Error codes    <p>Available device families</p> <ul> <li>Windows Xbox</li> </ul> <p>Credits Microsoft</p>"},{"location":"dev-portal-api/ext/app-packagemanager-era-check/","title":"Determines whether the specified AppXManifest is for an ERA title or a UWP application.","text":"<p>Gets a Boolean value that indicates whether the specified AppXManifest is for an ERA title.</p> <p>Request</p>    Method Request URI     POST (/ext/app/packagemanager/era/check        <p>URI parameters</p> <ul> <li>None</li> </ul> <p>Request headers</p> <ul> <li>None</li> </ul> <p>Request body</p> <ul> <li>The request must contain the multi-part conforming HTTP body of the AppXManifest.xml file.</li> </ul>"},{"location":"dev-portal-api/ext/app-packagemanager-era-check/#response","title":"Response","text":"<p>Response body</p> <p>If the call is successful, the service will return a JSON object with the following members. Member      | Description :------     | :----- isEra | Boolean. If this value is true, the specified AppXManifest is for an ERA title. If this value is false, the specified AppXManifest is for a UWP app.</p> <p>Status code</p> <p>This API has the following expected status codes.</p>    HTTP status code Description     200 Success   4XX Error codes   5XX Error codes    <p>Available device families</p> <ul> <li>Windows Xbox</li> </ul> <p>Credits Microsoft</p>"},{"location":"dev-portal-api/ext/app-packagemanager-era-register/","title":"Registers the app in the specified loose folder, or registers an app on a specified drive by the package full name.","text":"<p>Request</p>    Method Request URI     POST /ext/app/packagemanager/era/register        <p>URI parameters</p>    Parameter Format Description     Folder base64-encoded string The destination folder name of the package to be registered. This folder must exist on the Title Scratch drive on the console. This folder name should be base64-encoded, as it may contain path separators if the folder is in a subfolder on the drive. Required if registering a loose folder.   packagefullname base64-encoded string The Package Full Name of the package. Required if registering an app on a drive.   deploydrive string The drive where the package resides. Required if registering an app on a drive.    <p>Request headers</p> <ul> <li>None</li> </ul> <p>Request body</p> <ul> <li>None</li> </ul>"},{"location":"dev-portal-api/ext/app-packagemanager-era-register/#response","title":"Response","text":"<p>Response body</p> <ul> <li>Unknown</li> </ul> <p>Status code</p> <p>This API has the following expected status codes.</p>    HTTP status code Description     200 Success   4XX Error codes   5XX Error codes    <p>Available device families</p> <ul> <li>Windows Xbox</li> </ul> <p>Credits Microsoft</p>"},{"location":"dev-portal-api/ext/app-packagemanager-era-registernetwork/","title":"Registers the app on the specified network share.","text":"<p>Request</p>    Method Request URI     POST /ext/app/packagemanager/era/registernetwork        <p>URI parameters</p>    Parameter Format Description     networkshare base64-encoded string The network share location of the package to be registered. This network share should be base64-encoded.    <p>Request headers</p> <ul> <li>None</li> </ul> <p>Request body</p> <p>This API can take a \u201cusername\u201d and \u201cpassword\u201d optional parameter in JSON format in the request body if credentials are needed to access the network share.</p>"},{"location":"dev-portal-api/ext/app-packagemanager-era-registernetwork/#response","title":"Response","text":"<p>Response body</p> <ul> <li>Unknown</li> </ul> <p>Status code</p> <p>This API has the following expected status codes.</p>    HTTP status code Description     200 Success   4XX Error codes   5XX Error codes    <p>Available device families</p> <ul> <li>Windows Xbox</li> </ul> <p>Credits Microsoft</p>"},{"location":"dev-portal-api/ext/app-packagemanager-era-streaming/","title":"Starts the streaming install of an XVC from a network share or local drive on the console.","text":"<p>Request</p>    Method Request URI     POST (/ext/app/packagemanager/era/streaming        <p>URI parameters</p>    Parameter Format Description     xvcfilepath base64-encoded string The network share or console local path to the XVC to be installed.   deploydrive string Optional deploy drive.   Languages string Optional language specifiers.   Devices string Optional devices specifiers.   ContentTypes string Optional contentTypes specifiers   Tags string Optional tags specifiers.   OddSim Whether or not ODD simulation should be used.     <p>Request headers</p> <ul> <li>None</li> </ul> <p>Request body</p> <ul> <li>Optionally this API can take a \u201cusername\u201d and \u201cpassword\u201d optional parameter in JSON format in the request body if credentials are needed to access the network share.</li> </ul>"},{"location":"dev-portal-api/ext/app-packagemanager-era-streaming/#response","title":"Response","text":"<p>Response body</p> <p>If the call is successful, the service will return a JSON object with the following members.</p>    Member Format Description     ContentId string A GUID indicating the ContentId of this package.   InstallId string A GUID which will identify the install for future calls to cancel or retrieve the status of the install.    <p>Status code</p> <p>This API has the following expected status codes.</p>    HTTP status code Description     200 Success   4XX Error codes   5XX Error codes    <p>Available device families</p> <ul> <li>Windows Xbox</li> </ul> <p>Credits Microsoft</p>"},{"location":"dev-portal-api/ext/app-packagemanager-era-upload/","title":"Uploads the contents of the specified folder to the Title Scratch Drive (or to a subfolder within that folder).","text":"<p>Request</p>    Method Request URI     POST /ext/app/packagemanager/era/upload        <p>URI parameters</p>    Parameter Format Description     destinationFolder base64-encoded string Name of the folder to create on the Title Scratch drive. This folder name should be base64-encoded as it may contain path separators if the folder is a subfolder under Title Scratch.    <p>Request headers</p> <ul> <li>None</li> </ul> <p>Request body</p> <p>The request must contain the multi-part conforming HTTP body of the directory contents.</p>"},{"location":"dev-portal-api/ext/app-packagemanager-era-upload/#response","title":"Response","text":"<p>Response body</p> <ul> <li>Unknown</li> </ul> <p>Status code</p> <p>This API has the following expected status codes.</p>    HTTP status code Description     200 Success   4XX Error codes   5XX Error codes    <p>Remarks</p> <p>The recommended way to copy a folder to the Title Scratch drive is to use the SMB share via \\IP_Address\\TitleScratch, or to use the XDK. This RESTful API is intended for use from a browser or when File Explorer is not available.</p> <p>Available device families</p> <ul> <li>Windows Xbox</li> </ul> <p>Credits Microsoft</p>"},{"location":"dev-portal-api/ext/app-sshpins/","title":"SSH Pins API reference","text":"<p>You can remove all trusted SSH pins on your devkit using this REST API.</p>"},{"location":"dev-portal-api/ext/app-sshpins/#remove-trusted-ssh-pins","title":"Remove trusted SSH pins","text":"<p>Request</p>    Method Request URI     DELETE /ext/app/sshpins        <p>URI parameters</p> <ul> <li>None</li> </ul> <p>Request headers</p> <ul> <li>None</li> </ul> <p>Request body </p> <ul> <li>None</li> </ul> <p>Response </p> <ul> <li>None </li> </ul> <p>Status code</p> <p>This API has the following expected status codes.</p>    HTTP status code Description     204 The request to clear the pins was successful.   4XX Error codes   5XX Error codes    <p>Available device families</p> <ul> <li>Windows Xbox</li> </ul> <p>Credits Microsoft</p>"},{"location":"dev-portal-api/ext/app-unregistered/","title":"unregistered packages. API reference","text":"<p>You can access development-related files on your Xbox One using a standard file explorer. This allows you to easily view and replace files from your PC to the console.</p> <p>Request Returns a JSON array of unregistered packages.</p>    Method Request URI     GET /ext/app/unregistered    <p>URI parameters</p> <ul> <li>None</li> </ul> <p>Request headers</p> <ul> <li>None</li> </ul> <p>Request body</p> <ul> <li>None</li> </ul> <p>Response </p> <p>If the call is successful, the service will return a JSON array containing information about the unregistered packages on the console. Each entry in the array will contain the following members.</p>    Member Description     PackageFullName Name of the app.   DeployType This should be UnregisteredPackage.   DeployDrive The drive where the package resides.   DeploySizeInBytes The size of the package.    <p>Status code</p> <p>This API has the following expected status codes.</p>    HTTP status code Description     200 The request to access the credentials for the file share was granted.   4XX Error codes   5XX Error codes    <p>Available device families</p> <ul> <li>Windows Xbox</li> </ul> <p>Credits Microsoft</p>"},{"location":"dev-portal-api/ext/fiddler/","title":"Fiddler settings API reference","text":"<p>You can enable and disable Fiddler network tracing on your devkit using this REST API.</p>"},{"location":"dev-portal-api/ext/fiddler/#determine-if-fiddler-tracing-is-enabled","title":"Determine if Fiddler tracing is enabled","text":"<p>Request</p> <p>You can check to see if Fiddler tracing is enabled on the device using the following request.</p>    Method Request URI     GET /ext/fiddler    <p>URI parameters</p> <ul> <li>None</li> </ul> <p>Request headers</p> <ul> <li>None</li> </ul> <p>Request body </p> <ul> <li>None</li> </ul> <p>Response </p> <ul> <li>JSON bool property IsProxyEnabled which specifiers whether the proxy is enabled or not.</li> </ul> <p>Status code</p> <p>This API has the following expected status codes.</p>    HTTP status code Description     200 Success   4XX Error codes   5XX Error codes"},{"location":"dev-portal-api/ext/fiddler/#enable-fiddler-tracing","title":"Enable Fiddler tracing","text":"<p>Request</p> <p>You can enable Fiddler tracing for the devkit using the following request.  Note that the device must be restarted before this takes effect.</p>    Method Request URI     POST /ext/fiddler    <p>URI parameters</p> <p>You can specify the following additional parameters on the request URI:</p>    URI parameter Description     proxyAddress The IP address or hostname of the device running Fiddler   proxyPort The port which Fiddler is using for monitoring traffic. Defaults to 8888   updateCert (optional) A boolean value indicating if the root Fiddler cert is provided. This must be true if Fiddler has never been configured on this devkit or was configured for a different host.    <p>Request headers</p> <ul> <li>None</li> </ul> <p>Request body</p> <ul> <li>None if updateCert is false or not provided. Multi-part conforming http body containing the FiddlerRoot.cer file otherwise.</li> </ul> <p>Response </p> <ul> <li>None  </li> </ul> <p>Status code</p> <p>This API has the following expected status codes.</p>    HTTP status code Description     204 The request to enable Fiddler was accepted. Fiddler will be enabled the next time the device reboots.   4XX Error codes   5XX Error codes"},{"location":"dev-portal-api/ext/fiddler/#disable-fiddler-tracing-on-the-devkit","title":"Disable Fiddler tracing on the devkit","text":"<p>Request</p> <p>You can disable Fiddler tracing on the device using the following request. Note that the device must be restarted before this takes effect.</p>    Method Request URI     DELETE /ext/fiddler    <p>URI parameters</p> <ul> <li>None</li> </ul> <p>Request headers</p> <ul> <li>None</li> </ul> <p>Request body </p> <ul> <li>None</li> </ul> <p>Response </p> <ul> <li>None </li> </ul> <p>Status code</p> <p>This API has the following expected status codes.</p>    HTTP status code Description     204 The request to disable Fiddler tracing was successful. Tracing will be disabled on the next reboot of the device.   4XX Error codes   5XX Error codes    <p>Available device families</p> <ul> <li>Windows Xbox</li> </ul> <p>Credits Microsoft</p>"},{"location":"dev-portal-api/ext/frontpanel/","title":"Remotely controls a front panel for an Xbox One X Devkit.","text":"<p>Request</p>    Method Request URI     WebSocket /ext/frontpanel        <p>Send messages</p> <p>Strings can be send indicating that front panel buttons should be pressed. The strings should be from the following set:</p> <p>Up, Down, Left, Right, or Select to control navigation One, Two, Three, Four, Five to press one of the five buttons Switch to simulate a long press of the Select button (toggling between Title and System mode).</p> <p>Recieve messages</p> <p>The websocket will return an image buffer which an be processed to show the contents of the front panel display. The buffer is send in 4bpp.</p> <p>Available device families</p> <ul> <li>Windows Xbox</li> </ul> <p>Credits Microsoft</p>"},{"location":"dev-portal-api/ext/httpMonitor-sessions/","title":"HTTP Monitor API reference","text":"<p>You can access real-time HTTP traffic for the focused app using this API if the HTTP monitor has been enabled on the Xbox console by checking the box in Dev Home.</p>"},{"location":"dev-portal-api/ext/httpMonitor-sessions/#get-if-the-http-monitor-is-enabled","title":"Get if the HTTP Monitor is enabled","text":"<p>Request</p> <p>You can get whether the HTTP monitor has been enabled in Dev Home.</p>    Method Request URI     GET /ext/httpmonitor/sessions    <p>URI parameters</p> <ul> <li>None</li> </ul> <p>Request headers</p> <ul> <li>None</li> </ul> <p>Request body</p> <ul> <li>None</li> </ul> <p>Response  A JSON object with the following fields:</p> <ul> <li>Enabled - (Bool) Whether the HTTP monitor has been enabled on the Xbox console by checking the box in Dev Home.</li> </ul> <p>Status code</p> <p>This API has the following expected status codes.</p>    HTTP status code Description     200 Request was successful   4XX Error codes   5XX Error codes"},{"location":"dev-portal-api/ext/httpMonitor-sessions/#get-http-traffic-from-the-focused-app","title":"Get HTTP traffic from the focused app","text":"<p>Request</p> <p>Get HTTP traffic from the focused app on the Xbox, as long as it is not a system app, in real-time, if the HTTP monitor has been enabled from Dev Home.</p>    Method Request URI     Websocket /ext/httpmonitor/sessions    <p>URI parameters</p> <ul> <li>None</li> </ul> <p>Request headers</p> <ul> <li>None</li> </ul> <p>Request body</p> <ul> <li>None</li> </ul> <p>Response  A JSON object with the following fields:</p> <ul> <li>Sessions<ul> <li>RequestHeaders - (JSON Object) The request headers from the HTTP Request.</li> <li>RequestContentHeaders - (JSON Object) The request content headers from the HTTP Request.</li> <li>RequestURL - (String) The request URL.</li> <li>RequestMethod - (String) The request method.</li> <li>RequestMessage - (String) The request message, currently only supporting JSON and text content.</li> <li>ResponseHeaders - (JSON Object) The response headers from the HTTP Response.</li> <li>ResponseContentHeaders - (JSON Object) The response content headers from the HTTP Response.</li> <li>StatusCode - (Number) The response status code.</li> <li>ReasponsePhrase - (String) The response reason phrase.</li> <li>ResponseMessage - (String) The response message, currently only supporting JSON and text content.</li> </ul> </li> </ul> <p>Status code</p> <p>This API has the following expected status codes.</p>    HTTP status code Description     200 Request was successful   4XX Error codes   403 HTTP Monitor disabled, must be enabled in Dev Home   5XX Error codes    <p>Available device families</p> <ul> <li>Windows Xbox</li> </ul> <p>Credits Microsoft</p>"},{"location":"dev-portal-api/ext/networkcredentials/","title":"Network Credentials API reference","text":"<p>You can add, remove, or update stored network credentials on your devkit using this REST API.</p>"},{"location":"dev-portal-api/ext/networkcredentials/#get-existing-credentials","title":"Get existing credentials","text":"<p>Request</p> <p>You can get a list of the stored shares along with the username of the user who has credentials for that network share.</p>    Method Request URI     GET /ext/networkcredential        <p>URI parameters</p> <ul> <li>None</li> </ul> <p>Request headers</p> <ul> <li>None</li> </ul> <p>Request body </p> <ul> <li>None</li> </ul> <p>Response </p> <ul> <li>JSON array in the following format:</li> <li>Credentials</li> <li>NetworkPath - The path to the network share.</li> <li>Username - The username which has stored credentials.</li> </ul> <p>Status code</p> <p>This API has the following expected status codes.</p>    HTTP status code Description     200 Success   4XX Error codes   5XX Error codes"},{"location":"dev-portal-api/ext/networkcredentials/#add-or-update-stored-credentials-for-a-user","title":"Add or update stored credentials for a user","text":"<p>Request</p>    Method Request URI     POST /ext/networkcredential       URI parameters     <p>You can specify the following additional parameters on the request URI:</p>    URI parameter Description     NetworkPath The network path to the share you are adding credentials to access.        <p>Request headers</p> <ul> <li>None</li> </ul> <p>Request body</p> <ul> <li>The following JSON elements:</li> <li>NetworkPath - The path to the network share.</li> <li>Username - The username to store the credentials under.</li> <li>Password - The new or updated password for this user.</li> </ul> <p>Response </p> <ul> <li>None  </li> </ul> <p>Status code</p> <p>This API has the following expected status codes.</p>    HTTP status code Description     204 Success   4XX Error codes   5XX Error codes"},{"location":"dev-portal-api/ext/networkcredentials/#remove-stored-credentials-for-a-share","title":"Remove stored credentials for a share.","text":"<p>Request</p>    Method Request URI     DELETE /ext/networkcredential        <p>URI parameters</p> <p>You can specify the following additional parameters on the request URI:</p>    URI parameter Description     NetworkPath The network path to the share from which you are removing stored credentials.        <p>Request headers</p> <ul> <li>None</li> </ul> <p>Request body </p> <ul> <li>None</li> </ul> <p>Response </p> <ul> <li>None </li> </ul> <p>Status code</p> <p>This API has the following expected status codes.</p>    HTTP status code Description     204 The request to the credentials was successful.   4XX Error codes   5XX Error codes    <p>Available device families</p> <ul> <li>Windows Xbox</li> </ul> <p>Credits Microsoft</p>"},{"location":"dev-portal-api/ext/remoteinput-controllers/","title":"Controller API reference","text":"<p>You can get the number of attached physical controllers and turn them off using this REST API.</p>"},{"location":"dev-portal-api/ext/remoteinput-controllers/#determine-the-number-of-attached-physical-controllers","title":"Determine the number of attached physical controllers","text":"<p>Request</p> <p>You can check the number of attached physical controllers on the device using the following request.</p>    Method Request URI     GET /ext/remoteinput/controllers        <p>URI parameters</p> <ul> <li>None</li> </ul> <p>Request headers</p> <ul> <li>None</li> </ul> <p>Request body </p> <ul> <li>None</li> </ul> <p>Response </p> <ul> <li>JSON number property ConnectedControllerCount which specifies the number of attached physical controllers.</li> </ul> <p>Status code</p> <p>This API has the following expected status codes.</p>    HTTP status code Description     200 Success   4XX Error codes   5XX Error codes"},{"location":"dev-portal-api/ext/remoteinput-controllers/#disconnect-all-physical-controllers-on-the-devkit","title":"Disconnect all physical controllers on the devkit","text":"<p>Request</p> <p>You can disconnect all physical controllers on the device using the following request.</p>    Method Request URI     DELETE /ext/remoteinput/controllers       URI parameters     <ul> <li>None</li> </ul> <p>Request headers</p> <ul> <li>None</li> </ul> <p>Request body </p> <ul> <li>None</li> </ul> <p>Response </p> <ul> <li>None </li> </ul> <p>Status code</p> <p>This API has the following expected status codes.</p>    HTTP status code Description     204 The request to disconnect controllers was successful.   4XX Error codes   5XX Error codes    <p>Available device families</p> <ul> <li>Windows Xbox</li> </ul> <p>Credits Microsoft</p>"},{"location":"dev-portal-api/ext/remoteinput/","title":"Remote Input API reference","text":"<p>You can send controller, keyboard, and mouse input in real time remotely via this API.</p> <p>Request</p>    Method Request URI     Websocket /ext/remoteinput        <p>URI parameters</p> <ul> <li>None</li> </ul> <p>Request headers</p> <ul> <li>None</li> </ul> <p>Request</p> <p>The websocket a series of byte array messages. For each message the format is as follows.</p> <p>The first byte indicates the input type. The following input types are supported:</p>    Input Type Byte Value     Keyboard KeyCodes 0x01   Keyboard ScanCodes 0x02   Mouse 0x03   Clear All 0x04    <p>For KeyboardKeyCodes and KeyboardScanCodes, the second byte is the value of the keycode or scancode and the third byte is 0x01 for a down press and 0x00 for a release.</p> <p>For a Mouse message, the next value is a UINT16 in network order (2 bytes) indicating the type of mouse event:</p>    Action Type UINT16 Value     Move 0x0001   LeftDown 0x0002   LeftUp 0x0004   RightDown 0x0008   RightUp 0x0010   MiddleDown 0x0020   MiddleUp 0x0040   X1Down 0x0080   X1Up 0x0100   X2Down 0x0200   X2Up 0x0400   VerticalWheelMoved 0x0800   HorizontalWheelMoved 0x1000    <p>This byte is followed by two UINT32 values in network order, and an optional third UINT32 for wheel actions. The first two values are the X and Y coordinate and the third is the wheel delta. The X and Y coordinates are expected to be a value between 0 and 65535 indicating the relative position of the mouse in the horizontal and vertical planes.</p> <p>ClearAll indicates any currently held down keys should be released. No other bytes are expected.</p> <p>For sending Gamepad input, the keycode values which represent Gamepad button presses can be used with KeyboardKeyCodes. Those values are as follows:</p>    Gamepad Type Byte Value     VK_GAMEPAD_A 0xC3   VK_GAMEPAD_B 0xC4   VK_GAMEPAD_X 0xC5   VK_GAMEPAD_Y 0xC6   VK_GAMEPAD_RIGHT_SHOULDER 0xC7   VK_GAMEPAD_LEFT_SHOULDER 0xC8   VK_GAMEPAD_LEFT_TRIGGER 0xC9   VK_GAMEPAD_RIGHT_TRIGGER 0xCA   VK_GAMEPAD_DPAD_UP 0xCB   VK_GAMEPAD_DPAD_DOWN 0xCC   VK_GAMEPAD_DPAD_LEFT 0xCD   VK_GAMEPAD_DPAD_RIGHT 0xCE   VK_GAMEPAD_MENU 0xCF   VK_GAMEPAD_VIEW 0xD0   VK_GAMEPAD_LEFT_THUMBSTICK_BUTTON 0xD1   VK_GAMEPAD_RIGHT_THUMBSTICK_BUTTON 0xD2   VK_GAMEPAD_LEFT_THUMBSTICK_UP 0xD3   VK_GAMEPAD_LEFT_THUMBSTICK_DOWN 0xD4   VK_GAMEPAD_LEFT_THUMBSTICK_RIGHT 0xD5   VK_GAMEPAD_LEFT_THUMBSTICK_LEFT 0xD6   VK_GAMEPAD_RIGHT_THUMBSTICK_UP 0xD7   VK_GAMEPAD_RIGHT_THUMBSTICK_DOWN 0xD8   VK_GAMEPAD_RIGHT_THUMBSTICK_RIGHT 0xD9   VK_GAMEPAD_RIGHT_THUMBSTICK_LEFT 0xDA    <p>Response </p> <ul> <li>None</li> </ul> <p>Status code</p> <p>This API has the following expected status codes.</p>    HTTP status code Description     200 Request was successful   4XX Error codes   5XX Error codes    <p>Available device families</p> <ul> <li>Windows Xbox</li> </ul> <p>Credits Microsoft</p>"},{"location":"dev-portal-api/ext/screenshot/","title":"Media Capture API reference","text":""},{"location":"dev-portal-api/ext/screenshot/#request","title":"Request","text":"<p>You can capture a PNG representation of the current screen by using the following request format.</p>    Method Request URI     GET /ext/screenshot    <p>URI parameters</p> <p>You can specify the following additional parameters on the request URI:</p>    URI parameter Description     download (optional) A boolean value indicating if HTTP response headers should be set indicating that the host browser should download the screenshot as an attachment rather than rendering it in the browser.    <p>Request headers</p> <ul> <li>None</li> </ul> <p>Request body</p> <ul> <li>None</li> </ul>"},{"location":"dev-portal-api/ext/screenshot/#response","title":"Response","text":"<p>Status code</p> <p>This API has the following expected status codes.</p>    HTTP status code Description     200 Screenshot request successful and capture returned   5XX Error codes for unexpected failures    <p>Available device families</p> <ul> <li>Windows Xbox</li> </ul> <p>Credits Microsoft</p>"},{"location":"dev-portal-api/ext/settings/","title":"Developer settings API reference","text":"<p>You can access Xbox One settings that are useful for development using this API.</p>"},{"location":"dev-portal-api/ext/settings/#get-all-developer-settings-at-once","title":"Get all developer settings at once","text":"<p>Request</p> <p>You can use the following request to get all developer settings in a single request.</p>    Method Request URI     GET /ext/settings    <p>URI parameters</p> <ul> <li>None</li> </ul> <p>Request headers</p> <ul> <li>None</li> </ul> <p>Request body</p> <ul> <li>None</li> </ul> <p>Response  The response is a Settings JSON array containing all the settings. Each settings object contains the following fields:</p> <ul> <li>Name - (String) The name of the setting.</li> <li>Value - (String) The value of the setting.</li> <li>RequiresReboot - (\"Yes\" | \"No\") This field indicates whether the setting requires a reboot to take effect.</li> <li>Disabled - (\"Yes\" | \"No\") This field indicates whether the setting is disabled and cannot be edited.</li> <li>Category - (String) The category of the setting.</li> <li>Type - (\"Text\" | \"Number\" | \"Bool\" | \"Select\") This field indicates what type a setting is: text input, a boolean value (\"true\" or \"false\"), a number with a min and max or select with a specific list of values.</li> </ul> <p>If the setting is a number:</p> <ul> <li>Min - (Number) This field indicates the minimal numerical value of the setting.</li> <li>Max - (Number) This field indicates the maximum numerical value of the setting.</li> </ul> <p>If the setting is select:</p> <ul> <li>OptionsVariable - (\"Yes\" | \"No\") This field indicates whether the setting options are variable, if the valid options can change without a reboot.</li> <li>Options - JSON array containing the valid select options as strings.</li> </ul> <p>Status code</p> <p>This API has the following expected status codes.</p>    HTTP status code Description     200 Request was successful   4XX Error codes   5XX Error codes"},{"location":"dev-portal-api/ext/settings/#get-settings-one-at-a-time","title":"Get settings one at a time","text":"<p>Settings can also be retrieved individually.</p> <p>Request</p> <p>You can use the following request to get information about an individual setting.</p>    Method Request URI     GET /ext/settings/\\&lt;setting name&gt;    <p>URI parameters</p> <ul> <li>None</li> </ul> <p>Request headers</p> <ul> <li>None</li> </ul> <p>Request body</p> <ul> <li>None</li> </ul> <p>Response  The response is a JSON object with following fields:</p> <ul> <li>Name - (String) The name of the setting.</li> <li>Value - (String) The value of the setting.</li> <li>RequiresReboot - (\"Yes\" | \"No\") This field indicates whether the setting requires a reboot to take effect.</li> <li>Disabled - (\"Yes\" | \"No\") This field indicates whether the setting is disabled and cannot be edited.</li> <li>Category - (String) The category of the setting.</li> <li>Type - (\"Text\" | \"Number\" | \"Bool\" | \"Select\") This field indicates what type a setting is: text input, a boolean value (\"true\" or \"false\"), a number with a min and max or select with a specific list of values.</li> </ul> <p>If the setting is a number:</p> <ul> <li>Min - (Number) This field indicates the minimal numerical value of the setting.</li> <li>Max - (Number) This field indicates the maximum numerical value of the setting.</li> </ul> <p>If the setting is select:</p> <ul> <li>OptionsVariable - (\"Yes\" | \"No\") This field indicates whether the setting options are variable, if the valid options can change without a reboot.</li> <li>Options - JSON array containing the valid select options as strings.</li> </ul> <p>Status code</p> <p>This API has the following expected status codes.</p>    HTTP status code Description     200 Request was successful   4XX Error codes   5XX Error codes"},{"location":"dev-portal-api/ext/settings/#set-the-value-of-a-setting","title":"Set the value of a setting","text":"<p>You can set the value of a setting.</p> <p>Request</p> <p>You can use the following request to set the value for a setting.</p>    Method Request URI     PUT /ext/settings/\\&lt;setting name&gt;    <p>URI parameters</p> <ul> <li>None</li> </ul> <p>Request headers</p> <ul> <li>None</li> </ul> <p>Request body  The request body is JSON object containing the following field:  Value - (String) The new value for the setting.</p> <p>Response </p> <ul> <li>None</li> </ul> <p>Status code</p> <p>This API has the following expected status codes.</p>    HTTP status code Description     200 Request was successful   4XX Error codes   5XX Error codes    <p>Available device families</p> <ul> <li>Windows Xbox</li> </ul> <p>Credits Microsoft</p>"},{"location":"dev-portal-api/ext/smb-developerfolder/","title":"Developer folder API reference","text":"<p>You can access development-related files on your Xbox One using a standard file explorer. This allows you to easily view and replace files from your PC to the console.</p> <p>Request</p> <p>You can access the developer folder using the following request. The request will return:</p> <ul> <li>The location of the file share. This location can be entered into the address bar in a file explorer.</li> <li>The username to access the file share.</li> <li>The password to access the file share.</li> </ul>    Method Request URI     GET /ext/smb/developerfolder    <p>URI parameters</p> <ul> <li>None</li> </ul> <p>Request headers</p> <ul> <li>None</li> </ul> <p>Request body</p> <ul> <li>None</li> </ul> <p>Response  Path - the path to the file developer files share.  Username - the username needed to access the developer files share.  Password - the password needed to access the developer files share.   </p> <p>Status code</p> <p>This API has the following expected status codes.</p>    HTTP status code Description     200 The request to access the credentials for the file share was granted.   4XX Error codes   5XX Error codes    <p>Notes</p> <p>The returned credentials also provide access to the DevToolsUser account over ssh.</p> <p>Available device families</p> <ul> <li>Windows Xbox</li> </ul> <p>Credits Microsoft</p>"},{"location":"dev-portal-api/ext/unattendedsetup-apply/","title":"Sets a script to the boot script for the target Xbox One development console.","text":"<p>Request</p>    Method Request URI     POST /ext/unattendedsetup/apply        <p>URI parameters</p> <ul> <li>None</li> </ul> <p>Request headers</p> <ul> <li>None</li> </ul> <p>Request body</p> <p>Multi-part conforming HTTP body that contains the script file to apply.</p>"},{"location":"dev-portal-api/ext/unattendedsetup-apply/#response","title":"Response","text":"<p>Response body</p> <ul> <li>Unknown</li> </ul> <p>Status code</p> <p>This API has the following expected status codes.</p>    HTTP status code Description     200 Success   4XX Error codes   5XX Error codes    <p>Available device families</p> <ul> <li>Windows Xbox</li> </ul> <p>Credits Microsoft</p>"},{"location":"dev-portal-api/ext/unattendedsetup-configure/","title":"Provides access to configuration data for how scripts are run.","text":""},{"location":"dev-portal-api/ext/unattendedsetup-configure/#retrieves-configuration-data-for-how-scripts-are-run","title":"Retrieves configuration data for how scripts are run.","text":"<p>Request</p>    Method Request URI     Get /ext/unattendedsetup/configure    <p>URI parameters</p> <ul> <li>None</li> </ul> <p>Request headers</p> <ul> <li>None</li> </ul> <p>Request body</p> <ul> <li>None</li> </ul> <p>Response </p> <p>If the call is successful, the service will return a JSON object with the following members.</p>    Member Description     RunOobeScript Boolean value that indicates whether we should run any one-time script on the next boot (expected script name is oobe.cmd).   BlockUsbScript Boolean value that indicates whether we should block unattended scripts from running when on a USB device.   SkipAbortToast Boolean value that indicates whether we should run scripts immediately on boot instead of waiting for an abort window.   BlockAllScripts Boolean value that indicates whether we should block unattended scripts from running.   HasScript Boolean value that indicates whether the target console currently has a boot script.    <p>Status code</p> <p>This API has the following expected status codes.</p>    HTTP status code Description     204 The request to enable Fiddler was accepted. Fiddler will be enabled the next time the device reboots.   4XX Error codes   5XX Error codes"},{"location":"dev-portal-api/ext/unattendedsetup-configure/#sets-configuration-data-for-how-scripts-are-run","title":"Sets configuration data for how scripts are run.","text":"<p>Request</p>    Method Request URI     Post /ext/unattendedsetup/configure    <p>URI parameters</p> <ul> <li>None</li> </ul> <p>Request headers</p> <ul> <li>None</li> </ul> <p>Request body </p> <p>The request must contain a JSON body that has the following members.</p> <p>RunOobeScript | Boolean value that indicates whether we should run any one-time script on the next boot (expected script name is oobe.cmd). BlockUsbScript | Boolean value that indicates whether we should block unattended scripts from running when on a USB device. SkipAbortToast | Boolean value that indicates whether we should run scripts immediately on boot instead of waiting for an abort window. BlockAllScripts | Boolean value that indicates whether we should block unattended scripts from running.</p> <p>Response </p> <ul> <li>None</li> </ul> <p>Status code</p> <p>This API has the following expected status codes.</p>    HTTP status code Description     204 The request to disable Fiddler tracing was successful. Tracing will be disabled on the next reboot of the device.   4XX Error codes   5XX Error codes    <p>Available device families</p> <ul> <li>Windows Xbox</li> </ul> <p>Credits Microsoft</p>"},{"location":"dev-portal-api/ext/unattendedsetup-default/","title":"Provides access to the boot script on the target Xbox One development console.","text":""},{"location":"dev-portal-api/ext/unattendedsetup-default/#deletes-the-boot-script-on-the-target-xbox-one-development-console","title":"Deletes the boot script on the target Xbox One development console.","text":"<p>Request</p>    Method Request URI     Delete /ext/unattendedsetup/default    <p>URI parameters</p> <ul> <li>None</li> </ul> <p>Request headers</p> <ul> <li>None</li> </ul> <p>Request body </p> <ul> <li>None</li> </ul> <p>Response </p> <ul> <li>None</li> </ul> <p>Status code</p> <p>This API has the following expected status codes.</p>    HTTP status code Description     200 Success   4XX Error codes   5XX Error codes"},{"location":"dev-portal-api/ext/unattendedsetup-default/#retrieves-the-boot-script-on-the-target-xbox-one-development-console","title":"Retrieves the boot script on the target Xbox One development console","text":"<p>Request</p>    Method Request URI     Get /ext/unattendedsetup/default    <p>URI parameters</p> <ul> <li>None</li> </ul> <p>Request headers</p> <ul> <li>None</li> </ul> <p>Request body</p> <ul> <li>None</li> </ul> <p>Response </p> <p>If the call is successful, the service will return the script file as a multi-part conforming HTTP body.</p> <p>Status code</p> <p>This API has the following expected status codes.</p>    HTTP status code Description     204 The request to enable Fiddler was accepted. Fiddler will be enabled the next time the device reboots.   4XX Error codes   5XX Error codes"},{"location":"dev-portal-api/ext/unattendedsetup-default/#runs-the-boot-script-on-the-target-xbox-one-development-console","title":"Runs the boot script on the target Xbox One development console.","text":"<p>Request</p>    Method Request URI     Post /ext/unattendedsetup/default    <p>URI parameters</p> <ul> <li>None</li> </ul> <p>Request headers</p> <ul> <li>None</li> </ul> <p>Request body </p> <ul> <li>None</li> </ul> <p>Response </p> <ul> <li>None</li> </ul> <p>Status code</p> <p>This API has the following expected status codes.</p>    HTTP status code Description     204 The request to disable Fiddler tracing was successful. Tracing will be disabled on the next reboot of the device.   4XX Error codes   5XX Error codes    <p>Available device families</p> <ul> <li>Windows Xbox</li> </ul> <p>Credits Microsoft</p>"},{"location":"dev-portal-api/ext/unattendedsetup-quickaction/","title":"Manages the scripts configured for the front panel display buttons on an Xbox One X Devkit.","text":""},{"location":"dev-portal-api/ext/unattendedsetup-quickaction/#changes-the-script-assigned-to-one-of-the-front-panel-buttons-or-runs-one-of-the-front-panel-scripts-on-the-target-xbox-one-development-console","title":"Changes the script assigned to one of the front panel buttons or runs one of the front panel scripts on the target Xbox One development console.","text":"<p>Request</p>    Method Request URI     Post /ext/unattendedsetup/quickaction    <p>URI parameters</p>    Method Format Description     ButtonNumber number Optional number of the front panel button we are dealing with. If this is not provided, this is a request to add a new custom script to the console   Name base64-encoded string Optional string indicating the name of the script we are applying to a button. If this is not provided then the current script associated with ButtonNumber is run instead.   IsBuiltIn boolean Optional bool indicating whether or not the script we are applying is a built in script provided with the system or a custom script previously added to the console by the user.    <p>Request headers</p> <ul> <li>None</li> </ul> <p>Request body</p> <ul> <li>None</li> </ul> <p>Response </p> <p>If the call is successful and the request was to run the action associated with a button, the service will return a JSON object with the following members:</p>    Method Format Description     Output string The output from running    <p>If the call was to apply a script to a button or add a new custom script, there is no response body.</p> <p>Status code</p> <p>This API has the following expected status codes.</p>    HTTP status code Description     204 The request to enable Fiddler was accepted. Fiddler will be enabled the next time the device reboots.   4XX Error codes   5XX Error codes"},{"location":"dev-portal-api/ext/unattendedsetup-quickaction/#retrieves-the-information-about-the-scripts-applied-to-and-available-to-the-front-panel-buttons-on-the-target-xbox-one-development-console","title":"Retrieves the information about the scripts applied to and available to the front panel buttons on the target Xbox One development console.","text":"<p>Request</p>    Method Request URI     Get /ext/app/quickaction    <p>URI parameters</p>    Method Format Description     Name base64-encoded string Optional string indicating we want the contents of a script.   IsBuiltIn boolean Optional bool indicating if this is a built in script provided with the system or a custom script added to the console by the user.    <p>Request headers</p> <ul> <li>None</li> </ul> <p>Request body </p> <ul> <li>None</li> </ul> <p>Response </p> <p>If the call is successful and a script was requested by name, the service will return the script file as a multi-part conforming HTTP body.</p> <p>If a script was not requested, the service will return a JSON object with the following members:</p>    Method Format Description     IsAvailable boolean Whether or not front panel scripts are available on this console. This will be true for the Xbox One X Devkit and false for other devkit types. If this is false, no other members will be returned.   QuickActions Array of JSON objects An array containing all the available quick actions on this console.   QuickActions Array of JSON objects An array containing all the available quick actions on this console.    <p>Quick actions JSON objects have the following members:</p>    Method Format Description     Name base64-encoded string The name of the script on the console.   IsBuiltIn boolean Whether or not this is a built in script provided with the system or a custom script added to the console by the user.    <p>Status code</p> <p>This API has the following expected status codes.</p>    HTTP status code Description     204 The request to disable Fiddler tracing was successful. Tracing will be disabled on the next reboot of the device.   4XX Error codes   5XX Error codes    <p>Available device families</p> <ul> <li>Windows Xbox</li> </ul> <p>Credits Microsoft</p>"},{"location":"dev-portal-api/ext/unattendedsetup-test/","title":"Tests a script by running it on the target Xbox One development console.","text":"<p>Request</p>    Method Request URI     POST /ext/unattendedsetup/test        <p>URI parameters</p> <ul> <li>None</li> </ul> <p>Request headers</p> <ul> <li>None</li> </ul> <p>Request body</p> <p>Multi-part conforming HTTP body that contains the script file to run. </p>"},{"location":"dev-portal-api/ext/unattendedsetup-test/#response","title":"Response","text":"<p>Response body</p> <p>If the call is successful, the service will return a JSON object with the script output and status code.</p> <p>Status code</p> <p>This API has the following expected status codes.</p>    HTTP status code Description     200 Success   4XX Error codes   5XX Error codes    <p>Available device families</p> <ul> <li>Windows Xbox</li> </ul> <p>Credits Microsoft</p>"},{"location":"dev-portal-api/ext/update-remote/","title":"Gets a Boolean value that indicates whether the specified AppXManifest is for an ERA title.","text":"<p>Request</p>    Method Request URI     POST /ext/update/remote        <p>URI parameters</p>    Parameter Format Description     networkshare base64-encoded string The network share location of the system update packages. This network share should be base64-encoded.    <p>Request headers</p> <ul> <li>None</li> </ul> <p>Request body</p> <p>if credentials are required to access the network share, the request must contain a JSON body that contains optional username and password parameters and a Boolean parameter AllowSameBuild that indicates whether the recovery should be allowed to proceed even if the console is already on this build. The JSON should also contain an array named RecoverOptions which contains ParamName to ParamValue key-value pairs specifying the following update options:</p> <ul> <li> <p>X-UpdateDownloadPolicy : 1 or 0, where 0 means the console will show an update prompt and 1 supresses that prompt. </p> </li> <li> <p>X-ForceFactoryReset : bool indicating if a factory reset should be performed.</p> </li> <li> <p>X-FactoryResetOptions : 0xdededede if performing a factory reset, 0 otherwise. </p> </li> <li> <p>X-HostName : should be set to <code>\u201c&lt;save&gt;\u201d</code> to preserve the hostname, even in factory reset scenarios. </p> </li> <li> <p>X-InhibitIdleTimeout : bool indicating if the screen dim settings should be respected while updating. </p> </li> <li> <p>X-SandboxId : the sandbox id to set as part of the recovery. </p> </li> </ul>"},{"location":"dev-portal-api/ext/update-remote/#response","title":"Response","text":"<p>Response body</p> <ul> <li>Unknown</li> </ul> <p>Status code</p> <p>This API has the following expected status codes.</p>    HTTP status code Description     200 Success   4XX Error codes   5XX Error codes    <p>Available device families</p> <ul> <li>Windows Xbox</li> </ul> <p>Credits Microsoft</p>"},{"location":"dev-portal-api/ext/user/","title":"Xbox Live User Management","text":""},{"location":"dev-portal-api/ext/user/#request","title":"Request","text":"<p>You can get the list of users on the console, or update the list--adding, removing, signing in, signing out, or modifying existing users.</p>    Method Request URI     GET /ext/user   PUT /ext/user    <p>URI parameters</p> <ul> <li>None</li> </ul> <p>Request headers</p> <ul> <li>None</li> </ul> <p>Request body</p> <p>Calls to PUT should include a JSON array with the following structure:</p> <ul> <li>Users</li> <li>AutoSignIn (optional) : bool disabling or enabling automatic signin for the account specified by EmailAddress or UserId.</li> <li>EmailAddress (optional - must be provided if UserId is not provided unless signing in a sponsored user) : Email address specifying the user to modify/add/delete.</li> <li>Password (optional - must be provided if the user isn't currently on the console) : Password used for adding a new user to the console.</li> <li>SignedIn (optional) : bool specifying whether the provided account should be signed in or out.</li> <li>UserId (optional - must be provided if EmailAddress is not provided unless signing in a sponsored user) : UserId specifying the user to modify/add/delete.</li> <li>SponsoredUser (optional) : bool specifying whether to add a sponsored user.</li> <li>Delete (optional) : bool specifying to delete this user from the console</li> </ul>"},{"location":"dev-portal-api/ext/user/#response","title":"Response","text":"<p>Response body</p> <p>Calls to GET will return a JSON array with the following properties:</p> <ul> <li>Users</li> <li>AutoSignIn (optional)</li> <li>EmailAddress (optional)</li> <li>Gamertag</li> <li>SignedIn</li> <li>UserId</li> <li>XboxUserId</li> <li>SponsoredUser (optional)</li> </ul> <p>Status code</p> <p>This API has the following expected status codes.</p>    HTTP status code Description     200 Call to GET was successful and JSON array of users returned in the response body   204 Call to PUT was successful and the users on the console have been updated   4XX Various errors for invalid request data or format   5XX Error codes for unexpected failures    <p>Credits Microsoft</p>"},{"location":"dev-portal-api/ext/xbox-info/","title":"Xbox Info API reference","text":"<p>You can access Xbox One device information using this API.</p>"},{"location":"dev-portal-api/ext/xbox-info/#get-xbox-one-device-information","title":"Get Xbox One device information","text":""},{"location":"dev-portal-api/ext/xbox-info/#request","title":"Request","text":"<p>You can get device information about your Xbox One.</p>    Method Request URI     GET /ext/xbox/info    <p>URI parameters</p> <ul> <li>None</li> </ul> <p>Request headers</p> <ul> <li>None</li> </ul> <p>Request body</p> <ul> <li>None</li> </ul>"},{"location":"dev-portal-api/ext/xbox-info/#response","title":"Response","text":"<p>A JSON object with the following fields:</p> <ul> <li>OsVersion - (String) The version of the OS.</li> <li>OsEdition - (String) The edition of the OS, such as \"March 2017\" or \"March 2017 QFE 1\".</li> <li>ConsoleId - (String) The console's ID.</li> <li>DeviceId - (String) The console's Xbox Live Device Id.</li> <li>SerialNumber - (String) The console's serial number.</li> <li>DevMode - (String) The console's current developer mode, such as \"None\" or \"Retail\".</li> <li>ConsoleType - (String) The console's type, such as \"Xbox One\" or \"Xbox One S\".</li> <li>DevkitCertificateExpirationTime - (Number) The UTC Time in seconds when the console's developer kit certificate will expire.</li> </ul> <p>Status code</p> <p>This API has the following expected status codes.</p>    HTTP status code Description     200 Request was successful   4XX Error codes   5XX Error codes    <p>Available device families</p> <ul> <li>Windows Xbox</li> </ul> <p>Credits Microsoft</p>"},{"location":"dev-portal-api/ext/xboxlive-sandbox/","title":"Xbox Live Sandbox API reference","text":"<p>You can get and set your Xbox Live sandbox using this REST API.</p>"},{"location":"dev-portal-api/ext/xboxlive-sandbox/#get-the-xbox-live-sandbox","title":"Get the Xbox Live sandbox","text":"<p>Request</p> <p>You can read the current value for the device's Xbox Live sandbox using the following request:</p>    Method Request URI     GET /ext/xboxlive/sandbox    <p>URI parameters</p> <ul> <li>None</li> </ul> <p>Request headers</p> <ul> <li>None</li> </ul> <p>Request body</p> <ul> <li>None</li> </ul> <p>Response  Sandbox - (String) The current Sandbox the device is in.   </p> <p>Status code</p> <p>This API has the following expected status codes.</p>    HTTP status code Description     200 The request to access the credentials for the file share was granted.   4XX Error codes   5XX Error codes"},{"location":"dev-portal-api/ext/xboxlive-sandbox/#set-the-xbox-live-sandbox","title":"Set the Xbox Live sandbox","text":"<p>You can change the Xbox Live sandbox for the device using the following request. Note that on Xbox One, the device needs to be restarted before the setting takes effect.</p> <p>Request</p> <p>You can set the current value for the device's Xbox Live sandbox using the following request:</p>    Method Request URI     PUT /ext/xboxlive/sandbox    <p>URI parameters</p> <ul> <li>None</li> </ul> <p>Request headers</p> <ul> <li>None</li> </ul> <p>Request body  The request body is a JSON object containing the following field:  Sandbox - (String) The new value to set the device's sandbox to.</p> <p>Response  Sandbox - (String) The current Sandbox the device is in.   </p> <p>Status code</p> <p>This API has the following expected status codes.</p>    HTTP status code Description     200 The request to access the credentials for the file share was granted.   4XX Error codes   5XX Error codes    <p>Available device families</p> <ul> <li>Windows Xbox</li> </ul> <p>Credits Microsoft</p>"},{"location":"xbox-live/hresult-error-codes/","title":"Hresult error codes","text":""},{"location":"xbox-live/hresult-error-codes/#global","title":"Global","text":"Name Hex Decimal     S_OK 0x00000000 0   E_NOTIMPL 0x80004001 -2147467263   E_OUTOFMEMORY 0x8007000E -2147024882   E_INVALIDARG 0x80070057 -2147024809   E_ABORT 0x80004004 -2147467260   E_FAIL 0x80004005 -2147467259   E_ACCESSDENIED 0x80070005 -2147024891   E_PENDING 0x8000000A -2147483638   E_UNEXPECTED 0x8000FFFF -2147418113   E_POINTER 0x80004003 -2147467261   E_TIME_CRITICAL_THREAD 0x800701A0 -2147024480   E_NO_TASK_QUEUE 0x800701AB -2147024469   E_NOT_SUPPORTED 0x80070032 -2147024846   E_NOT_SUFFICIENT_BUFFER 0x8007007A -2147024774   E_NOINTERFACE 0x80004002 -2147467262   E_BOUNDS 0x8000000B -2147483637"},{"location":"xbox-live/hresult-error-codes/#http-client","title":"HTTP Client","text":"Name Hex Decimal     HTTP_E_STATUS_AMBIGUOUS 0x8019012C -2145844948   HTTP_E_STATUS_BAD_GATEWAY 0x801901F6 -2145844746   HTTP_E_STATUS_BAD_METHOD 0x80190195 -2145844843   HTTP_E_STATUS_BAD_REQUEST 0x80190190 -2145844848   HTTP_E_STATUS_CONFLICT 0x80190199 -2145844839   HTTP_E_STATUS_DENIED 0x80190191 -2145844847   HTTP_E_STATUS_EXPECTATION_FAILED 0x801901A1 -2145844831   HTTP_E_STATUS_FORBIDDEN 0x80190193 -2145844845   HTTP_E_STATUS_GATEWAY_TIMEOUT 0x801901F8 -2145844744   HTTP_E_STATUS_GONE 0x8019019A -2145844838   HTTP_E_STATUS_LENGTH_REQUIRED 0x8019019B -2145844837   HTTP_E_STATUS_MOVED 0x8019012D -2145844947   HTTP_E_STATUS_NONE_ACCEPTABLE 0x80190196 -2145844842   HTTP_E_STATUS_NOT_FOUND 0x80190194 -2145844844   HTTP_E_STATUS_NOT_MODIFIED 0x80190130 -2145844944   HTTP_E_STATUS_NOT_SUPPORTED 0x801901F5 -2145844747   HTTP_E_STATUS_PAYMENT_REQ 0x80190192 -2145844846   HTTP_E_STATUS_PRECOND_FAILED 0x8019019C -2145844836   HTTP_E_STATUS_PROXY_AUTH_REQ 0x80190197 -2145844841   HTTP_E_STATUS_RANGE_NOT_SATISFIABLE 0x801901A0 -2145844832   HTTP_E_STATUS_REDIRECT 0x8019012E -2145844946   HTTP_E_STATUS_REDIRECT_KEEP_VERB 0x80190133 -2145844941   HTTP_E_STATUS_REDIRECT_METHOD 0x8019012F -2145844945   HTTP_E_STATUS_REQUEST_TIMEOUT 0x80190198 -2145844840   HTTP_E_STATUS_REQUEST_TOO_LARGE 0x8019019D -2145844835   HTTP_E_STATUS_SERVER_ERROR 0x801901F4 -2145844748   HTTP_E_STATUS_SERVICE_UNAVAIL 0x801901F7 -2145844745   HTTP_E_STATUS_UNEXPECTED 0x80190001 -2145845247   HTTP_E_STATUS_UNEXPECTED_SERVER_ERROR 0x80190005 -2145845243   HTTP_E_STATUS_UNSUPPORTED_MEDIA 0x8019019F -2145844833   HTTP_E_STATUS_URI_TOO_LONG 0x8019019E -2145844834   HTTP_E_STATUS_USE_PROXY 0x80190131 -2145844943   HTTP_E_STATUS_VERSION_NOT_SUP 0x801901F9 -2145844743   ONL_E_ACTION_REQUIRED 0x8086000C -2138701812   WEB_E_INVALID_JSON_STRING 0x83750007 -2089484281   WEB_E_UNEXPECTED_CONTENT 0x83750005 -2089484283   E_HC_NOT_INITIALISED 0x89235001 -1994174463   E_HC_PERFORM_ALREADY_CALLED 0x89235003 -1994174461   E_HC_ALREADY_INITIALISED 0x89235004 -1994174460   E_HC_CONNECT_ALREADY_CALLED 0x89235005 -1994174459   E_HC_NO_NETWORK 0x89235006 -1994174458"},{"location":"xbox-live/hresult-error-codes/#xal","title":"XAL","text":"Name Hex Decimal     E_XAL_NOTINITIALIZED 0x89235001 -1994174463   E_XAL_ALREADYINITIALIZED 0x89235101 -1994174207   E_XAL_USERSETNOTEMPTY 0x89235102 -1994174206   E_XAL_USERSETFULL 0x89235103 -1994174205   E_XAL_USERSIGNEDOUT 0x89235104 -1994174204   E_XAL_DUPLICATEDUSER 0x89235105 -1994174203   E_XAL_NETWORK 0x89235106 -1994174202   E_XAL_CLIENTERROR 0x89235107 -1994174201   E_XAL_UIREQUIRED 0x89235108 -1994174200   E_XAL_HANDLERALREADYREGISTERED 0x89235109 -1994174199   E_XAL_UNEXPECTEDUSERSIGNEDIN 0x8923510A -1994174198   E_XAL_NOTATTACHEDTOJVM 0x8923510B -1994174197   E_XAL_DEVICEUSER 0x8923510C -1994174196   E_XAL_DEFERRALNOTAVAILABLE 0x8923510D -1994174195   E_XAL_MISSINGPLATFORMEVENTHANDLER 0x8923510E -1994174194   E_XAL_USERNOTFOUND 0x8923510F -1994174193   E_XAL_NOTOKENREQUIRED 0x89235110 -1994174192   E_XAL_NODEFAULTUSER 0x89235111 -1994174191   E_XAL_FAILEDTORESOLVE 0x89235112 -1994174190"},{"location":"xbox-live/hresult-error-codes/#xal-gsdk","title":"XAL GSDK","text":"Name Hex Decimal     E_XAL_USERSETFULL 0x89245100 -1994108672   E_XAL_USERSIGNEDOUT 0x89245101 -1994108671   E_XAL_UIREQUIRED 0x89245102 -1994108670   E_XAL_DEFERRALNOTAVAILABLE 0x89245103 -1994108669   E_XAL_USERNOTFOUND 0x89245104 -1994108668   E_XAL_NOTOKENREQUIRED 0x89245105 -1994108667   E_XAL_NODEFAULTUSER 0x89245106 -1994108666   E_XAL_FAILEDTORESOLVE 0x89245107 -1994108665"},{"location":"xbox-live/hresult-error-codes/#xsapi","title":"XSAPI","text":"Name Hex Decimal     E_XBL_RUNTIME_ERROR 0x89235200 -1994173952   E_XBL_RTA_GENERIC_ERROR 0x89235201 -1994173951   E_XBL_RTA_SUBSCRIPTION_LIMIT_REACHED 0x89235202 -1994173950   E_XBL_RTA_ACCESS_DENIED 0x89235203 -1994173949   E_XBL_AUTH_UNKNOWN_ERROR 0x89235204 -1994173948   E_XBL_AUTH_RUNTIME_ERROR 0x89235205 -1994173947   E_XBL_AUTH_NO_TOKEN 0x89235206 -1994173946   E_XBL_ALREADY_INITIALIZED 0x89235207 -1994173945   E_XBL_NOT_INITIALIZED 0x89235208 -1994173944"},{"location":"xbox-live/xsts-token/","title":"Xsts token","text":""},{"location":"xbox-live/xsts-token/#xbox-live-security-tokens-xsts-tokens","title":"Xbox Live security tokens (XSTS tokens)","text":"<p>Xbox Live uses security tokens are created by the Xbox Secure Token Service (XSTS) for authentication of users and devices. XSTS tokens are also available for title use. Title XSTS tokens can be configured by developers and have varying contents depending on their intended audience.</p> <p>The token used for Xbox Live is a JSON Web Token (JWT) that uses two JWE encryption types:</p> <ul> <li> <p>Asymmetric public / private key pair (RFC 7519)  The token is encrypted using a certificate\u2019s public key and is then decrypted on your service with the private key. The token is also digitally signed by Xbox Live to validate its origin. This is the recommended token type, as it is more secure.</p> </li> <li> <p>Asymmetric public / private key pair (legacy)  This token configuration does not adhere to RFC 7519. This option is only for titles migrated from the Xbox Developer Portal (XDP) and that require this format for compatibility purposes. This JWT format should not be used for new token configurations.</p> </li> </ul> <p>Partner Center Xbox Live configuration previously also included a Symmetric shared key option that used a shared key between Xbox Live and your service for encryption. This option was deprecated due to security concerns and is not available for new token configurations.</p> <p>Tokens are meant for a specific relying party, which represents a set of service endpoints that share the same token configuration, encryption certificate, and signature policy. These are described in more detail below:</p> <ul> <li>Token configuration: the claims that are in the token; token lifetime. </li> <li>Encryption certificate: the key used to encrypt the token. </li> <li>Signature policy: specifies which parts of the request (headers and body data) must be  signed for integrity validation.</li> </ul> <p>Xbox Live services use the same pre-configured relying party that is opaque to a title. Publishers that have their own services their titles call must configure a relying party via the Partner Center Xbox Live configuration.</p>"},{"location":"xbox-live/xsts-token/#token-structure","title":"Token structure","text":"<p>The token is broken into sections including a Header and the Payload. There are other sections in the token depending on the encryption method for your token. Each part of the token is separated by a \u2018.\u2019 in the encoded token string.</p>  <p><code>Note: For Symmetric X-tokens, the format is similar but there is no Content Encryption Key or XBL Signature. The Payload is encrypted and decrypted directly with the symmetric shared secret key.</code></p>"},{"location":"xbox-live/xsts-token/#header","title":"Header","text":"<p>The header has two sections:</p> <p>Details about how the JWT is encrypted and includes the encryption, algorithm, and content type.  The thumbprint of the x509 certificate used for encryption.  The thumbprint should match the certificate provided by you during configuration of your relying party and the private key must be installed on the server to enable the token to be decrypted.</p> <p>For deprecated symmetric X-tokens, the header only has the first section and the encryption algorithm is specified as \u201calg\u201d: \u201cdir\u201d.</p>"},{"location":"xbox-live/xsts-token/#content-encryption-key","title":"Content Encryption Key","text":"<p>With Asymmetric encryption the private key decrypts this content which then provides you the decryption key needed for the payload.</p> <p>Not present with deprecated symmetric encryption.</p>"},{"location":"xbox-live/xsts-token/#initialization-vector","title":"Initialization Vector","text":"<p>Used with the AES decryptor for the payload.</p> <p>Not present with deprecated symmetric encryption.</p>"},{"location":"xbox-live/xsts-token/#payload","title":"Payload","text":"<p>The payload is the encrypted JSON Web Token that contains the claims and information your server needs for authentication of the user.</p>"},{"location":"xbox-live/xsts-token/#authentication-tag","title":"Authentication Tag","text":"<p>Integrity value for the token.</p>"},{"location":"xbox-live/xsts-token/#inner-json-web-token","title":"Inner JSON Web Token","text":"<p>Once the Payload is decrypted you will have a UTF8 array that represents the RFC7516 JSON Web Token. This inner token also has a header that includes information related to generating and validating the signature on the token.</p> <p>The token will be signed with the private key of the Xbox Live signing certificate to validate that the token is from Xbox Live. The header of the inner token contains the thumbprint and a URL to download the public key of the cert so that your service can do a validation of the signature. This means that your server should keep a cache of this public cert that it downloaded at runtime to re-use.</p> <p>Since the Xbox Live signing cert can expire and needs to be renewed every 18 months, we recommend that your server not hard code the cert nor install it on your servers. You should always check your local cache, if you do not have the cert, download it (validating it is coming from https://xsts.xboxlive.com), and then cache it. If the cert is updated, the tokens will have a new thumbprint and URL in their headers to reflect that. If you follow the logic outlined in the Game Service sample, available for download on XGD Fast Downloads, the signature cert management your service will never have to be updated to handle a new Xbox Live signing cert.</p> <p>The payload of this token contains the claims that were specified during the token configuration for the relying party. Claims that are not configured are not included in the token payload. Claim values can be traditional types (string, integer, GUID, and so on.). They can also be a JSON object representing a more complex structure.</p> <p>Note: Claim values with no data can be represented through null values or can be missing from the token entirely. Title services should consider this when parsing claim values.</p>"},{"location":"xbox-live/xsts-token/#identities","title":"Identities","text":"<p>A set of related claims that describe aspects of a principal are known as an identity. From a structural perspective, they are claims where the value is a JSON object. That object will either be a set of claims or an array of sets of claims.</p> <p>The identities that can be contained in Xbox One tokens are listed and described below (with their specific short names shown in parenthesis):</p>"},{"location":"xbox-live/xsts-token/#device-identity-xdi","title":"Device identity (xdi)","text":"<p>The claims in the device identity provide details about the device that requested the token. There can be only one device identity in the token. This means that the device identity will be a simple list of claims and values.</p>"},{"location":"xbox-live/xsts-token/#title-identity-xti","title":"Title identity (xti)","text":"<p>The claims in the title identity provide details about the title running on Xbox One that requested the token. The token can contain only one title identity. If present in the token, the title identity will be a simple list of claims and values.</p>"},{"location":"xbox-live/xsts-token/#service-identity-xsi","title":"Service identity (xsi)","text":"<p>The claims in the service identity provide details about a service if the request came from that service instead of from Xbox One. There can be only one service identity in the token. If present, the service identity will be a simple list of claims and values.</p>"},{"location":"xbox-live/xsts-token/#user-identityidentities-xui","title":"User identity/identities (xui)","text":"<p>The claims in the user identity provide details about a user. If more than one user is logged in to the console, there will be more than one user identity in the token. If present, the user identity will be an array of claims sets (even if it is an array with one object).</p> <p>The authorization header of the request contains the necessary information to determine which user in the token the request applies to. For additional information about processing tokens with multiple users, see Multi-user tokens below.</p>"},{"location":"xbox-live/xsts-token/#aggregate-identity-xai","title":"Aggregate identity (xai)","text":"<p>The claims in the aggregate identity provide a merged set of values representing all of the users in the token, such as age group (the value matches that of the youngest user) and privileges. Combining these as a separate identity enables the service to make decisions without having to perform the analysis directly, and it ensures that privileges blocked by banning are enforced, something that the service cracking the token wouldn\u2019t be able to determine easily.</p>"},{"location":"xbox-live/xsts-token/#multi-user-tokens","title":"Multi-user tokens","text":"<p>For Xbox One, tokens will contain user identities for any user that is currently signed into the console. This means that the xui claim in the token will be an array containing one or more user objects. In the incoming request, the authorization header will contain the following:</p> <p><code>XBL3.0 x=&lt;user hash&gt;;&lt;token&gt;</code></p> <p>The user hash value will be one of three values:</p> <p>A number that matches the user hash claim of one of the user identities in the token  indicating that the request is for that specific user. </p> <p>An asterisk (*), indicating that the request is for all users contained within the token.  A hyphen (-), indicating that the request is not in the context of any of the users in the token. </p> <p>If the user hash value in the header matches the user/hash claim of one of the user identities in the token, the request is meant for only that user. User hash values are unique to that instance but are not guaranteed to always be the same for a given user in future XSTS tokens. They should not be used as a permanent identifier or cached.</p>"},{"location":"xbox-live/xsts-token/#disclaimer","title":"Disclaimer:","text":"<p>This information was gathered from a publicly accessible Game Development Kit and files dumped from a UWA devkit.</p>"},{"location":"xtf-apis/xtfadditional/","title":"Additional Xtf APIs","text":"<p>The Xbox Tools Framework (XTF) API is used for checking available space for apps and retrieving user friendly error messages.</p>"},{"location":"xtf-apis/xtfadditional/#app-functions","title":"App functions","text":"App function Description     XtfPullAuditionApp Reserved for internal use.   XtfPullRegisterApp Reserved for internal use.   XtfPullSupplyMock Reserved for internal use.   XtfPullUnregisterApp Reserved for internal use."},{"location":"xtf-apis/xtfadditional/#console-info-functions","title":"Console info functions","text":"Console info function Description     XtfCloseConsoleInfoList Frees resources associated with an XtfConsoleInfo object returned by XtfGetConsoleInfoList.   XtfGetAvailableSpaceForAppInstallation Gets the total number of bytes available on the specified storage device of a development console.   XtfGetConsoleFieldValue Retrieves information about a console, one of Tools IP Address, Console IP Address, AccessKey, Console ID, HostName, Device ID, DevKit Cert type, SystemMajorVersion, SystemMinorVersion, SystemBuildVersion, or SystemRevisionVersion.   XtfGetConsoleInfoList Returns an XtfConsoleInfo object that contains information about a console.   XtfGetSavedConsoleAddress Gets the Tools IP address of the default console for Xbox Tools Framework (XTF) apps.   XtfGetSystemUpTime Gets the amount of time in milliseconds that the System has been up."},{"location":"xtf-apis/xtfadditional/#credentials-functions","title":"Credentials functions","text":"Credential function Description     XtfAddCredential Adds credentials (user name and password) to the given console for use by Run from PC Deployment.   XtfCloseCredentialInfoList Frees resources associated with an XtfNetworkCredentials object returned by XtfGetCredentialInfoList.   XtfGetCredentialInfoCount Gets the count of credentials stored in an XtfNetworkCredentials object returned by XtfGetCredentialInfoList.   XtfGetCredentialInfoList Returns an XtfNetworkCredentials object that contains the list of credentials currently stored on the console.   XtfGetCredentialServerName Gets the server name part of the credentials stored at an index in an XtfNetworkCredentials object returned by XtfGetCredentialInfoList.   XtfGetCredentialUserName Gets the user name part of the credentials stored at an index in an XtfNetworkCredentials object returned by XtfGetCredentialInfoList.   XtfRemoveCredential Removes credentials from the given console. Use XtfAddCredential add credentials."},{"location":"xtf-apis/xtfadditional/#debug-functions","title":"Debug functions","text":"Debug function Description     XtfCaptureOutputBegin Starts capture of debug output.   XtfCaptureOutputEnd Stop capture debug output.   XtfDebugStringCallback Callback invoked for each output debug string captured.   XtfDebugStringErrorCallback Callback invoked for each error captured.   XtfGetErrorText Gets a user-friendly error message and action text."},{"location":"xtf-apis/xtfadditional/#game-clip-functions","title":"Game clip functions","text":"Game clip function Description     XtfCaptureRecordedGameClip Captures a video clip from the currently running game."},{"location":"xtf-apis/xtfadditional/#package-info-functions","title":"Package info functions","text":"Package info function Description     XtfClosePackageInfo Frees a package information object.   XtfGetAumid Gets the application model user ID at an index from a package information object.   XtfGetCountofAppUserModelIds Gets the count of application user model IDs from a package information object.   XtfGetPackageFullName Get the full package name from a package information object.   XtfRegisterAllPackagesOnDrive Register all packages deployed on the specified drive.   XtfRegisterNetworkSharePackage Registers a package for Run from PC Deployment.   XtfRegisterPackage Registers a package deployed to the title scratch drive.   XtfRegisterPackageOnDrive Registers a package deployed on the specified drive.   XtfUnregisterPackage Unregisters a package deployed to the title scratch drive."},{"location":"xtf-apis/xtfadditional/#titleos-functions","title":"TitleOS functions","text":"TitleOS function Description     XtfCacheTitleOS Adds a Game OS to the OS cache.   XtfGetCachedTitleOSVersions Gets the version information of each Game OS cached on the console.   XtfGetCachedTitleOSVersionsCallback Callback invoked for each Game OS found by XtfGetCachedTitleOSVersions.   XtfGetTitleOSFourPartVersion Gets version information about the Game OS for the currently running title.   XtfGetTitleOSState Query the state of the Title OS, Fast Iteration Mode, running Title, associate PID, and Package information.   XtfGetTitleProcessMemoryReports Reserved for internal use.   XtfRemoveTitleOSFromCache Removes a Game OS from the cache on the console.   XtfRemoveTitleOSFromCacheByVersion Removes the Game OS matching the specified FourPartVersion from the cache on the console.   XtfShutdownTitleOS Shuts down the active title and Game OS.   XtfStartTitleOS Starts or restarts the specified Game OS.   XtfStartTitleOSByGameConfig Starts or restarts the Game OS based on the contents of a MicrosoftGame.config file that is stored in memory as a string.   XtfStartTitleOSByVersion Starts or restarts the Game OS matching the specified FourPartVersion from the cache on the console."},{"location":"xtf-apis/xtfadditional/#overlay-folder-functions","title":"Overlay Folder functions","text":"Overlay Folder Function Description     XtfClearAllOverlayFolders Clears the Overlay Folder paths for all packages installed/registered on the console.   XtfGetOverlayFolder Gets the Overlay Folder path for a specified package.   XtfSetOverlayFolder Sets the Overlay Folder path for a specified package."},{"location":"xtf-apis/xtfadditional/#structures","title":"Structures","text":"Structure Description     FourPartVersion The four-part version number of a Game OS."},{"location":"xtf-apis/xtfadditional/#enumerations","title":"Enumerations","text":"Enumeration Description     XtfConsoleCertType Enumeration Reserved for internal use.   XtfConsoleFieldId Enumeration Identifies the value to return from XtfGetConsoleFieldValue.   XtfConsoleFieldType Enumeration Identifies the type of the value returned from XtfGetConsoleFieldValue."},{"location":"xtf-apis/xtfapplication/","title":"Xtfapplication","text":""},{"location":"xtf-apis/xtfapplication/#xtfapplication","title":"XtfApplication","text":"<p>The Xbox Tools Framework (XTF) API that is used to automate application management.</p>"},{"location":"xtf-apis/xtfapplication/#interfaces","title":"Interfaces","text":"Interface Description     IXtfApplicationClient Represents an Xbox Tools Framework (XTF) app client.   IXtfDeployCallback Provides a callback that is called when a trackable action occurs during an IXtfApplicationClient::Deploy Method operation."},{"location":"xtf-apis/xtfapplication/#functions","title":"Functions","text":"Function Description     XtfCreateApplicationClient Initializes a new instance of the IXtfApplicationClient interface for the development console with the specified address."},{"location":"xtf-apis/xtfconsolecontrol/","title":"Xtfconsolecontrol","text":""},{"location":"xtf-apis/xtfconsolecontrol/#xtfconsolecontrol","title":"XtfConsoleControl","text":"<p>The Xbox Tools Framework (XTF) API that is used to get information about and manage a development console.</p>"},{"location":"xtf-apis/xtfconsolecontrol/#interfaces","title":"Interfaces","text":"Interface Description     IXtfConfigSettingsCallback Represents an Xbox Tools Framework (XTF) app client.   IXtfConsoleControlClient Represents an Xbox Tools Framework (XTF) development console client.   IXtfRunningProcessCallback Provides a callback that is called when a running process is found during an IXtfConsoleControlClient::GetRunningProcesses Method operation."},{"location":"xtf-apis/xtfconsolecontrol/#functions","title":"Functions","text":"Function Description     XtfCaptureScreenshot Captures the current screen display of the specified development console as a bitmap.   XtfCreateConsoleControlClient Initializes a new instance of the IXtfConsoleControlClient interface with the specified address."},{"location":"xtf-apis/xtfconsolecontrol/#structures","title":"Structures","text":"Structure Description     XTFCONFIGSETTING Describes a configuration setting for a console.   XTFPROCESSINFO Contains information about a running Xbox Tools Framework (XTF) process.   XTFSYSTEMTIME Contains system time information for Xbox Tools Framework (XTF) apps."},{"location":"xtf-apis/xtfconsolemanager/","title":"XtfConsoleManager","text":"<p>The Xbox Tools Framework (XTF) API that is used to get the default development console or to manage a collection of development consoles.</p>"},{"location":"xtf-apis/xtfconsolemanager/#interfaces","title":"Interfaces","text":"Interface Description     IXtfConsoleManager Manages development consoles for Xbox Tools Framework (XTF) apps.   IXtfConsoleManagerCallback Provides callbacks that are used when a development console in an IXtfConsoleManager instance is added or removed, or when the default development console is changed.   IXtfEnumerateConsolesCallback Provides callbacks that are used when a development console is found during an IXtfConsoleManager::EnumerateConsoles operation."},{"location":"xtf-apis/xtfconsolemanager/#functions","title":"Functions","text":"Function Description     XtfCreateConsoleManager Initializes a new instance of the IXtfConsoleManager interface.   XtfGetDefaultAddress Returns the IP address of the default development console for this PC."},{"location":"xtf-apis/xtfconsolemanager/#structures","title":"Structures","text":"Structure Description     XTFCONSOLEDATA Contains information about a development console in an IXtfConsoleManager instance."},{"location":"xtf-apis/xtfdebugmonitor/","title":"XtfDebugMonitor","text":"<p>Xbox Tools Framework (XTF) API that is used to receive debug output from an app or game running on a development console.</p>"},{"location":"xtf-apis/xtfdebugmonitor/#interfaces","title":"Interfaces","text":"Interface Description     IXtfDebugMonitorCallback Provides a callback that is used when an Xbox Tools Framework (XTF) app sends debug output.   IXtfDebugMonitorClient Receives debug output from Xbox Tools Framework (XTF) apps."},{"location":"xtf-apis/xtfdebugmonitor/#functions","title":"Functions","text":"Function Description     XtfCreateDebugMonitorClient Initializes a new instance of the IXtfDebugMonitorClient Interface interface."},{"location":"xtf-apis/xtfdebugmonitor/#structures","title":"Structures","text":"Structure Description     XTF_OUTPUT_DEBUG_STRING_DATA structure Contains debug output string data."},{"location":"xtf-apis/xtffileio/","title":"XtfFileIO","text":"<p>The Xbox Tools Framework (XTF) API that is used to manage files on a development console.</p>"},{"location":"xtf-apis/xtffileio/#interfaces","title":"Interfaces","text":"Interface Description     IXtfBatchFileIOClient Batch copies files between two locations on a development console.   IXtfCopyFileCallback Provides callbacks that are used when the status of an IXtfFileIOClient::CopyFiles Method or IXtfBatchFileIOClient::CopyFiles Method operation changes.   IXtfFileIOClient Represents an Xbox Tools Framework (XTF) file I/O client.   IXtfFindFileCallback Provides a callback that is used when a file is found during a find or delete operation."},{"location":"xtf-apis/xtffileio/#functions","title":"Functions","text":"Function Description     XtfCreateFileIOClient Initializes a new instance of the IXtfFileIOClient interface with the specified address."},{"location":"xtf-apis/xtffileio/#structures","title":"Structures","text":"Structure Description     XTFFILEINFO Contains information about a file for Xbox Tools Framework (XTF) apps.   XTFFILEIORESERVED Reserved for internal use."},{"location":"xtf-apis/xtfinput/","title":"XtfInput","text":"<p>The Xbox Tools Framework (XTF) API that is used to simulate controller input on a development console.</p>"},{"location":"xtf-apis/xtfinput/#interfaces","title":"Interfaces","text":"Interface Description     IXtfInputClient Represents an XTF input client."},{"location":"xtf-apis/xtfinput/#functions","title":"Functions","text":"Function Description     XtfCreateInputClient Initializes a new instance of the IXtfInputClient interface with the specified address."},{"location":"xtf-apis/xtfinput/#structures","title":"Structures","text":"Structure Description     GAMEPAD_REPORT structure A snapshot of the state of a controller.   GAMEPAD_REPORT_EX A snapshot of the state of a controller with extended information."},{"location":"xtf-apis/xtfinput/#enumerations","title":"Enumerations","text":"Enumeration Description     GAMEPAD_BUTTONS Controller button identifier flags.   GAMEPAD_MORE_BUTTONS TBD"},{"location":"xtf-apis/xtfremoterun/","title":"XtfRemoteRun","text":"<p>The Xbox Tools Framework (XTF) API that is used to run utility executables on a development console.</p>"},{"location":"xtf-apis/xtfremoterun/#interfaces","title":"Interfaces","text":"Interface Description     IXtfRemoteRunCallback Provides callbacks to be used when standard input or standard output of a remote executable are redirected by IXtfRemoteRunClient::Run Method.   IXtfRemoteRunClient Provides the ability to run an executable remotely on a development console."},{"location":"xtf-apis/xtfremoterun/#functions","title":"Functions","text":"Function Description     XtfCreateRemoteRunClient Initializes a new instance of the IXtfRemoteRunClient interface with the specified address."},{"location":"xtf-apis/xtfuser/","title":"XtfUser","text":"<p>The Xbox Tools Framework (XTF) API that is used to manage users on a development console.</p>"},{"location":"xtf-apis/xtfuser/#interfaces","title":"Interfaces","text":"Interface Description     IXtfUserClient Represents an Xbox Tools Framework (XTF) user client."},{"location":"xtf-apis/xtfuser/#functions","title":"Functions","text":"Function Description     XtfCreateUserClient Initializes a new instance of the IXtfUserClient interface with the specified address."},{"location":"xtf-apis/xtfuser/#structures","title":"Structures","text":"Structure Description     XTF_USER_DATA Describes a simulated user."}]}